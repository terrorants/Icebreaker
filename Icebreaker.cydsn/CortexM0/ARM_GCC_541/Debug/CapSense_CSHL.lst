ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_BaseInit,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_BaseInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_BaseInit, %function
  25              	CapSense_BaseInit:
  26              	.LFB33:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_CSHL.c"
   1:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC4/CapSense_CSHL.c **** * Version 2.60
   4:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC4/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC4/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC4/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC4/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CapSense_CSHL.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC4/CapSense_CSHL.c **** #include "CapSense_PVT.h"
  20:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  21:Generated_Source\PSoC4/CapSense_CSHL.c **** /* SmartSense functions */
  22:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  23:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern void CapSense_UpdateThresholds(uint32 sensor);
  24:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  25:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  26:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Storage of filters data */
  27:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
  28:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) )
  29:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  30:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 2


  31:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  32:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  33:Generated_Source\PSoC4/CapSense_CSHL.c **** #elif ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER))   || \
  34:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER))   || \
  35:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
  36:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))   || \
  37:Generated_Source\PSoC4/CapSense_CSHL.c ****         (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)) )
  38:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  39:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  40:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  41:Generated_Source\PSoC4/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  42:Generated_Source\PSoC4/CapSense_CSHL.c ****         */
  43:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  44:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT];
  45:Generated_Source\PSoC4/CapSense_CSHL.c **** extern uint8 CapSense_sensorEnableMask[CapSense_TOTAL_SENSOR_MASK];
  46:Generated_Source\PSoC4/CapSense_CSHL.c **** extern const uint8 CapSense_widgetNumber[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
  49:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern uint32 CapSense_widgetResolution[CapSense_RESOLUTIONS_TBL_SIZE];
  50:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
  51:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  53:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  54:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT] = {0u};
  55:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[CapSense_TOTAL_SENSOR_MASK] = {0u};
  56:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  57:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  58:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_lowBaselineReset[CapSense_TOTAL_SENSOR_COUNT] = {
  59:Generated_Source\PSoC4/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  61:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  62:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  63:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
  65:Generated_Source\PSoC4/CapSense_CSHL.c ****     extern CapSense_CONFIG_TYPE_P4_v2_60 CapSense_config;
  66:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
  67:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
  69:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
  70:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
  71:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  72:Generated_Source\PSoC4/CapSense_CSHL.c **** /* Generated by Customizer */
  73:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_fingerThreshold[] = {
  74:Generated_Source\PSoC4/CapSense_CSHL.c ****     100u, 200u, 200u, 200u, 200u, 100u, 
  75:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  76:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  77:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_noiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  78:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  79:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_negativeNoiseThreshold[CapSense_THRESHOLD_TBL_SIZE];
  80:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  81:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_hysteresis[CapSense_WIDGET_PARAM_TBL_SIZE];
  82:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  83:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  84:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 2u, 2u, 2u, 2u, 1u, 
  85:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  86:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  87:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_debounceCounter[] = {
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 3


  88:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 
  89:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  90:Generated_Source\PSoC4/CapSense_CSHL.c **** 
  91:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_rawDataIndex[] = {
  92:Generated_Source\PSoC4/CapSense_CSHL.c ****     5u, /* RadialSlider0__RS */
  93:Generated_Source\PSoC4/CapSense_CSHL.c ****     0u, /* Left__BTN */
  94:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Right__BTN */
  95:Generated_Source\PSoC4/CapSense_CSHL.c ****     2u, /* Up__BTN */
  96:Generated_Source\PSoC4/CapSense_CSHL.c ****     3u, /* Down__BTN */
  97:Generated_Source\PSoC4/CapSense_CSHL.c ****     4u, /* Centre__BTN */
  98:Generated_Source\PSoC4/CapSense_CSHL.c **** };
  99:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 100:Generated_Source\PSoC4/CapSense_CSHL.c **** const uint8 CapSense_numberOfSensors[] = {
 101:Generated_Source\PSoC4/CapSense_CSHL.c ****     8u, /* RadialSlider0__RS */
 102:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Left__BTN */
 103:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Right__BTN */
 104:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Up__BTN */
 105:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Down__BTN */
 106:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, /* Centre__BTN */
 107:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 108:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 109:Generated_Source\PSoC4/CapSense_CSHL.c **** static const uint16 CapSense_centroidMult[] = {
 110:Generated_Source\PSoC4/CapSense_CSHL.c ****     6400u, 
 111:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 112:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 113:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersMask[] = {
 114:Generated_Source\PSoC4/CapSense_CSHL.c ****     0x1u, 
 115:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 116:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 117:Generated_Source\PSoC4/CapSense_CSHL.c **** static uint8 CapSense_posFiltersData[] = {
 118:Generated_Source\PSoC4/CapSense_CSHL.c ****     1u, 0u, 0u, 0u, 
 119:Generated_Source\PSoC4/CapSense_CSHL.c **** };
 120:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 121:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 122:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 123:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 124:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 125:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 126:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 127:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 128:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 129:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 130:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value.
 131:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and
 132:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 133:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and
 134:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an
 135:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 136:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 137:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 138:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 139:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 140:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 141:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 142:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 143:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 144:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store the baseline value.
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 4


 145:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store the fraction byte of
 146:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the baseline value.
 147:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store a difference between
 148:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 149:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store a previous sample of
 150:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 151:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before a previous sample
 152:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 153:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 154:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 155:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 156:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 157:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 158:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_BaseInit(uint32 sensor)
 159:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  28              		.loc 1 159 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
 160:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 161:Generated_Source\PSoC4/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 162:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
  38              		.loc 1 162 0
  39 0002 0C4B     		ldr	r3, .L3
  40 0004 1A5C     		ldrb	r2, [r3, r0]
  41              	.LVL1:
 163:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 164:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 165:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 166:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 debounceIndex;
 167:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 168:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 169:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 170:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 171:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 172:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 173:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 174:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 175:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline */
 176:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
  42              		.loc 1 176 0
  43 0006 4400     		lsls	r4, r0, #1
  44 0008 0B4B     		ldr	r3, .L3+4
  45 000a E15A     		ldrh	r1, [r4, r3]
  46 000c 0B4B     		ldr	r3, .L3+8
  47 000e E152     		strh	r1, [r4, r3]
 177:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
  48              		.loc 1 177 0
  49 0010 1B18     		adds	r3, r3, r0
  50 0012 0024     		movs	r4, #0
  51 0014 1C77     		strb	r4, [r3, #28]
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 5


 178:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
  52              		.loc 1 178 0
  53 0016 2C25     		movs	r5, #44
  54 0018 5C55     		strb	r4, [r3, r5]
 179:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 180:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(widget > CapSense_END_OF_TOUCH_PAD_INDEX)
  55              		.loc 1 180 0
  56 001a 002A     		cmp	r2, #0
  57 001c 06D0     		beq	.L2
 181:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 182:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1u)] =  CapSense_debou
  58              		.loc 1 182 0
  59 001e 531E     		subs	r3, r2, #1
  60 0020 074C     		ldr	r4, .L3+12
  61 0022 A45C     		ldrb	r4, [r4, r2]
  62 0024 054A     		ldr	r2, .L3+8
  63              	.LVL2:
  64 0026 D318     		adds	r3, r2, r3
  65              	.LVL3:
  66 0028 3C22     		movs	r2, #60
  67 002a 9C54     		strb	r4, [r3, r2]
  68              	.L2:
 183:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 186:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if ((0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) ||\
 187:Generated_Source\PSoC4/CapSense_CSHL.c ****          (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)))
 188:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 189:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 190:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 191:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 192:Generated_Source\PSoC4/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) ||\
 193:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) ||\
 194:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) ||\
 195:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) ||\
 196:Generated_Source\PSoC4/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 197:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 198:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
  69              		.loc 1 198 0
  70 002c 4000     		lsls	r0, r0, #1
  71              	.LVL4:
  72 002e 054B     		ldr	r3, .L3+16
  73 0030 C152     		strh	r1, [r0, r3]
 199:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 200:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 201:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* No Raw filters */
 202:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
 203:Generated_Source\PSoC4/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 204:Generated_Source\PSoC4/CapSense_CSHL.c ****             */
 205:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 206:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 207:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 208:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 209:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 210:Generated_Source\PSoC4/CapSense_CSHL.c **** }
  74              		.loc 1 210 0
  75              		@ sp needed
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 6


  76 0032 30BD     		pop	{r4, r5, pc}
  77              	.L4:
  78              		.align	2
  79              	.L3:
  80 0034 00000000 		.word	CapSense_widgetNumber
  81 0038 00000000 		.word	CapSense_sensorRaw
  82 003c 00000000 		.word	.LANCHOR0
  83 0040 00000000 		.word	.LANCHOR1
  84 0044 00000000 		.word	CapSense_rawFilterData1
  85              		.cfi_endproc
  86              	.LFE33:
  87              		.size	CapSense_BaseInit, .-CapSense_BaseInit
  88              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
  89              		.align	2
  90              		.global	CapSense_InitializeSensorBaseline
  91              		.code	16
  92              		.thumb_func
  93              		.type	CapSense_InitializeSensorBaseline, %function
  94              	CapSense_InitializeSensorBaseline:
  95              	.LFB34:
 211:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 212:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 213:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 215:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 216:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 217:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 218:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an
 219:Generated_Source\PSoC4/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 220:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 221:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 222:Generated_Source\PSoC4/CapSense_CSHL.c **** *  enabled.
 223:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 224:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 225:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 226:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 227:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 228:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 229:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 230:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 231:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 232:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 233:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 234:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 235:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 236:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 237:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint32 sensor)
 238:Generated_Source\PSoC4/CapSense_CSHL.c **** {
  96              		.loc 1 238 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              	.LVL5:
 101 0000 10B5     		push	{r4, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 4, -8
 104              		.cfi_offset 14, -4
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 7


 105 0002 0400     		movs	r4, r0
 239:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Scan sensor */
 240:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 106              		.loc 1 240 0
 107 0004 FFF7FEFF 		bl	CapSense_ScanSensor
 108              	.LVL6:
 109              	.L6:
 241:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 110              		.loc 1 241 0 discriminator 1
 111 0008 FFF7FEFF 		bl	CapSense_IsBusy
 112              	.LVL7:
 113 000c 0028     		cmp	r0, #0
 114 000e FBD1     		bne	.L6
 242:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 243:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
 244:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 245:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 246:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 247:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_BaseInit(sensor);
 115              		.loc 1 247 0
 116 0010 2000     		movs	r0, r4
 117 0012 FFF7FEFF 		bl	CapSense_BaseInit
 118              	.LVL8:
 248:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 119              		.loc 1 248 0
 120              		@ sp needed
 121              	.LVL9:
 122 0016 10BD     		pop	{r4, pc}
 123              		.cfi_endproc
 124              	.LFE34:
 125              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 126              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 127              		.align	2
 128              		.global	CapSense_InitializeAllBaselines
 129              		.code	16
 130              		.thumb_func
 131              		.type	CapSense_InitializeAllBaselines, %function
 132              	CapSense_InitializeAllBaselines:
 133              	.LFB35:
 249:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 250:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 251:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 252:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 253:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 254:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 255:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 256:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to load the
 257:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning
 258:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 259:Generated_Source\PSoC4/CapSense_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 260:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 261:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 262:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 263:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 264:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 265:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 266:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 8


 267:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 268:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 269:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 270:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 271:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 272:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 273:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 274:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 275:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 134              		.loc 1 275 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 10B5     		push	{r4, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 4, -8
 141              		.cfi_offset 14, -4
 142              	.LVL10:
 276:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 277:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 278:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 143              		.loc 1 278 0
 144 0002 0024     		movs	r4, #0
 145 0004 03E0     		b	.L8
 146              	.LVL11:
 147              	.L9:
 279:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 280:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 148              		.loc 1 280 0 discriminator 3
 149 0006 2000     		movs	r0, r4
 150 0008 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 151              	.LVL12:
 278:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 152              		.loc 1 278 0 discriminator 3
 153 000c 0134     		adds	r4, r4, #1
 154              	.LVL13:
 155              	.L8:
 278:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 156              		.loc 1 278 0 is_stmt 0 discriminator 1
 157 000e 0C2C     		cmp	r4, #12
 158 0010 F9D9     		bls	.L9
 281:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 282:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 159              		.loc 1 282 0 is_stmt 1
 160              		@ sp needed
 161              	.LVL14:
 162 0012 10BD     		pop	{r4, pc}
 163              		.cfi_endproc
 164              	.LFE35:
 165              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 166              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 167              		.align	2
 168              		.global	CapSense_InitializeEnabledBaselines
 169              		.code	16
 170              		.thumb_func
 171              		.type	CapSense_InitializeEnabledBaselines, %function
 172              	CapSense_InitializeEnabledBaselines:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 9


 173              	.LFB36:
 283:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 284:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 285:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 287:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 288:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 289:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 290:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 291:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 292:Generated_Source\PSoC4/CapSense_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 293:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 294:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 295:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 296:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 297:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 298:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 299:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 300:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 301:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 302:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorRaw[] - used to store the sensors raw data.
 303:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 304:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 305:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 306:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 307:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 308:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 309:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 310:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 174              		.loc 1 310 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 10B5     		push	{r4, lr}
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 4, -8
 181              		.cfi_offset 14, -4
 311:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 312:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 313:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 314:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 182              		.loc 1 314 0
 183 0002 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 184              	.LVL15:
 185              	.L11:
 315:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 186              		.loc 1 315 0 discriminator 1
 187 0006 FFF7FEFF 		bl	CapSense_IsBusy
 188              	.LVL16:
 189 000a 0028     		cmp	r0, #0
 190 000c FBD1     		bne	.L11
 191 000e 0024     		movs	r4, #0
 192 0010 09E0     		b	.L12
 193              	.LVL17:
 194              	.L14:
 316:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 317:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Wait while sensor is busy */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 10


 318:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 319:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 320:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 321:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 322:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 195              		.loc 1 322 0
 196 0012 2100     		movs	r1, r4
 197 0014 0548     		ldr	r0, .L15
 198 0016 FFF7FEFF 		bl	CapSense_GetBitValue
 199              	.LVL18:
 323:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 324:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 325:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(isSensorEnabled != 0u)
 200              		.loc 1 325 0
 201 001a 0028     		cmp	r0, #0
 202 001c 02D0     		beq	.L13
 326:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 327:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Initialize baselines */
 328:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(i);
 203              		.loc 1 328 0
 204 001e 2000     		movs	r0, r4
 205              	.LVL19:
 206 0020 FFF7FEFF 		bl	CapSense_BaseInit
 207              	.LVL20:
 208              	.L13:
 320:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 209              		.loc 1 320 0 discriminator 2
 210 0024 0134     		adds	r4, r4, #1
 211              	.LVL21:
 212              	.L12:
 320:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 213              		.loc 1 320 0 is_stmt 0 discriminator 1
 214 0026 0C2C     		cmp	r4, #12
 215 0028 F3D9     		bls	.L14
 329:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 330:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 331:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 216              		.loc 1 331 0 is_stmt 1
 217              		@ sp needed
 218              	.LVL22:
 219 002a 10BD     		pop	{r4, pc}
 220              	.L16:
 221              		.align	2
 222              	.L15:
 223 002c 00000000 		.word	CapSense_sensorEnableMask
 224              		.cfi_endproc
 225              	.LFE36:
 226              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 227              		.section	.text.CapSense_GetBaselineData,"ax",%progbits
 228              		.align	2
 229              		.global	CapSense_GetBaselineData
 230              		.code	16
 231              		.thumb_func
 232              		.type	CapSense_GetBaselineData, %function
 233              	CapSense_GetBaselineData:
 234              	.LFB41:
 332:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 11


 333:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 334:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 335:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateBaselineNoThreshold
 336:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 337:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 338:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 346:Generated_Source\PSoC4/CapSense_CSHL.c **** *  than noise threshold.
 347:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 349:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 350:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 351:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 352:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 353:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 354:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 355:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 356:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 357:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 358:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 359:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
 360:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 361:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of
 362:Generated_Source\PSoC4/CapSense_CSHL.c **** *  baseline value.
 363:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store difference between
 364:Generated_Source\PSoC4/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 365:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of
 366:Generated_Source\PSoC4/CapSense_CSHL.c **** *  any enabled raw data filter.
 367:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 368:Generated_Source\PSoC4/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 369:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 370:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 371:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 372:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 373:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 374:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateBaselineNoThreshold(uint32 sensor)
 375:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 376:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 377:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sign;
 378:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 tempRaw;
 379:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 filteredRawData;
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 381:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 382:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 383:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 384:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 385:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 386:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 387:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 388:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****     noiseThreshold = CapSense_noiseThreshold[widget];
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 12


 390:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 391:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 392:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK != 0u)
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(CapSense_enableRawFilters != 0u)
 394:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 395:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 396:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 397:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor
 398:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                             CapSense_rawFilterData2[sensor]);
 399:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 400:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 401:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 402:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 403:Generated_Source\PSoC4/CapSense_CSHL.c ****             tempRaw = filteredRawData;
 404:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sen
 405:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                CapSense_rawFilterData2[sensor]);
 406:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 407:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = tempRaw;
 408:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 409:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 410:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 411:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 412:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 413:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 415:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 416:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 417:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 418:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor
 419:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 420:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 421:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 422:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor])
 423:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 425:Generated_Source\PSoC4/CapSense_CSHL.c ****         #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 426:Generated_Source\PSoC4/CapSense_CSHL.c ****             filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]
 427:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
 428:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 429:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 430:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No Raw filters */
 431:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 432:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 433:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK != 0u) */
 434:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 435:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_60(&CapSense_config, (uint8)sensor, CapSense_sensorRaw);
 437:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 438:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 439:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Baseline calculation */
 440:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 442:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineResetCnt[sensor] = 0u;
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 446:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 13


 447:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 448:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 451:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 452:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 453:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_negativeNoiseThreshold[widget]))
 455:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 456:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 457:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 458:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_lowBaselineReset[sensor])
 460:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 463:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 464:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
 465:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 467:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 468:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 469:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 470:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 471:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 472:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 473:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 477:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 478:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 479:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 480:Generated_Source\PSoC4/CapSense_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 481:Generated_Source\PSoC4/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 482:Generated_Source\PSoC4/CapSense_CSHL.c ****                    && (sign == 0u)))
 483:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 484:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 485:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 486:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 488:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 489:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 490:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 491:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc += filteredRawData;
 492:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 493:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 494:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 495:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 496:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 498:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 499:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 501:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 502:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 503:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 14


 504:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 505:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 506:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 508:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 509:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 510:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 512:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 513:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 514:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 515:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
 516:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 517:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 518:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 519:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
 520:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 521:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 522:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 523:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
 524:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 525:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Signal is zero */
 526:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 527:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 528:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 529:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 530:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 531:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 532:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 534:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 535:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 536:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 537:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 538:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 539:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 540:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 541:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the
 542:Generated_Source\PSoC4/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 543:Generated_Source\PSoC4/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 544:Generated_Source\PSoC4/CapSense_CSHL.c **** *  it in CapSense_sensorSignal[sensor].
 545:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 546:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 547:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 548:Generated_Source\PSoC4/CapSense_CSHL.c **** *  if signal is less than noise threshold.
 549:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 550:Generated_Source\PSoC4/CapSense_CSHL.c **** *  calculation.
 551:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 552:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 553:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 554:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 555:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 556:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 557:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 558:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 559:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 560:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 15


 561:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 562:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 563:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 564:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 565:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 566:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint32 sensor)
 567:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 568:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 569:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 widget;
 570:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 571:Generated_Source\PSoC4/CapSense_CSHL.c ****         widget = CapSense_widgetNumber[sensor];
 572:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 573:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 574:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 575:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 576:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 577:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 578:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)
 579:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_UpdateThresholds(sensor);
 580:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 581:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 582:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_UpdateBaselineNoThreshold(sensor);
 583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 584:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 585:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Exclude generic widget */
 586:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 587:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 589:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 590:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 591:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 592:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 593:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 594:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 595:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 596:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 597:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 598:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors.
 599:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 600:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 601:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 602:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 603:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 604:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 605:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 606:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 607:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 608:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 609:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 610:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 611:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 612:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 613:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 614:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 615:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 616:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 617:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 16


 618:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 619:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 620:Generated_Source\PSoC4/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 621:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 622:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 623:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 624:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 625:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 626:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 627:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 628:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 629:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 630:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 631:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 632:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 633:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 635:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 636:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 637:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_UpdateWidgetBaseline
 638:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 639:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 640:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 641:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the
 642:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines
 643:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for the enabled sensors that belong to widget.
 644:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 645:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 646:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  Widget number.
 647:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 648:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 649:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 650:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 651:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 652:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
 653:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
 654:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
 655:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 656:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
 657:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 658:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 659:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 660:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 661:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 662:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 663:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 664:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 665:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_UpdateWidgetBaseline(uint32 widget)
 666:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 667:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 668:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 firstSensor;
 669:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 lastSensor;
 670:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 671:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 isSensorEnabled;
 672:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 673:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get number of sensors in widget */
 674:Generated_Source\PSoC4/CapSense_CSHL.c ****     sensorsPerWidget = CapSense_numberOfSensors[widget];
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 17


 675:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 676:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get first sensor in widget */
 677:Generated_Source\PSoC4/CapSense_CSHL.c ****     firstSensor = CapSense_rawDataIndex[widget];
 678:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 679:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Get last sensor in widget */
 680:Generated_Source\PSoC4/CapSense_CSHL.c ****     lastSensor = (CapSense_rawDataIndex[widget] + sensorsPerWidget);
 681:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 682:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 683:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 684:Generated_Source\PSoC4/CapSense_CSHL.c ****         isSensorEnabled = CapSense_GetBitValue(CapSense_sensorEnableMask, i);
 685:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 686:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(0u != isSensorEnabled)
 687:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 688:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 689:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 690:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 692:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 694:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 695:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetBaselineData
 696:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 697:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 698:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 699:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the sensor baseline from the component.
 700:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 701:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 702:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 703:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 704:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 705:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 706:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 707:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 708:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with an initial values by scanning
 709:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 710:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 711:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 712:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 713:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 714:Generated_Source\PSoC4/CapSense_CSHL.c **** uint16 CapSense_GetBaselineData(uint32 sensor)
 715:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 235              		.loc 1 715 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 240              	.LVL23:
 716:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorBaseline[sensor]);
 241              		.loc 1 716 0
 242 0000 4000     		lsls	r0, r0, #1
 243              	.LVL24:
 244 0002 014B     		ldr	r3, .L18
 245 0004 185A     		ldrh	r0, [r3, r0]
 717:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 246              		.loc 1 717 0
 247              		@ sp needed
 248 0006 7047     		bx	lr
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 18


 249              	.L19:
 250              		.align	2
 251              	.L18:
 252 0008 00000000 		.word	.LANCHOR0
 253              		.cfi_endproc
 254              	.LFE41:
 255              		.size	CapSense_GetBaselineData, .-CapSense_GetBaselineData
 256              		.section	.text.CapSense_SetBaselineData,"ax",%progbits
 257              		.align	2
 258              		.global	CapSense_SetBaselineData
 259              		.code	16
 260              		.thumb_func
 261              		.type	CapSense_SetBaselineData, %function
 262              	CapSense_SetBaselineData:
 263              	.LFB42:
 718:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 719:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 720:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 721:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetBaselineData
 722:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 723:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 724:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 725:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 726:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 727:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 728:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 729:Generated_Source\PSoC4/CapSense_CSHL.c **** *  data:    Sensor baseline.
 730:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 731:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 732:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 733:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 734:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 735:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] - the array with initial values by scanning
 736:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 737:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 738:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 739:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 740:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 741:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetBaselineData(uint32 sensor, uint16 data)
 742:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 264              		.loc 1 742 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269              	.LVL25:
 743:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = data;
 270              		.loc 1 743 0
 271 0000 4000     		lsls	r0, r0, #1
 272              	.LVL26:
 273 0002 014B     		ldr	r3, .L21
 274 0004 C152     		strh	r1, [r0, r3]
 744:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 275              		.loc 1 744 0
 276              		@ sp needed
 277 0006 7047     		bx	lr
 278              	.L22:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 19


 279              		.align	2
 280              	.L21:
 281 0008 00000000 		.word	.LANCHOR0
 282              		.cfi_endproc
 283              	.LFE42:
 284              		.size	CapSense_SetBaselineData, .-CapSense_SetBaselineData
 285              		.section	.text.CapSense_GetDiffCountData,"ax",%progbits
 286              		.align	2
 287              		.global	CapSense_GetDiffCountData
 288              		.code	16
 289              		.thumb_func
 290              		.type	CapSense_GetDiffCountData, %function
 291              	CapSense_GetDiffCountData:
 292              	.LFB43:
 745:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 746:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 747:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDiffCountData
 749:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 750:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 751:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 752:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function returns the Sensor Signal from the component.
 753:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 754:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 755:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 756:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 757:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 758:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 759:Generated_Source\PSoC4/CapSense_CSHL.c **** *  argument.
 760:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 761:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 762:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 763:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 764:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 765:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 766:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 767:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDiffCountData(uint32 sensor)
 769:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 293              		.loc 1 769 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298              	.LVL27:
 770:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_sensorSignal[sensor]);
 299              		.loc 1 770 0
 300 0000 024B     		ldr	r3, .L24
 301 0002 1818     		adds	r0, r3, r0
 302              	.LVL28:
 303 0004 2C23     		movs	r3, #44
 304 0006 C05C     		ldrb	r0, [r0, r3]
 771:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 305              		.loc 1 771 0
 306              		@ sp needed
 307 0008 7047     		bx	lr
 308              	.L25:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 20


 309 000a C046     		.align	2
 310              	.L24:
 311 000c 00000000 		.word	.LANCHOR0
 312              		.cfi_endproc
 313              	.LFE43:
 314              		.size	CapSense_GetDiffCountData, .-CapSense_GetDiffCountData
 315              		.section	.text.CapSense_SetDiffCountData,"ax",%progbits
 316              		.align	2
 317              		.global	CapSense_SetDiffCountData
 318              		.code	16
 319              		.thumb_func
 320              		.type	CapSense_SetDiffCountData, %function
 321              	CapSense_SetDiffCountData:
 322              	.LFB44:
 772:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 773:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 774:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_SetDiffCountData
 776:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 778:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 781:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 782:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
 783:Generated_Source\PSoC4/CapSense_CSHL.c **** *  value:   Sensor signal.
 784:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 785:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 786:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 787:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 788:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 789:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - the array with difference counts for sensors
 790:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 791:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 793:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 794:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 795:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_SetDiffCountData(uint32 sensor, uint8 value)
 796:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 323              		.loc 1 796 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL29:
 797:Generated_Source\PSoC4/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = value;
 329              		.loc 1 797 0
 330 0000 024B     		ldr	r3, .L27
 331 0002 1818     		adds	r0, r3, r0
 332              	.LVL30:
 333 0004 2C23     		movs	r3, #44
 334 0006 C154     		strb	r1, [r0, r3]
 798:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 335              		.loc 1 798 0
 336              		@ sp needed
 337 0008 7047     		bx	lr
 338              	.L28:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 21


 339 000a C046     		.align	2
 340              	.L27:
 341 000c 00000000 		.word	.LANCHOR0
 342              		.cfi_endproc
 343              	.LFE44:
 344              		.size	CapSense_SetDiffCountData, .-CapSense_SetDiffCountData
 345              		.section	.text.CapSense_GetFingerThreshold,"ax",%progbits
 346              		.align	2
 347              		.global	CapSense_GetFingerThreshold
 348              		.code	16
 349              		.thumb_func
 350              		.type	CapSense_GetFingerThreshold, %function
 351              	CapSense_GetFingerThreshold:
 352              	.LFB45:
 799:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 800:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 801:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 802:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerThreshold
 803:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 804:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 805:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 806:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the finger threshold from the component.
 807:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 808:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 809:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 810:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 811:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 812:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 813:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 814:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 815:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_fingerThreshold[] - This array contains the level of signal
 816:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 817:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 818:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 819:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 820:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 821:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 822:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerThreshold(uint32 widget)
 823:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 353              		.loc 1 823 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		@ link register save eliminated.
 358              	.LVL31:
 824:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_fingerThreshold[widget]);
 359              		.loc 1 824 0
 360 0000 014B     		ldr	r3, .L30
 361 0002 1818     		adds	r0, r3, r0
 362              	.LVL32:
 363 0004 007A     		ldrb	r0, [r0, #8]
 825:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 364              		.loc 1 825 0
 365              		@ sp needed
 366 0006 7047     		bx	lr
 367              	.L31:
 368              		.align	2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 22


 369              	.L30:
 370 0008 00000000 		.word	.LANCHOR1
 371              		.cfi_endproc
 372              	.LFE45:
 373              		.size	CapSense_GetFingerThreshold, .-CapSense_GetFingerThreshold
 374              		.section	.text.CapSense_GetNoiseThreshold,"ax",%progbits
 375              		.align	2
 376              		.global	CapSense_GetNoiseThreshold
 377              		.code	16
 378              		.thumb_func
 379              		.type	CapSense_GetNoiseThreshold, %function
 380              	CapSense_GetNoiseThreshold:
 381              	.LFB46:
 826:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 827:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 828:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 829:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNoiseThreshold
 830:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 831:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 832:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 833:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the noise threshold from the component.
 834:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 835:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 836:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 837:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 838:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 839:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 840:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 841:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 842:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_noiseThreshold[] - This array contains the level of signal
 843:Generated_Source\PSoC4/CapSense_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 844:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 845:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 846:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 847:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 848:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNoiseThreshold(uint32 widget)
 850:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 382              		.loc 1 850 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 387              	.LVL33:
 851:Generated_Source\PSoC4/CapSense_CSHL.c ****     return (CapSense_noiseThreshold[widget]);
 388              		.loc 1 851 0
 389 0000 014B     		ldr	r3, .L33
 390 0002 185C     		ldrb	r0, [r3, r0]
 391              	.LVL34:
 852:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 392              		.loc 1 852 0
 393              		@ sp needed
 394 0004 7047     		bx	lr
 395              	.L34:
 396 0006 C046     		.align	2
 397              	.L33:
 398 0008 00000000 		.word	CapSense_noiseThreshold
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 23


 399              		.cfi_endproc
 400              	.LFE46:
 401              		.size	CapSense_GetNoiseThreshold, .-CapSense_GetNoiseThreshold
 402              		.section	.text.CapSense_GetFingerHysteresis,"ax",%progbits
 403              		.align	2
 404              		.global	CapSense_GetFingerHysteresis
 405              		.code	16
 406              		.thumb_func
 407              		.type	CapSense_GetFingerHysteresis, %function
 408              	CapSense_GetFingerHysteresis:
 409              	.LFB47:
 853:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 854:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 855:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 856:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetFingerHysteresis
 857:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 858:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 859:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 860:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the Hysteresis value from the component.
 861:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 862:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 863:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
 864:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 865:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
 866:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 867:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 868:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 869:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_hysteresis[] - This array contains the hysteresis value
 870:Generated_Source\PSoC4/CapSense_CSHL.c **** *   for each widget.
 871:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 872:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 873:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 874:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 875:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 876:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 877:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetFingerHysteresis(uint32 widget)
 878:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 410              		.loc 1 878 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415              	.LVL35:
 879:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_hysteresis[widget]);
 416              		.loc 1 879 0
 417 0000 014B     		ldr	r3, .L36
 418 0002 185C     		ldrb	r0, [r3, r0]
 419              	.LVL36:
 880:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 420              		.loc 1 880 0
 421              		@ sp needed
 422 0004 7047     		bx	lr
 423              	.L37:
 424 0006 C046     		.align	2
 425              	.L36:
 426 0008 00000000 		.word	CapSense_hysteresis
 427              		.cfi_endproc
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 24


 428              	.LFE47:
 429              		.size	CapSense_GetFingerHysteresis, .-CapSense_GetFingerHysteresis
 430              		.section	.text.CapSense_GetNegativeNoiseThreshold,"ax",%progbits
 431              		.align	2
 432              		.global	CapSense_GetNegativeNoiseThreshold
 433              		.code	16
 434              		.thumb_func
 435              		.type	CapSense_GetNegativeNoiseThreshold, %function
 436              	CapSense_GetNegativeNoiseThreshold:
 437              	.LFB48:
 881:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 882:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 883:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
 884:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetNegativeNoiseThreshold
 885:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
 886:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 887:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
 888:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function reads the negative noise threshold from the component.
 889:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 890:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
 891:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None.
 892:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 893:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return Value:
 894:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the negative noise threshold
 895:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 896:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
 897:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_negativeNoiseThreshold - This variable specifies the negative
 898:Generated_Source\PSoC4/CapSense_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 899:Generated_Source\PSoC4/CapSense_CSHL.c **** *   to the raw count level.
 900:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 901:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
 902:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
 903:Generated_Source\PSoC4/CapSense_CSHL.c **** *
 904:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
 905:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetNegativeNoiseThreshold(uint32 widget)
 906:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 438              		.loc 1 906 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 0, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443              	.LVL37:
 907:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 908:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_negativeNoiseThreshold[widget]);
 444              		.loc 1 908 0
 445 0000 014B     		ldr	r3, .L39
 446 0002 185C     		ldrb	r0, [r3, r0]
 447              	.LVL38:
 909:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
 910:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_NEGATIVE_NOISE_THRESHOLD);
 911:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
 912:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 448              		.loc 1 912 0
 449              		@ sp needed
 450 0004 7047     		bx	lr
 451              	.L40:
 452 0006 C046     		.align	2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 25


 453              	.L39:
 454 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 455              		.cfi_endproc
 456              	.LFE48:
 457              		.size	CapSense_GetNegativeNoiseThreshold, .-CapSense_GetNegativeNoiseThreshold
 458              		.section	.text.CapSense_SetFingerThreshold,"ax",%progbits
 459              		.align	2
 460              		.global	CapSense_SetFingerThreshold
 461              		.code	16
 462              		.thumb_func
 463              		.type	CapSense_SetFingerThreshold, %function
 464              	CapSense_SetFingerThreshold:
 465              	.LFB49:
 913:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 914:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 915:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TUNING_METHOD != CapSense__TUNING_NONE)
 916:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 917:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerThreshold
 918:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 919:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 920:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 921:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 922:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 923:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 924:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensorNumber:  widget index.
 925:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Finger threshold value for the widget.
 926:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 927:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 928:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 929:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 930:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 931:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[] - This array contains the level of signal
 932:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 933:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 934:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 935:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 936:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 937:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 938:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerThreshold(uint32 widget, uint8 value)
 939:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 466              		.loc 1 939 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471              	.LVL39:
 940:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_fingerThreshold[widget] = value;
 472              		.loc 1 940 0
 473 0000 014B     		ldr	r3, .L42
 474 0002 1818     		adds	r0, r3, r0
 475              	.LVL40:
 476 0004 0172     		strb	r1, [r0, #8]
 941:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 477              		.loc 1 941 0
 478              		@ sp needed
 479 0006 7047     		bx	lr
 480              	.L43:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 26


 481              		.align	2
 482              	.L42:
 483 0008 00000000 		.word	.LANCHOR1
 484              		.cfi_endproc
 485              	.LFE49:
 486              		.size	CapSense_SetFingerThreshold, .-CapSense_SetFingerThreshold
 487              		.section	.text.CapSense_SetNoiseThreshold,"ax",%progbits
 488              		.align	2
 489              		.global	CapSense_SetNoiseThreshold
 490              		.code	16
 491              		.thumb_func
 492              		.type	CapSense_SetNoiseThreshold, %function
 493              	CapSense_SetNoiseThreshold:
 494              	.LFB50:
 942:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 943:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 944:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 945:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNoiseThreshold
 946:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 948:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 949:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 951:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Sensor index number.
 953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:   Noise Threshold value for widget.
 954:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 955:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 956:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 957:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 958:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_noiseThreshold[] - This array contains the level of signal
 960:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 962:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 963:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 966:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNoiseThreshold(uint32 widget, uint8 value)
 967:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 495              		.loc 1 967 0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		@ link register save eliminated.
 500              	.LVL41:
 968:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_noiseThreshold[widget] = value;
 501              		.loc 1 968 0
 502 0000 014B     		ldr	r3, .L45
 503 0002 1954     		strb	r1, [r3, r0]
 969:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 504              		.loc 1 969 0
 505              		@ sp needed
 506 0004 7047     		bx	lr
 507              	.L46:
 508 0006 C046     		.align	2
 509              	.L45:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 27


 510 0008 00000000 		.word	CapSense_noiseThreshold
 511              		.cfi_endproc
 512              	.LFE50:
 513              		.size	CapSense_SetNoiseThreshold, .-CapSense_SetNoiseThreshold
 514              		.section	.text.CapSense_SetFingerHysteresis,"ax",%progbits
 515              		.align	2
 516              		.global	CapSense_SetFingerHysteresis
 517              		.code	16
 518              		.thumb_func
 519              		.type	CapSense_SetFingerHysteresis, %function
 520              	CapSense_SetFingerHysteresis:
 521              	.LFB51:
 970:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 971:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 972:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
 973:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetFingerHysteresis
 974:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
 975:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 976:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
 977:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 978:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 979:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
 980:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Hysteresis value for widgets.
 981:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number
 982:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 983:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
 984:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 985:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 986:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
 987:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_hysteresis[] - This array contains the hysteresis value for each widget.
 988:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
 989:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 990:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
 991:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
 992:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
 993:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
 994:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetFingerHysteresis(uint32 widget, uint8 value)
 995:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 522              		.loc 1 995 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 527              	.LVL42:
 996:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_hysteresis[widget] = value;
 528              		.loc 1 996 0
 529 0000 014B     		ldr	r3, .L48
 530 0002 1954     		strb	r1, [r3, r0]
 997:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 531              		.loc 1 997 0
 532              		@ sp needed
 533 0004 7047     		bx	lr
 534              	.L49:
 535 0006 C046     		.align	2
 536              	.L48:
 537 0008 00000000 		.word	CapSense_hysteresis
 538              		.cfi_endproc
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 28


 539              	.LFE51:
 540              		.size	CapSense_SetFingerHysteresis, .-CapSense_SetFingerHysteresis
 541              		.section	.text.CapSense_SetNegativeNoiseThreshold,"ax",%progbits
 542              		.align	2
 543              		.global	CapSense_SetNegativeNoiseThreshold
 544              		.code	16
 545              		.thumb_func
 546              		.type	CapSense_SetNegativeNoiseThreshold, %function
 547              	CapSense_SetNegativeNoiseThreshold:
 548              	.LFB52:
 998:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 999:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1000:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1001:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetNegativeNoiseThreshold
1002:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1003:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1004:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1005:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
1006:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1007:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1008:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
1009:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget number
1010:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1011:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1012:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1013:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1014:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1015:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_negativeNoiseThreshold  - This parameter specifies the negative
1016:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1017:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   the raw count level.
1018:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1019:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1020:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1021:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1022:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1023:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1024:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 549              		.loc 1 1024 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              	.LVL43:
1025:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_negativeNoiseThreshold[widget] = value;
 555              		.loc 1 1025 0
 556 0000 014B     		ldr	r3, .L51
 557 0002 1954     		strb	r1, [r3, r0]
1026:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 558              		.loc 1 1026 0
 559              		@ sp needed
 560 0004 7047     		bx	lr
 561              	.L52:
 562 0006 C046     		.align	2
 563              	.L51:
 564 0008 00000000 		.word	CapSense_negativeNoiseThreshold
 565              		.cfi_endproc
 566              	.LFE52:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 29


 567              		.size	CapSense_SetNegativeNoiseThreshold, .-CapSense_SetNegativeNoiseThreshold
 568              		.section	.text.CapSense_SetDebounce,"ax",%progbits
 569              		.align	2
 570              		.global	CapSense_SetDebounce
 571              		.code	16
 572              		.thumb_func
 573              		.type	CapSense_SetDebounce, %function
 574              	CapSense_SetDebounce:
 575              	.LFB53:
1027:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1028:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1029:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1030:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetDebounce
1031:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1032:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1033:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1034:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the debounce value for a widget.
1035:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1036:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1037:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value:  Debounce value for widget.
1038:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget: widget index.
1039:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1040:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1041:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1042:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1043:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1044:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_debounce[] - This array contains the debounce value for each widget.
1045:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_widgetNumberSld - structure with dynamic sliders' parameters.
1046:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1047:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1048:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1049:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1050:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1051:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetDebounce(uint32 widget, uint8 value)
1052:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 576              		.loc 1 1052 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 0, uses_anonymous_args = 0
 580              		@ link register save eliminated.
 581              	.LVL44:
1053:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounce[widget] = value;
 582              		.loc 1 1053 0
 583 0000 014B     		ldr	r3, .L54
 584 0002 1954     		strb	r1, [r3, r0]
1054:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 585              		.loc 1 1054 0
 586              		@ sp needed
 587 0004 7047     		bx	lr
 588              	.L55:
 589 0006 C046     		.align	2
 590              	.L54:
 591 0008 00000000 		.word	.LANCHOR1
 592              		.cfi_endproc
 593              	.LFE53:
 594              		.size	CapSense_SetDebounce, .-CapSense_SetDebounce
 595              		.section	.text.CapSense_SetLowBaselineReset,"ax",%progbits
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 30


 596              		.align	2
 597              		.global	CapSense_SetLowBaselineReset
 598              		.code	16
 599              		.thumb_func
 600              		.type	CapSense_SetLowBaselineReset, %function
 601              	CapSense_SetLowBaselineReset:
 602              	.LFB54:
1055:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1056:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1057:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1058:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_SetLowBaselineReset
1059:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1060:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1061:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1062:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1063:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1064:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1065:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  value: low baseline reset threshold value.
1066:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensor: Sensor index.
1067:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1068:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return Value:
1069:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1070:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1071:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1072:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_lowBaselineReset[] - This array contains the Baseline update
1073:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold value for each sensor.
1074:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1075:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1076:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1077:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1078:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1079:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_SetLowBaselineReset(uint32 sensor, uint8 value)
1080:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 603              		.loc 1 1080 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL45:
1081:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_lowBaselineReset[sensor] = value;
 609              		.loc 1 1081 0
 610 0000 014B     		ldr	r3, .L57
 611 0002 1818     		adds	r0, r3, r0
 612              	.LVL46:
 613 0004 0174     		strb	r1, [r0, #16]
1082:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 614              		.loc 1 1082 0
 615              		@ sp needed
 616 0006 7047     		bx	lr
 617              	.L58:
 618              		.align	2
 619              	.L57:
 620 0008 00000000 		.word	.LANCHOR1
 621              		.cfi_endproc
 622              	.LFE54:
 623              		.size	CapSense_SetLowBaselineReset, .-CapSense_SetLowBaselineReset
 624              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 31


 625              		.align	2
 626              		.global	CapSense_CheckIsSensorActive
 627              		.code	16
 628              		.thumb_func
 629              		.type	CapSense_CheckIsSensorActive, %function
 630              	CapSense_CheckIsSensorActive:
 631              	.LFB55:
1083:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TUNING_METHOD != CapSense__TUNING_NONE) */
1084:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1085:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1086:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1087:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
1088:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1089:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1090:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1091:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[sensor] array element to the finger
1092:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1093:Generated_Source\PSoC4/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1094:Generated_Source\PSoC4/CapSense_CSHL.c **** *  based on whether the sensor is currently active.
1095:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1096:Generated_Source\PSoC4/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1097:Generated_Source\PSoC4/CapSense_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1098:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This function updates the CapSense_sensorOnMask[] array element.
1099:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1100:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1101:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor:  Sensor number.
1102:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1103:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1104:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1105:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1106:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1107:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorSignal[] - used to store the difference between
1108:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1109:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store the current debounce
1110:Generated_Source\PSoC4/CapSense_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1111:Generated_Source\PSoC4/CapSense_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1112:Generated_Source\PSoC4/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1113:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store the sensors on/off state.
1114:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors
1115:Generated_Source\PSoC4/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1116:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1117:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1118:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor is inactive.
1119:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is active.
1120:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1121:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1122:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1123:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1124:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsSensorActive(uint32 sensor)
1126:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 632              		.loc 1 1126 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 0
 635              		@ frame_needed = 0, uses_anonymous_args = 0
 636              	.LVL47:
 637 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 32


 638              		.cfi_def_cfa_offset 20
 639              		.cfi_offset 4, -20
 640              		.cfi_offset 5, -16
 641              		.cfi_offset 6, -12
 642              		.cfi_offset 7, -8
 643              		.cfi_offset 14, -4
 644 0002 4746     		mov	r7, r8
 645 0004 80B4     		push	{r7}
 646              		.cfi_def_cfa_offset 24
 647              		.cfi_offset 8, -24
 648 0006 0500     		movs	r5, r0
1127:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 widget;
1128:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounce;
1129:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 debounceIndex;
1130:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1131:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 fingerThreshold;
1132:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 hysteresis;
1133:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1134:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1135:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
1136:Generated_Source\PSoC4/CapSense_CSHL.c ****     widget = CapSense_widgetNumber[sensor];
 649              		.loc 1 1136 0
 650 0008 294B     		ldr	r3, .L66
 651 000a 1B5C     		ldrb	r3, [r3, r0]
 652              	.LVL48:
1137:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1138:Generated_Source\PSoC4/CapSense_CSHL.c ****     fingerThreshold = CapSense_fingerThreshold[widget];
 653              		.loc 1 1138 0
 654 000c 294A     		ldr	r2, .L66+4
 655 000e D118     		adds	r1, r2, r3
 656 0010 097A     		ldrb	r1, [r1, #8]
 657 0012 8846     		mov	r8, r1
 658              	.LVL49:
1139:Generated_Source\PSoC4/CapSense_CSHL.c ****     hysteresis = CapSense_hysteresis[widget];
 659              		.loc 1 1139 0
 660 0014 2849     		ldr	r1, .L66+8
 661 0016 CE5C     		ldrb	r6, [r1, r3]
 662              	.LVL50:
1140:Generated_Source\PSoC4/CapSense_CSHL.c ****     debounce = CapSense_debounce[widget];
 663              		.loc 1 1140 0
 664 0018 D75C     		ldrb	r7, [r2, r3]
 665              	.LVL51:
1141:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1142:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (widget < CapSense_TOTAL_CENTROIDS_COUNT)
 666              		.loc 1 1142 0
 667 001a 002B     		cmp	r3, #0
 668 001c 05D1     		bne	.L60
 669              	.LVL52:
1143:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = CapSense_UNUSED_DEBOUNCE_COUNTER_INDEX;
1145:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 670              		.loc 1 1145 0
 671 001e 0122     		movs	r2, #1
 672 0020 264B     		ldr	r3, .L66+12
 673              	.LVL53:
 674 0022 3C33     		adds	r3, r3, #60
 675 0024 5A71     		strb	r2, [r3, #5]
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 33


1144:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_debounceCounter[debounceIndex] = 1u;
 676              		.loc 1 1144 0
 677 0026 0524     		movs	r4, #5
 678 0028 01E0     		b	.L61
 679              	.LVL54:
 680              	.L60:
1146:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1147:Generated_Source\PSoC4/CapSense_CSHL.c ****     else
1148:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1149:Generated_Source\PSoC4/CapSense_CSHL.c ****         debounceIndex = widget - (CapSense_END_OF_TOUCH_PAD_INDEX + 1u);
 681              		.loc 1 1149 0
 682 002a 013B     		subs	r3, r3, #1
 683              	.LVL55:
 684 002c DCB2     		uxtb	r4, r3
 685              	.LVL56:
 686              	.L61:
1150:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1151:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1152:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1153:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Was on */
1154:Generated_Source\PSoC4/CapSense_CSHL.c ****     if (0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor))
 687              		.loc 1 1154 0
 688 002e 2900     		movs	r1, r5
 689 0030 2248     		ldr	r0, .L66+12
 690              	.LVL57:
 691 0032 4430     		adds	r0, r0, #68
 692 0034 FFF7FEFF 		bl	CapSense_GetBitValue
 693              	.LVL58:
 694 0038 0028     		cmp	r0, #0
 695 003a 12D0     		beq	.L62
1155:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1156:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis minus */
1157:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 696              		.loc 1 1157 0
 697 003c 1F4B     		ldr	r3, .L66+12
 698 003e 5B19     		adds	r3, r3, r5
 699 0040 2C22     		movs	r2, #44
 700 0042 9A5C     		ldrb	r2, [r3, r2]
 701 0044 4346     		mov	r3, r8
 702 0046 9B1B     		subs	r3, r3, r6
 703 0048 9A42     		cmp	r2, r3
 704 004a 26DA     		bge	.L63
1158:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1159:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 0u);
 705              		.loc 1 1159 0
 706 004c 1B4E     		ldr	r6, .L66+12
 707              	.LVL59:
 708 004e 3000     		movs	r0, r6
 709 0050 4430     		adds	r0, r0, #68
 710 0052 0022     		movs	r2, #0
 711 0054 2900     		movs	r1, r5
 712 0056 FFF7FEFF 		bl	CapSense_SetBitValue
 713              	.LVL60:
1160:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1161:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 714              		.loc 1 1161 0
 715 005a 3419     		adds	r4, r6, r4
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 34


 716              	.LVL61:
 717 005c 3C23     		movs	r3, #60
 718 005e E754     		strb	r7, [r4, r3]
 719 0060 1BE0     		b	.L63
 720              	.LVL62:
 721              	.L62:
1162:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1163:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1164:Generated_Source\PSoC4/CapSense_CSHL.c ****     else    /* Was off */
1165:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1166:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Hysteresis plus */
1167:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 722              		.loc 1 1167 0
 723 0062 164B     		ldr	r3, .L66+12
 724 0064 5B19     		adds	r3, r3, r5
 725 0066 2C22     		movs	r2, #44
 726 0068 9A5C     		ldrb	r2, [r3, r2]
 727 006a 3300     		movs	r3, r6
 728 006c 4344     		add	r3, r3, r8
 729 006e 9A42     		cmp	r2, r3
 730 0070 0FDB     		blt	.L64
1168:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1169:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 731              		.loc 1 1169 0
 732 0072 3C21     		movs	r1, #60
 733 0074 114B     		ldr	r3, .L66+12
 734 0076 1C19     		adds	r4, r3, r4
 735              	.LVL63:
 736 0078 625C     		ldrb	r2, [r4, r1]
 737 007a 013A     		subs	r2, r2, #1
 738 007c D2B2     		uxtb	r2, r2
 739 007e 6254     		strb	r2, [r4, r1]
1170:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
1171:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(CapSense_debounceCounter[debounceIndex] == 0u)
 740              		.loc 1 1171 0
 741 0080 002A     		cmp	r2, #0
 742 0082 0AD1     		bne	.L63
1172:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1173:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_SetBitValue(CapSense_sensorOnMask, sensor, 1u);
 743              		.loc 1 1173 0
 744 0084 0132     		adds	r2, r2, #1
 745 0086 2900     		movs	r1, r5
 746 0088 1800     		movs	r0, r3
 747 008a 4430     		adds	r0, r0, #68
 748 008c FFF7FEFF 		bl	CapSense_SetBitValue
 749              	.LVL64:
 750 0090 03E0     		b	.L63
 751              	.LVL65:
 752              	.L64:
1174:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1175:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1176:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1177:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1178:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1179:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 753              		.loc 1 1179 0
 754 0092 0A4B     		ldr	r3, .L66+12
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 35


 755 0094 1C19     		adds	r4, r3, r4
 756              	.LVL66:
 757 0096 3C23     		movs	r3, #60
 758 0098 E754     		strb	r7, [r4, r3]
 759              	.LVL67:
 760              	.L63:
1180:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1181:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1182:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1183:Generated_Source\PSoC4/CapSense_CSHL.c ****     return ((uint32)((0u != CapSense_GetBitValue(CapSense_sensorOnMask, sensor)) ? 1u : 0u));
 761              		.loc 1 1183 0
 762 009a 2900     		movs	r1, r5
 763 009c 0748     		ldr	r0, .L66+12
 764 009e 4430     		adds	r0, r0, #68
 765 00a0 FFF7FEFF 		bl	CapSense_GetBitValue
 766              	.LVL68:
 767 00a4 0028     		cmp	r0, #0
 768 00a6 00D0     		beq	.L65
 769 00a8 0120     		movs	r0, #1
 770              	.L65:
1184:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 771              		.loc 1 1184 0 discriminator 4
 772              		@ sp needed
 773              	.LVL69:
 774              	.LVL70:
 775              	.LVL71:
 776 00aa 04BC     		pop	{r2}
 777 00ac 9046     		mov	r8, r2
 778 00ae F0BD     		pop	{r4, r5, r6, r7, pc}
 779              	.L67:
 780              		.align	2
 781              	.L66:
 782 00b0 00000000 		.word	CapSense_widgetNumber
 783 00b4 00000000 		.word	.LANCHOR1
 784 00b8 00000000 		.word	CapSense_hysteresis
 785 00bc 00000000 		.word	.LANCHOR0
 786              		.cfi_endproc
 787              	.LFE55:
 788              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 789              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 790              		.align	2
 791              		.global	CapSense_CheckIsWidgetActive
 792              		.code	16
 793              		.thumb_func
 794              		.type	CapSense_CheckIsWidgetActive, %function
 795              	CapSense_CheckIsWidgetActive:
 796              	.LFB56:
1185:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1186:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1187:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1188:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
1189:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1190:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1191:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1192:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1193:Generated_Source\PSoC4/CapSense_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1194:Generated_Source\PSoC4/CapSense_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 36


1195:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1196:Generated_Source\PSoC4/CapSense_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1197:Generated_Source\PSoC4/CapSense_CSHL.c **** *  is raised by the hysteresis amount.
1198:Generated_Source\PSoC4/CapSense_CSHL.c **** * The debounce counter added to the sensor active transition.
1199:Generated_Source\PSoC4/CapSense_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1200:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1201:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1202:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1203:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1204:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1205:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1206:Generated_Source\PSoC4/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1207:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1208:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1209:Generated_Source\PSoC4/CapSense_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1210:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1211:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1212:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1213:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1214:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1215:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsWidgetActive(uint32 widget)
1216:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 797              		.loc 1 1216 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801              	.LVL72:
 802 0000 70B5     		push	{r4, r5, r6, lr}
 803              		.cfi_def_cfa_offset 16
 804              		.cfi_offset 4, -16
 805              		.cfi_offset 5, -12
 806              		.cfi_offset 6, -8
 807              		.cfi_offset 14, -4
1217:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_rawDataIndex[widget];
 808              		.loc 1 1217 0
 809 0002 084B     		ldr	r3, .L72
 810 0004 1C5C     		ldrb	r4, [r3, r0]
 811              	.LVL73:
1218:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_numberOfSensors[widget] + rawIndex;
 812              		.loc 1 1218 0
 813 0006 1818     		adds	r0, r3, r0
 814              	.LVL74:
 815 0008 057A     		ldrb	r5, [r0, #8]
 816 000a 6519     		adds	r5, r4, r5
 817              	.LVL75:
1219:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 818              		.loc 1 1219 0
 819 000c 0026     		movs	r6, #0
 820              	.LVL76:
 821              	.L70:
1220:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1221:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Check all sensors of widget */
1222:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1223:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1224:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive((uint32)rawIndex) != 0u)
 822              		.loc 1 1224 0
 823 000e 2000     		movs	r0, r4
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 37


 824 0010 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 825              	.LVL77:
 826 0014 0028     		cmp	r0, #0
 827 0016 00D0     		beq	.L69
1225:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1226:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_SENSOR_IS_ACTIVE;
 828              		.loc 1 1226 0
 829 0018 0126     		movs	r6, #1
 830              	.LVL78:
 831              	.L69:
1227:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1228:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 832              		.loc 1 1228 0
 833 001a 0134     		adds	r4, r4, #1
 834              	.LVL79:
1229:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1230:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 835              		.loc 1 1230 0
 836 001c A542     		cmp	r5, r4
 837 001e F6D8     		bhi	.L70
1231:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1232:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1233:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1234:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1235:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 838              		.loc 1 1235 0
 839 0020 3000     		movs	r0, r6
 840              		@ sp needed
 841              	.LVL80:
 842              	.LVL81:
 843              	.LVL82:
 844 0022 70BD     		pop	{r4, r5, r6, pc}
 845              	.L73:
 846              		.align	2
 847              	.L72:
 848 0024 00000000 		.word	.LANCHOR2
 849              		.cfi_endproc
 850              	.LFE56:
 851              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 852              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 853              		.align	2
 854              		.global	CapSense_CheckIsAnyWidgetActive
 855              		.code	16
 856              		.thumb_func
 857              		.type	CapSense_CheckIsAnyWidgetActive, %function
 858              	CapSense_CheckIsAnyWidgetActive:
 859              	.LFB57:
1236:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1237:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1238:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
1240:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1241:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1242:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1243:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Compares all the sensors of the CapSense_Signal[] array to their finger
1244:Generated_Source\PSoC4/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so
1245:Generated_Source\PSoC4/CapSense_CSHL.c **** *  the CapSense_sensorOnMask[] array is up to date after calling this
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 38


1246:Generated_Source\PSoC4/CapSense_CSHL.c **** *  function.
1247:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1248:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1249:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1250:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1251:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1252:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1253:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1254:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1255:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1256:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1257:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1258:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1259:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1260:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1261:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_CheckIsAnyWidgetActive(void)
1262:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 860              		.loc 1 1262 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864 0000 70B5     		push	{r4, r5, r6, lr}
 865              		.cfi_def_cfa_offset 16
 866              		.cfi_offset 4, -16
 867              		.cfi_offset 5, -12
 868              		.cfi_offset 6, -8
 869              		.cfi_offset 14, -4
 870              	.LVL83:
1263:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1264:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 i;
1265:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 state = 0u;
 871              		.loc 1 1265 0
 872 0002 0025     		movs	r5, #0
1266:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1267:Generated_Source\PSoC4/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 873              		.loc 1 1267 0
 874 0004 0024     		movs	r4, #0
 875 0006 06E0     		b	.L75
 876              	.LVL84:
 877              	.L77:
1268:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1269:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 878              		.loc 1 1269 0
 879 0008 2000     		movs	r0, r4
 880 000a FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 881              	.LVL85:
 882 000e 0028     		cmp	r0, #0
 883 0010 00D0     		beq	.L76
1270:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1271:Generated_Source\PSoC4/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 884              		.loc 1 1271 0
 885 0012 0125     		movs	r5, #1
 886              	.LVL86:
 887              	.L76:
1267:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 888              		.loc 1 1267 0 discriminator 2
 889 0014 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 39


 890              	.LVL87:
 891              	.L75:
1267:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 892              		.loc 1 1267 0 is_stmt 0 discriminator 1
 893 0016 052C     		cmp	r4, #5
 894 0018 F6D9     		bls	.L77
1272:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1273:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1274:Generated_Source\PSoC4/CapSense_CSHL.c ****     
1275:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1276:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1277:Generated_Source\PSoC4/CapSense_CSHL.c ****     return state;
1278:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 895              		.loc 1 1278 0 is_stmt 1
 896 001a 2800     		movs	r0, r5
 897              		@ sp needed
 898              	.LVL88:
 899              	.LVL89:
 900 001c 70BD     		pop	{r4, r5, r6, pc}
 901              		.cfi_endproc
 902              	.LFE57:
 903              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 904 001e C046     		.section	.text.CapSense_EnableWidget,"ax",%progbits
 905              		.align	2
 906              		.global	CapSense_EnableWidget
 907              		.code	16
 908              		.thumb_func
 909              		.type	CapSense_EnableWidget, %function
 910              	CapSense_EnableWidget:
 911              	.LFB58:
1279:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1280:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1281:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1282:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
1283:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1284:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1285:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1286:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1287:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1288:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1289:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1290:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1291:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1292:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1293:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1294:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1295:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1296:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1297:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1298:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1299:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1300:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1301:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
1302:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
1303:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1304:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1305:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 40


1306:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1307:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1308:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_EnableWidget(uint32 widget)
1309:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 912              		.loc 1 1309 0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              	.LVL90:
 917 0000 70B5     		push	{r4, r5, r6, lr}
 918              		.cfi_def_cfa_offset 16
 919              		.cfi_offset 4, -16
 920              		.cfi_offset 5, -12
 921              		.cfi_offset 6, -8
 922              		.cfi_offset 14, -4
1310:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1311:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 923              		.loc 1 1311 0
 924 0002 084B     		ldr	r3, .L81
 925 0004 1C5C     		ldrb	r4, [r3, r0]
 926              	.LVL91:
1312:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 927              		.loc 1 1312 0
 928 0006 1818     		adds	r0, r3, r0
 929              	.LVL92:
 930 0008 057A     		ldrb	r5, [r0, #8]
 931 000a 6519     		adds	r5, r4, r5
 932 000c EDB2     		uxtb	r5, r5
 933              	.LVL93:
 934              	.L80:
1313:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1314:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Enable all sensors of widget */
1315:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1316:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1317:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 1u);
 935              		.loc 1 1317 0 discriminator 1
 936 000e 0122     		movs	r2, #1
 937 0010 2100     		movs	r1, r4
 938 0012 0548     		ldr	r0, .L81+4
 939 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 940              	.LVL94:
1318:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 941              		.loc 1 1318 0 discriminator 1
 942 0018 0134     		adds	r4, r4, #1
 943              	.LVL95:
 944 001a E4B2     		uxtb	r4, r4
 945              	.LVL96:
1319:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1320:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 946              		.loc 1 1320 0 discriminator 1
 947 001c A542     		cmp	r5, r4
 948 001e F6D8     		bhi	.L80
1321:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 949              		.loc 1 1321 0
 950              		@ sp needed
 951              	.LVL97:
 952              	.LVL98:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 41


 953 0020 70BD     		pop	{r4, r5, r6, pc}
 954              	.L82:
 955 0022 C046     		.align	2
 956              	.L81:
 957 0024 00000000 		.word	.LANCHOR2
 958 0028 00000000 		.word	CapSense_sensorEnableMask
 959              		.cfi_endproc
 960              	.LFE58:
 961              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 962              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 963              		.align	2
 964              		.global	CapSense_DisableWidget
 965              		.code	16
 966              		.thumb_func
 967              		.type	CapSense_DisableWidget, %function
 968              	CapSense_DisableWidget:
 969              	.LFB59:
1322:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1323:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1324:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
1325:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
1326:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
1327:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1328:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
1329:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1330:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1331:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
1332:Generated_Source\PSoC4/CapSense_CSHL.c **** *  widget:  widget number.
1333:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1334:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
1335:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1336:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1337:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
1338:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning
1339:Generated_Source\PSoC4/CapSense_CSHL.c **** *  state.
1340:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors
1341:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1342:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for
1343:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1344:Generated_Source\PSoC4/CapSense_CSHL.c **** *  0 - sensor isn't scanned by CapSense_ScanEnabledWidgets().
1345:Generated_Source\PSoC4/CapSense_CSHL.c **** *  1 - sensor is scanned by CapSense_ScanEnabledWidgets().
1346:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1347:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
1348:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
1349:Generated_Source\PSoC4/CapSense_CSHL.c **** *
1350:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
1351:Generated_Source\PSoC4/CapSense_CSHL.c **** void CapSense_DisableWidget(uint32 widget)
1352:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 970              		.loc 1 1352 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 0
 973              		@ frame_needed = 0, uses_anonymous_args = 0
 974              	.LVL99:
 975 0000 70B5     		push	{r4, r5, r6, lr}
 976              		.cfi_def_cfa_offset 16
 977              		.cfi_offset 4, -16
 978              		.cfi_offset 5, -12
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 42


 979              		.cfi_offset 6, -8
 980              		.cfi_offset 14, -4
1353:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 981              		.loc 1 1353 0
 982 0002 084B     		ldr	r3, .L85
 983 0004 1C5C     		ldrb	r4, [r3, r0]
 984              	.LVL100:
1354:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 numOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 985              		.loc 1 1354 0
 986 0006 1818     		adds	r0, r3, r0
 987              	.LVL101:
 988 0008 057A     		ldrb	r5, [r0, #8]
 989 000a 6519     		adds	r5, r4, r5
 990 000c EDB2     		uxtb	r5, r5
 991              	.LVL102:
 992              	.L84:
1355:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1356:Generated_Source\PSoC4/CapSense_CSHL.c ****     /* Disable all sensors of widget */
1357:Generated_Source\PSoC4/CapSense_CSHL.c ****     do
1358:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
1359:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1360:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_SetBitValue(CapSense_sensorEnableMask, (uint32)rawIndex, 0u);
 993              		.loc 1 1360 0 discriminator 1
 994 000e 0022     		movs	r2, #0
 995 0010 2100     		movs	r1, r4
 996 0012 0548     		ldr	r0, .L85+4
 997 0014 FFF7FEFF 		bl	CapSense_SetBitValue
 998              	.LVL103:
1361:Generated_Source\PSoC4/CapSense_CSHL.c ****         rawIndex++;
 999              		.loc 1 1361 0 discriminator 1
 1000 0018 0134     		adds	r4, r4, #1
 1001              	.LVL104:
 1002 001a E4B2     		uxtb	r4, r4
 1003              	.LVL105:
1362:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
1363:Generated_Source\PSoC4/CapSense_CSHL.c ****     while(rawIndex < numOfSensors);
 1004              		.loc 1 1363 0 discriminator 1
 1005 001c A542     		cmp	r5, r4
 1006 001e F6D8     		bhi	.L84
1364:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 1007              		.loc 1 1364 0
 1008              		@ sp needed
 1009              	.LVL106:
 1010              	.LVL107:
 1011 0020 70BD     		pop	{r4, r5, r6, pc}
 1012              	.L86:
 1013 0022 C046     		.align	2
 1014              	.L85:
 1015 0024 00000000 		.word	.LANCHOR2
 1016 0028 00000000 		.word	CapSense_sensorEnableMask
 1017              		.cfi_endproc
 1018              	.LFE59:
 1019              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1020              		.section	.text.CapSense_FindMaximum,"ax",%progbits
 1021              		.align	2
 1022              		.global	CapSense_FindMaximum
 1023              		.code	16
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 43


 1024              		.thumb_func
 1025              		.type	CapSense_FindMaximum, %function
 1026              	CapSense_FindMaximum:
 1027              	.LFB60:
1365:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1366:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1367:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1368:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1369:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_FindMaximum
1370:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1371:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1372:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1373:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1374:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[] within a defined centroid and
1375:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1376:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  ignored.
1377:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1378:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1379:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1380:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1381:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1382:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:  Start index of centroid in CapSense_sensorSignal[] array.
1383:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:   number of elements within centroid.
1384:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1385:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:   pointer to diplex table.
1386:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1387:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1388:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1389:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1390:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1391:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1392:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_startOfSlider[] - contains the index of the first slider element
1393:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1394:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1395:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1396:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1397:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1398:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_IS_DIPLEX_SLIDER)
1399:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 *d
1400:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
1401:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 CapSense_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1402:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1403:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1028              		.loc 1 1403 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL108:
 1033 0000 70B5     		push	{r4, r5, r6, lr}
 1034              		.cfi_def_cfa_offset 16
 1035              		.cfi_offset 4, -16
 1036              		.cfi_offset 5, -12
 1037              		.cfi_offset 6, -8
 1038              		.cfi_offset 14, -4
 1039              	.LVL109:
1404:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
1405:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 44


1406:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curPos = 0u;
1407:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* No centroid at Start */
1408:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCntrdSize = 0u;
1409:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1410:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Biggest centroid is zero */
1411:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1412:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1413:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1414:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum = CapSense_MAXIMUM_CENTROID;
1415:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 temp = 0u;
1417:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1040              		.loc 1 1417 0
 1041 0002 094D     		ldr	r5, .L92
 1042 0004 2C35     		adds	r5, r5, #44
 1043 0006 2D18     		adds	r5, r5, r0
 1044              	.LVL110:
1416:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 *startOfSlider = &CapSense_sensorSignal[offset];
 1045              		.loc 1 1416 0
 1046 0008 0026     		movs	r6, #0
1414:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1047              		.loc 1 1414 0
 1048 000a FF20     		movs	r0, #255
 1049              	.LVL111:
1418:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1419:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1420:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(diplex != 0u)
1421:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1422:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Initialize */
1423:Generated_Source\PSoC4/CapSense_CSHL.c ****                 i = 0u;
1424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1425:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Make slider x2 as Diplexed */
1426:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count <<= 1u;
1427:Generated_Source\PSoC4/CapSense_CSHL.c ****                 while(1u)
1428:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1429:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1430:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1431:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (curCtrdStartPos == CapSense_MAXIMUM_CENTROID)
1432:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1433:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Start of centroid */
1434:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = i;
1435:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1436:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1437:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
1438:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1439:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize++;
1440:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1441:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1442:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1443:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1444:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(curCntrdSize > 0u)
1445:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1446:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* We are at the end of current */
1447:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1448:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1449:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1450:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 45


1451:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1452:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1453:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCntrdSize = 0u;
1454:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curCtrdStartPos = CapSense_MAXIMUM_CENTROID;
1455:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1456:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1457:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1458:Generated_Source\PSoC4/CapSense_CSHL.c ****                     i++;
1459:Generated_Source\PSoC4/CapSense_CSHL.c ****                     curPos = diplex[i];
1460:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(i == count)
1461:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1462:Generated_Source\PSoC4/CapSense_CSHL.c ****                         break;
1463:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1464:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1465:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1466:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1467:Generated_Source\PSoC4/CapSense_CSHL.c ****                        We are at the end of current */
1468:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1469:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1470:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1471:Generated_Source\PSoC4/CapSense_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1472:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1473:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1474:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1475:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1476:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Without diplexing */
1477:Generated_Source\PSoC4/CapSense_CSHL.c ****                 biggestCtrdSize = count;
1478:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1479:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1480:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1481:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Check centroid size */
1482:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_NON_DIPLEX_SLIDER)
1483:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1484:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
1485:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1486:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_NON_DIPLEX_SLIDER) */
1487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1488:Generated_Source\PSoC4/CapSense_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1489:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1490:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1491:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (diplex == 0u)
1492:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1493:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = i;
1494:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1495:Generated_Source\PSoC4/CapSense_CSHL.c ****                             else
1496:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1497:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 curPos = diplex[i];
1498:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1499:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #elif (CapSense_IS_DIPLEX_SLIDER)
1500:Generated_Source\PSoC4/CapSense_CSHL.c ****                             curPos = diplex[i];
1501:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
1502:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Looking for greater element within centroid */
1503:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1504:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
1505:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1506:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1507:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 maximum = i;
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 46


1508:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 temp = startOfSlider[curPos];
1509:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1510:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
1511:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1512:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1513:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****             for (i = 0u; i < count; i++)
 1050              		.loc 1 1514 0
 1051 000c 0023     		movs	r3, #0
 1052 000e 08E0     		b	.L88
 1053              	.LVL112:
 1054              	.L90:
1515:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1516:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Looking for greater element within centroid */
1517:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1055              		.loc 1 1517 0
 1056 0010 EC5C     		ldrb	r4, [r5, r3]
 1057 0012 9442     		cmp	r4, r2
 1058 0014 03D9     		bls	.L89
1518:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1519:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(startOfSlider[i] > temp)
 1059              		.loc 1 1519 0
 1060 0016 A642     		cmp	r6, r4
 1061 0018 01D2     		bcs	.L89
1520:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****                         maximum = i;
1522:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1062              		.loc 1 1522 0
 1063 001a 2600     		movs	r6, r4
 1064              	.LVL113:
1521:Generated_Source\PSoC4/CapSense_CSHL.c ****                         temp = startOfSlider[i];
 1065              		.loc 1 1521 0
 1066 001c 1800     		movs	r0, r3
 1067              	.LVL114:
 1068              	.L89:
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1069              		.loc 1 1514 0 discriminator 2
 1070 001e 0133     		adds	r3, r3, #1
 1071              	.LVL115:
 1072 0020 DBB2     		uxtb	r3, r3
 1073              	.LVL116:
 1074              	.L88:
1514:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1075              		.loc 1 1514 0 is_stmt 0 discriminator 1
 1076 0022 8B42     		cmp	r3, r1
 1077 0024 F4D3     		bcc	.L90
1523:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1524:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1525:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1526:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1527:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (maximum);
1528:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1078              		.loc 1 1528 0 is_stmt 1
 1079              		@ sp needed
 1080              	.LVL117:
 1081              	.LVL118:
 1082 0026 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 47


 1083              	.L93:
 1084              		.align	2
 1085              	.L92:
 1086 0028 00000000 		.word	.LANCHOR0
 1087              		.cfi_endproc
 1088              	.LFE60:
 1089              		.size	CapSense_FindMaximum, .-CapSense_FindMaximum
 1090              		.global	__aeabi_idiv
 1091              		.section	.text.CapSense_CalcCentroid,"ax",%progbits
 1092              		.align	2
 1093              		.global	CapSense_CalcCentroid
 1094              		.code	16
 1095              		.thumb_func
 1096              		.type	CapSense_CalcCentroid, %function
 1097              	CapSense_CalcCentroid:
 1098              	.LFB61:
1529:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1530:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1531:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1532:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_CalcCentroid
1533:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1534:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1535:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1536:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1537:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution.
1538:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1539:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1540:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  type:  widget type.
1541:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  diplex:  pointer to diplex table.
1542:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1543:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  offset:   Start index of centroid in CapSense_sensorSignal[] array.
1544:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  count:    Number of elements within centroid.
1545:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1546:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  API resolution.
1547:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1548:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1549:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1550:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the slider.
1551:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1552:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1553:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1554:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1555:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1556:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1557:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1558:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1559:Generated_Source\PSoC4/CapSense_CSHL.c **** #else
1560:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 CapSense_CalcCentroid(uint8 maximum, uint8 offset,
1561:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1562:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1563:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1099              		.loc 1 1563 0
 1100              		.cfi_startproc
 1101              		@ args = 4, pretend = 0, frame = 8
 1102              		@ frame_needed = 0, uses_anonymous_args = 0
 1103              	.LVL119:
 1104 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 48


 1105              		.cfi_def_cfa_offset 20
 1106              		.cfi_offset 4, -20
 1107              		.cfi_offset 5, -16
 1108              		.cfi_offset 6, -12
 1109              		.cfi_offset 7, -8
 1110              		.cfi_offset 14, -4
 1111 0002 83B0     		sub	sp, sp, #12
 1112              		.cfi_def_cfa_offset 32
 1113 0004 0400     		movs	r4, r0
 1114 0006 1600     		movs	r6, r2
 1115 0008 0193     		str	r3, [sp, #4]
 1116 000a 08AB     		add	r3, sp, #32
 1117              	.LVL120:
 1118 000c 1878     		ldrb	r0, [r3]
 1119              	.LVL121:
1564:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1565:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posPrev;
1566:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posNext;
1567:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1568:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1569:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Helps during centroid calculation */
1570:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_TOTAL_CENTROIDS_BASIC_COUNT)
1571:Generated_Source\PSoC4/CapSense_CSHL.c ****             static uint8 CapSense_centroid[3u];
1572:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif  /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1573:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1574:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1575:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 pos;
1576:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1577:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1578:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 position;
1579:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 numerator;
1580:Generated_Source\PSoC4/CapSense_CSHL.c ****         int32 denominator;
1581:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1582:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8  *startOfSlider = &CapSense_sensorSignal[offset];
 1120              		.loc 1 1582 0
 1121 000e 344A     		ldr	r2, .L103
 1122              	.LVL122:
 1123 0010 1300     		movs	r3, r2
 1124              	.LVL123:
 1125 0012 2C33     		adds	r3, r3, #44
 1126 0014 5B18     		adds	r3, r3, r1
 1127              	.LVL124:
1583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1584:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT >
1585:Generated_Source\PSoC4/CapSense_CSHL.c ****             posPrev = 0u;
1586:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1587:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1588:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1589:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(type == CapSense_TYPE_RADIAL_SLIDER)
1590:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1591:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1592:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1593:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1594:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1595:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
 1128              		.loc 1 1595 0
 1129 0016 1D5D     		ldrb	r5, [r3, r4]
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 49


 1130 0018 4832     		adds	r2, r2, #72
 1131 001a 5570     		strb	r5, [r2, #1]
1596:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1597:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for ROTARY Slider */
1598:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1132              		.loc 1 1598 0
 1133 001c 002C     		cmp	r4, #0
 1134 001e 09D1     		bne	.L95
1599:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1600:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[count - 1u];
 1135              		.loc 1 1600 0
 1136 0020 9A19     		adds	r2, r3, r6
 1137 0022 013A     		subs	r2, r2, #1
 1138 0024 1778     		ldrb	r7, [r2]
 1139 0026 2E4A     		ldr	r2, .L103
 1140 0028 4821     		movs	r1, #72
 1141              	.LVL125:
 1142 002a 5754     		strb	r7, [r2, r1]
1601:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[1u];
 1143              		.loc 1 1601 0
 1144 002c 4832     		adds	r2, r2, #72
 1145 002e 5B78     		ldrb	r3, [r3, #1]
 1146              	.LVL126:
 1147 0030 9370     		strb	r3, [r2, #2]
 1148 0032 17E0     		b	.L96
 1149              	.LVL127:
 1150              	.L95:
1602:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1603:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
 1151              		.loc 1 1603 0
 1152 0034 721E     		subs	r2, r6, #1
 1153 0036 9442     		cmp	r4, r2
 1154 0038 0BD1     		bne	.L97
1604:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1605:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
 1155              		.loc 1 1605 0
 1156 003a 1B19     		adds	r3, r3, r4
 1157              	.LVL128:
 1158 003c 013B     		subs	r3, r3, #1
 1159 003e 1F78     		ldrb	r7, [r3]
 1160 0040 274B     		ldr	r3, .L103
 1161              	.LVL129:
 1162 0042 4822     		movs	r2, #72
 1163 0044 9F54     		strb	r7, [r3, r2]
1606:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[0u];
 1164              		.loc 1 1606 0
 1165 0046 5918     		adds	r1, r3, r1
 1166              	.LVL130:
 1167 0048 1C3A     		subs	r2, r2, #28
 1168 004a 8A5C     		ldrb	r2, [r1, r2]
 1169 004c 4833     		adds	r3, r3, #72
 1170 004e 9A70     		strb	r2, [r3, #2]
 1171 0050 08E0     		b	.L96
 1172              	.LVL131:
 1173              	.L97:
1607:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1608:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 50


1609:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1610:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[maximum - 1u];
 1174              		.loc 1 1610 0
 1175 0052 1B19     		adds	r3, r3, r4
 1176              	.LVL132:
 1177 0054 5A1E     		subs	r2, r3, #1
 1178 0056 1778     		ldrb	r7, [r2]
 1179 0058 214A     		ldr	r2, .L103
 1180              	.LVL133:
 1181 005a 4821     		movs	r1, #72
 1182              	.LVL134:
 1183 005c 5754     		strb	r7, [r2, r1]
1611:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[maximum + 1u];
 1184              		.loc 1 1611 0
 1185 005e 5B78     		ldrb	r3, [r3, #1]
 1186 0060 4832     		adds	r2, r2, #72
 1187 0062 9370     		strb	r3, [r2, #2]
 1188              	.L96:
1612:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1613:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1614:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1615:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1616:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1617:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1618:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1619:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1620:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1621:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_TOUCH_PADS_BASIC_COU
1622:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER)
1623:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1624:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if(diplex == 0u)
1625:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1626:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = maximum;
1627:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1628:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = maximum + 1u;
1629:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1630:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1631:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1632:Generated_Source\PSoC4/CapSense_CSHL.c ****                         pos     = diplex[maximum];
1633:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1634:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posNext = diplex[maximum + 1u];
1635:Generated_Source\PSoC4/CapSense_CSHL.c ****                         count <<= 1u;
1636:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1637:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #elif (CapSense_IS_DIPLEX_SLIDER)
1638:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1639:Generated_Source\PSoC4/CapSense_CSHL.c ****                     pos     = diplex[maximum];
1640:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1641:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = diplex[maximum + 1u];
1642:Generated_Source\PSoC4/CapSense_CSHL.c ****                     count <<= 1u;
1643:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1644:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate next and previous near to maximum */
1645:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (maximum >= 1u)
1646:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1647:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posPrev = maximum - 1u;
1648:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1649:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posNext = maximum + 1u;
1650:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER && CapSense_IS_NON_DIPLEX_SLIDER) */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 51


1651:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1652:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Copy Signal to the centroid array */
1653:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (CapSense_IS_DIPLEX_SLIDER)
1654:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[pos];
1655:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #else
1656:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS] = startOfSlider[maximum];
1657:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1659:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check borders for LINEAR Slider */
1660:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1661:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1662:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = 0u;
1663:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1664:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1665:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
1666:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1667:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1668:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = 0u;
1669:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1670:Generated_Source\PSoC4/CapSense_CSHL.c ****                 else                                /* Not first Not last */
1671:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1672:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_PREV] = startOfSlider[posPrev];
1673:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_centroid[CapSense_POS_NEXT] = startOfSlider[posNext];
1674:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1675:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* ((CapSense_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_TOTAL_TOUCH_PADS_BASIC_C
1676:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1677:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_ADD_SLIDER_TYPE)
1678:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1679:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_ADD_SLIDER_TYPE) */
1680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1681:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1682:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_PREV] > noiseThreshold)
 1189              		.loc 1 1682 0
 1190 0064 4823     		movs	r3, #72
 1191 0066 1E4A     		ldr	r2, .L103
 1192 0068 D35C     		ldrb	r3, [r2, r3]
 1193 006a 8342     		cmp	r3, r0
 1194 006c 04D9     		bls	.L98
1683:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1684:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] -= noiseThreshold;
 1195              		.loc 1 1684 0
 1196 006e 1B1A     		subs	r3, r3, r0
 1197 0070 4822     		movs	r2, #72
 1198 0072 1B49     		ldr	r1, .L103
 1199 0074 8B54     		strb	r3, [r1, r2]
 1200 0076 03E0     		b	.L99
 1201              	.L98:
1685:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1686:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1687:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1688:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_PREV] = 0u;
 1202              		.loc 1 1688 0
 1203 0078 0021     		movs	r1, #0
 1204 007a 4823     		movs	r3, #72
 1205 007c 184A     		ldr	r2, .L103
 1206 007e D154     		strb	r1, [r2, r3]
 1207              	.L99:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 52


1689:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1690:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1691:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1692:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_centroid[CapSense_POS] -= noiseThreshold;
 1208              		.loc 1 1692 0
 1209 0080 174A     		ldr	r2, .L103
 1210 0082 4832     		adds	r2, r2, #72
 1211 0084 5378     		ldrb	r3, [r2, #1]
 1212 0086 1B1A     		subs	r3, r3, r0
 1213 0088 DBB2     		uxtb	r3, r3
 1214 008a 5370     		strb	r3, [r2, #1]
1693:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1694:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Subtract noiseThreshold */
1695:Generated_Source\PSoC4/CapSense_CSHL.c ****         if(CapSense_centroid[CapSense_POS_NEXT] > noiseThreshold)
 1215              		.loc 1 1695 0
 1216 008c 9278     		ldrb	r2, [r2, #2]
 1217 008e 9042     		cmp	r0, r2
 1218 0090 04D2     		bcs	.L100
1696:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1697:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] -= noiseThreshold;
 1219              		.loc 1 1697 0
 1220 0092 101A     		subs	r0, r2, r0
 1221 0094 124A     		ldr	r2, .L103
 1222 0096 4832     		adds	r2, r2, #72
 1223 0098 9070     		strb	r0, [r2, #2]
 1224 009a 03E0     		b	.L101
 1225              	.L100:
1698:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1699:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1700:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1701:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_centroid[CapSense_POS_NEXT] = 0u;
 1226              		.loc 1 1701 0
 1227 009c 0021     		movs	r1, #0
 1228 009e 104A     		ldr	r2, .L103
 1229 00a0 4832     		adds	r2, r2, #72
 1230 00a2 9170     		strb	r1, [r2, #2]
 1231              	.L101:
1702:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1703:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1704:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1705:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 - Si-1 */
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****         numerator = (uint32) CapSense_centroid[CapSense_POS_NEXT] -
 1232              		.loc 1 1706 0
 1233 00a4 0E49     		ldr	r1, .L103
 1234 00a6 0A00     		movs	r2, r1
 1235 00a8 4832     		adds	r2, r2, #72
 1236 00aa 9278     		ldrb	r2, [r2, #2]
1707:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1237              		.loc 1 1707 0
 1238 00ac 4820     		movs	r0, #72
 1239 00ae 095C     		ldrb	r1, [r1, r0]
1706:Generated_Source\PSoC4/CapSense_CSHL.c ****                     (uint32) CapSense_centroid[CapSense_POS_PREV];
 1240              		.loc 1 1706 0
 1241 00b0 501A     		subs	r0, r2, r1
 1242              	.LVL135:
1708:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1709:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Si+1 + Si + Si-1 */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 53


1710:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (int32) CapSense_centroid[CapSense_POS_PREV] +
 1243              		.loc 1 1710 0
 1244 00b2 C918     		adds	r1, r1, r3
 1245 00b4 8918     		adds	r1, r1, r2
 1246              	.LVL136:
1711:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS] +
1712:Generated_Source\PSoC4/CapSense_CSHL.c ****                       (int32) CapSense_centroid[CapSense_POS_NEXT];
1713:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1714:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* (numerator/denominator) + maximum */
1715:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1247              		.loc 1 1715 0
 1248 00b6 0002     		lsls	r0, r0, #8
 1249              	.LVL137:
 1250 00b8 FFF7FEFF 		bl	__aeabi_idiv
 1251              	.LVL138:
 1252 00bc 2402     		lsls	r4, r4, #8
 1253              	.LVL139:
1716:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1717:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if(CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1718:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Only required for RADIAL Slider */
1719:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(denominator < 0)
 1254              		.loc 1 1719 0
 1255 00be 0419     		adds	r4, r0, r4
 1256 00c0 01D5     		bpl	.L102
 1257              	.LVL140:
1720:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1721:Generated_Source\PSoC4/CapSense_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
 1258              		.loc 1 1721 0
 1259 00c2 3602     		lsls	r6, r6, #8
 1260 00c4 A419     		adds	r4, r4, r6
 1261              	.LVL141:
 1262              	.L102:
1722:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1723:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1724:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1725:Generated_Source\PSoC4/CapSense_CSHL.c ****         denominator *= (int16)resolution;
 1263              		.loc 1 1725 0
 1264 00c6 6B46     		mov	r3, sp
 1265 00c8 0420     		movs	r0, #4
 1266 00ca 185E     		ldrsh	r0, [r3, r0]
 1267 00cc 4443     		muls	r4, r0
 1268              	.LVL142:
1726:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1727:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Round result and put it to uint8 */
1728:Generated_Source\PSoC4/CapSense_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CENTROID_ROUND_VALUE));
 1269              		.loc 1 1728 0
 1270 00ce FE23     		movs	r3, #254
 1271 00d0 DB01     		lsls	r3, r3, #7
 1272 00d2 9C46     		mov	ip, r3
 1273 00d4 6444     		add	r4, r4, ip
 1274              	.LVL143:
 1275 00d6 240C     		lsrs	r4, r4, #16
 1276              	.LVL144:
 1277 00d8 E0B2     		uxtb	r0, r4
 1278              	.LVL145:
1729:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1730:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 54


1731:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1279              		.loc 1 1731 0
 1280 00da 03B0     		add	sp, sp, #12
 1281              		@ sp needed
 1282 00dc F0BD     		pop	{r4, r5, r6, r7, pc}
 1283              	.L104:
 1284 00de C046     		.align	2
 1285              	.L103:
 1286 00e0 00000000 		.word	.LANCHOR0
 1287              		.cfi_endproc
 1288              	.LFE61:
 1289              		.size	CapSense_CalcCentroid, .-CapSense_CalcCentroid
 1290              		.section	.text.CapSense_GetCentroidPos,"ax",%progbits
 1291              		.align	2
 1292              		.global	CapSense_GetCentroidPos
 1293              		.code	16
 1294              		.thumb_func
 1295              		.type	CapSense_GetCentroidPos, %function
 1296              	CapSense_GetCentroidPos:
 1297              	.LFB62:
1732:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_CENTROIDS_BASIC_COUNT) */
1733:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1734:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1735:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1736:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1737:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetCentroidPos
1738:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1739:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1740:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1741:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1742:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1743:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1744:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1745:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1746:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1747:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1748:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1749:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__LS           5
1750:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1751:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1752:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the linear slider.
1753:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1754:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1755:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
1756:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1757:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1758:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1759:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1760:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1761:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1762:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1763:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1764:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1765:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1766:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1767:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1768:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 55


1769:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1770:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1771:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_GetCentroidPos(uint32 widget)
1772:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1298              		.loc 1 1772 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 0
 1301              		@ frame_needed = 0, uses_anonymous_args = 0
 1302              	.LVL146:
 1303 0000 70B5     		push	{r4, r5, r6, lr}
 1304              		.cfi_def_cfa_offset 16
 1305              		.cfi_offset 4, -16
 1306              		.cfi_offset 5, -12
 1307              		.cfi_offset 6, -8
 1308              		.cfi_offset 14, -4
 1309 0002 82B0     		sub	sp, sp, #8
 1310              		.cfi_def_cfa_offset 24
 1311 0004 0400     		movs	r4, r0
1773:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1774:Generated_Source\PSoC4/CapSense_CSHL.c ****             const uint8 *diplex;
1775:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1776:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1777:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1778:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1779:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1780:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1781:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1782:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1783:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1784:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1785:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1786:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1787:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1788:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1789:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1790:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1791:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1792:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
 1312              		.loc 1 1792 0
 1313 0006 0D4B     		ldr	r3, .L108
 1314 0008 1D5C     		ldrb	r5, [r3, r0]
 1315              	.LVL147:
1793:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 1316              		.loc 1 1793 0
 1317 000a 1B18     		adds	r3, r3, r0
 1318 000c 1E7A     		ldrb	r6, [r3, #8]
 1319              	.LVL148:
1794:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1795:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1796:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(widget < CapSense_TOTAL_DIPLEXED_SLIDERS_COUNT)
1797:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1798:Generated_Source\PSoC4/CapSense_CSHL.c ****                 maximum = CapSense_diplexTable[widget];
1799:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = &CapSense_diplexTable[maximum];
1800:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1801:Generated_Source\PSoC4/CapSense_CSHL.c ****             else
1802:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
1803:Generated_Source\PSoC4/CapSense_CSHL.c ****                 diplex = 0u;
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 56


1804:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
1805:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1806:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1807:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1808:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1809:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1810:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1811:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
 1320              		.loc 1 1811 0
 1321 000e 0C4B     		ldr	r3, .L108+4
 1322 0010 1B18     		adds	r3, r3, r0
 1323 0012 1A7A     		ldrb	r2, [r3, #8]
 1324 0014 3100     		movs	r1, r6
 1325 0016 2800     		movs	r0, r5
 1326              	.LVL149:
 1327 0018 FFF7FEFF 		bl	CapSense_FindMaximum
 1328              	.LVL150:
1812:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
1813:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1814:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != 0xFFu)
 1329              		.loc 1 1814 0
 1330 001c FF28     		cmp	r0, #255
 1331 001e 0AD0     		beq	.L107
1815:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1816:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
1817:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
 1332              		.loc 1 1817 0
 1333 0020 084B     		ldr	r3, .L108+8
 1334 0022 1B5D     		ldrb	r3, [r3, r4]
 1335 0024 0093     		str	r3, [sp]
 1336 0026 C823     		movs	r3, #200
 1337 0028 5B01     		lsls	r3, r3, #5
 1338 002a 3200     		movs	r2, r6
 1339 002c 2900     		movs	r1, r5
 1340 002e FFF7FEFF 		bl	CapSense_CalcCentroid
 1341              	.LVL151:
 1342 0032 80B2     		uxth	r0, r0
 1343              	.LVL152:
 1344 0034 00E0     		b	.L106
 1345              	.LVL153:
 1346              	.L107:
1818:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
1819:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1820:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1821:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1822:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1823:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1824:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
1825:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1826:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1827:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
1828:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1829:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
1830:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
1831:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
1832:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1833:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 57


1834:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1835:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1836:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
1837:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
1838:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1839:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
1840:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1841:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
1842:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1843:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
1844:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1845:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1846:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1847:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
1848:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1849:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
1850:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
1851:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
1852:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1853:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
1854:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1855:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1856:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
1857:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1858:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1859:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
1860:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
1861:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1862:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1863:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /*(0u != (CapSense_MEDIAN_FILTER &
1864:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *         CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1865:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1866:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1867:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if(0u!=(CapSense_AVERAGING_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1868:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
1869:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1870:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
1871:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
1872:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1873:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                 (uint16)CapSense_posFiltersData[pos
1874:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]=CapSense_posFiltersData[posInd
1875:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
1876:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1877:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
1878:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1879:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1880:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1881:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1882:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
1883:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1884:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
1885:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1886:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1887:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1888:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER & \
1889:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1890:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 58


1891:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1892:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK
1893:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
1894:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1895:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
1896:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1897:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1898:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1899:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER & \
1900:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1901:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1902:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1903:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_LINEAR_SLIDERS_POS_FILTERS_MA
1904:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
1905:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
1906:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
1907:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
1908:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
1909:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
1910:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER & \
1911:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK))
1912:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
1913:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
1914:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1915:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1916:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1917:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1918:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
1919:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
1920:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum wasn't found */
1921:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
 1347              		.loc 1 1921 0
 1348 0036 0448     		ldr	r0, .L108+12
 1349              	.LVL154:
 1350              	.L106:
1922:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1923:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if(0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK)
1924:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
1925:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
1926:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
1927:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
1928:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
1929:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1930:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
1931:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1932:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1933:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
1934:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1351              		.loc 1 1934 0
 1352 0038 02B0     		add	sp, sp, #8
 1353              		@ sp needed
 1354              	.LVL155:
 1355              	.LVL156:
 1356              	.LVL157:
 1357 003a 70BD     		pop	{r4, r5, r6, pc}
 1358              	.L109:
 1359              		.align	2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 59


 1360              	.L108:
 1361 003c 00000000 		.word	.LANCHOR2
 1362 0040 00000000 		.word	.LANCHOR1
 1363 0044 00000000 		.word	CapSense_noiseThreshold
 1364 0048 FFFF0000 		.word	65535
 1365              		.cfi_endproc
 1366              	.LFE62:
 1367              		.size	CapSense_GetCentroidPos, .-CapSense_GetCentroidPos
 1368              		.section	.text.CapSense_MedianFilter,"ax",%progbits
 1369              		.align	2
 1370              		.global	CapSense_MedianFilter
 1371              		.code	16
 1372              		.thumb_func
 1373              		.type	CapSense_MedianFilter, %function
 1374              	CapSense_MedianFilter:
 1375              	.LFB64:
1935:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1936:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1937:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1938:Generated_Source\PSoC4/CapSense_CSHL.c **** #if((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u))
1939:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
1940:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetRadialCentroidPos
1941:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
1942:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1943:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
1944:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Checks the CapSense_Signal[ ] array for a centroid within
1945:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1946:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1947:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result if enabled.
1948:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1949:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
1950:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
1951:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1952:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__RS           5
1953:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1954:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
1955:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a position value of the radial slider.
1956:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1957:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
1958:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
1959:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1960:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
1961:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1962:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1963:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1964:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1965:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1966:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1967:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Note:
1968:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1969:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1970:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1971:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  that noise will not generate a false centroid.
1972:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
1973:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
1974:Generated_Source\PSoC4/CapSense_CSHL.c ****      uint16 CapSense_GetRadialCentroidPos(uint32 widget)
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 60


1976:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
1977:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posIndex;
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
1979:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
1980:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1981:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1982:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1983:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1984:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 tempPos;
1985:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1986:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1987:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
1988:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1989:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 maximum;
1990:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 position;
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
1992:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
1993:Generated_Source\PSoC4/CapSense_CSHL.c **** 
1994:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within centroid */
1995:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
1996:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget], 
1997:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****             maximum = CapSense_FindMaximum(offset, count, (uint8)CapSense_fingerThreshold[widget]);
1999:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2000:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (maximum != CapSense_MAXIMUM_CENTROID)
2002:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2003:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Calculate centroid */
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = (uint16) CapSense_CalcCentroid(maximum,
2005:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
2006:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2007:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2008:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
2009:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2010:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2011:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Calculate position to store filters data */
2012:Generated_Source\PSoC4/CapSense_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2013:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u == CapSense_posFiltersData[firstTimeIndex])
2015:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2016:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Init filters */
2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[posIndex] = (uint8) position;
2018:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
2019:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2020:Generated_Source\PSoC4/CapSense_CSHL.c ****                              (0u != (CapSense_AVERAGING_FILTER & \
2021:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2022:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2023:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))  ||
2024:Generated_Source\PSoC4/CapSense_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2025:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] = (uint8) position;
2027:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2028:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2029:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2030:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *   (0u != (CapSense_AVERAGING_FILTER & \
2031:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2032:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 61


2033:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                         CapSense_posFiltersData[firstTimeIndex] = 1u;
2035:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2036:Generated_Source\PSoC4/CapSense_CSHL.c ****                     else
2037:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2038:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Do filtering */
2039:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_MEDIAN_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2040:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2041:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2042:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_MedianFilter(position,
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
2047:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2049:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2050:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_MEDIAN_FILTER &
2051:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2052:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2053:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2054:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_AVERAGING_FILTER & \
2055:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2056:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2057:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2058:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 tempPos = (uint8) position;
2059:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_AveragingFilter(position,
2060:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2061:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posI
2062:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex+1u]= CapSense_posFiltersData[posIn
2063:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = tempPos;
2064:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2065:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2066:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2067:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2068:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2069:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR2_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2070:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2071:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2072:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR2Filter(position,
2073:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2074:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2075:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2076:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR2_FILTER &
2077:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2078:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2079:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2080:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_IIR4_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK
2081:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2082:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2083:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_IIR4Filter(position,
2084:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2085:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2086:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2087:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_IIR4_FILTER &
2088:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *          CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2089:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 62


2090:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2091:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if (0u != (CapSense_JITTER_FILTER & CapSense_RADIAL_SLIDERS_POS_FILTERS_MA
2092:Generated_Source\PSoC4/CapSense_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2093:Generated_Source\PSoC4/CapSense_CSHL.c ****                             {
2094:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 position = CapSense_JitterFilter(position,
2095:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                          CapSense_posFiltersData[po
2096:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex] = (uint8) position;
2097:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
2098:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #endif /* (0u != (CapSense_JITTER_FILTER &
2099:Generated_Source\PSoC4/CapSense_CSHL.c ****                                *           CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK))
2100:Generated_Source\PSoC4/CapSense_CSHL.c ****                                */
2101:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2102:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2103:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2104:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2105:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2106:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2107:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2108:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Maximum was not found */
2109:Generated_Source\PSoC4/CapSense_CSHL.c ****             position = 0xFFFFu;
2110:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2111:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
2112:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2113:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2114:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2116:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2117:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2118:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2119:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2120:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (position);
2121:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2122:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
2123:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2124:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2125:Generated_Source\PSoC4/CapSense_CSHL.c **** #if(CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2126:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2127:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetTouchCentroidPos
2128:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2129:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2130:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2131:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2132:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2133:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2134:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2135:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The position filter is applied to the result if enabled.
2136:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2137:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  customizer.
2138:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2139:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2140:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  Widget number.
2141:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2142:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  #define CapSense_"widget_name"__TP            5
2143:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2144:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2145:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  result of calculation of X and Y position are stored.
2146:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[0u]  - position of X
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 63


2147:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos[1u]  - position of Y
2148:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2149:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2150:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2151:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2152:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2153:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2154:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2155:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2156:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2157:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2158:Generated_Source\PSoC4/CapSense_CSHL.c ****     *   calculations.
2159:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2160:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2161:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetTouchCentroidPos(uint32 widget, uint16* pos)
2162:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2163:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2164:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posXIndex;
2165:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posYIndex;
2166:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 firstTimeIndex = CapSense_posFiltersData[widget];
2167:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
2168:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2169:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2170:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2171:Generated_Source\PSoC4/CapSense_CSHL.c ****              (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2172:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint16 tempPos;
2173:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* ((0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2174:Generated_Source\PSoC4/CapSense_CSHL.c ****                *   (0u != (CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2175:Generated_Source\PSoC4/CapSense_CSHL.c ****                */
2176:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2177:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxX;
2178:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 MaxY;
2179:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posX;
2180:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 posY;
2181:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 touch = 0u;
2182:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 offset = CapSense_rawDataIndex[widget];
2183:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
2184:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2185:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* Find Maximum within X centroid */
2186:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_IS_DIPLEX_SLIDER)
2187:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget], 0u);
2188:Generated_Source\PSoC4/CapSense_CSHL.c ****         #else
2189:Generated_Source\PSoC4/CapSense_CSHL.c ****             MaxX = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget]);
2190:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2191:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2192:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (MaxX != CapSense_MAXIMUM_CENTROID)
2193:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2194:Generated_Source\PSoC4/CapSense_CSHL.c ****             offset = CapSense_rawDataIndex[widget + 1u];
2195:Generated_Source\PSoC4/CapSense_CSHL.c ****             count = CapSense_numberOfSensors[widget + 1u];
2196:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2197:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find Maximum within Y centroid */
2198:Generated_Source\PSoC4/CapSense_CSHL.c ****             #if (CapSense_IS_DIPLEX_SLIDER)
2199:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u], 0
2200:Generated_Source\PSoC4/CapSense_CSHL.c ****             #else
2201:Generated_Source\PSoC4/CapSense_CSHL.c ****                 MaxY = CapSense_FindMaximum(offset, count, CapSense_fingerThreshold[widget + 1u]);
2202:Generated_Source\PSoC4/CapSense_CSHL.c ****             #endif /* (CapSense_IS_DIPLEX_SLIDER) */
2203:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 64


2204:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (MaxY != CapSense_MAXIMUM_CENTROID)
2205:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2206:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* X and Y maximums are found = true touch */
2207:Generated_Source\PSoC4/CapSense_CSHL.c ****                 touch = 1u;
2208:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2209:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate Y centroid */
2210:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posY = CapSense_CalcCentroid(MaxY, offset, count,
2211:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget + 1u], CapSense_noiseThreshold[widget + 1u
2212:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2213:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Calculate X centroid */
2214:Generated_Source\PSoC4/CapSense_CSHL.c ****                 offset = CapSense_rawDataIndex[widget];
2215:Generated_Source\PSoC4/CapSense_CSHL.c ****                 count = CapSense_numberOfSensors[widget];
2216:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2217:Generated_Source\PSoC4/CapSense_CSHL.c ****                 posX = CapSense_CalcCentroid(MaxX, offset, count,
2218:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_centroidMult[widget],CapSense_noiseThreshold[widget]);
2219:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2220:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2221:Generated_Source\PSoC4/CapSense_CSHL.c ****                     /* Check if this TP has enabled filters */
2222:Generated_Source\PSoC4/CapSense_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_ANY_POS_FILTER))
2223:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
2224:Generated_Source\PSoC4/CapSense_CSHL.c ****                         /* Calculate position to store filters data */
2225:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2226:Generated_Source\PSoC4/CapSense_CSHL.c ****                         posYIndex  = CapSense_posFiltersData[widget + 1u];
2227:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2228:Generated_Source\PSoC4/CapSense_CSHL.c ****                         if (0u == CapSense_posFiltersData[firstTimeIndex])
2229:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2230:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Init filters */
2231:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posXIndex] = posX;
2232:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[posYIndex] = posY;
2233:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2234:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if((0u != (CapSense_MEDIAN_FILTER & \
2235:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK))|| \
2236:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 (0u != (CapSense_AVERAGING_FILTER & \
2237:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2238:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2239:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_MEDIAN_FILTER)) ||
2240:Generated_Source\PSoC4/CapSense_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_AVERAGING_FILTER)) )
2241:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2242:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] = posX;
2243:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] = posY;
2244:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2245:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* ((0u != (CapSense_MEDIAN_FILTER & \
2246:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK)) || \
2247:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *    (0u != (CapSense_AVERAGING_FILTER & \
2248:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *            CapSense_TOUCH_PADS_POS_FILTERS_MASK)))
2249:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2250:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2251:Generated_Source\PSoC4/CapSense_CSHL.c ****                             CapSense_posFiltersData[firstTimeIndex] = 1u;
2252:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2253:Generated_Source\PSoC4/CapSense_CSHL.c ****                         else
2254:Generated_Source\PSoC4/CapSense_CSHL.c ****                         {
2255:Generated_Source\PSoC4/CapSense_CSHL.c ****                             /* Do filtering */
2256:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_MEDIAN_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2257:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_MEDIAN_FILTER))
2258:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2259:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2260:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_MedianFilter(posX,
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 65


2261:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2262:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posXI
2263:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2264:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2265:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2266:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2267:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2268:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_MedianFilter(posY,
2269:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2270:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posY
2271:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2272:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2273:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2274:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2275:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2276:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_MEDIAN_FILTER & \
2277:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2278:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2279:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2280:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if(0u !=(CapSense_AVERAGING_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_M
2281:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_AVERAGING_FILTER))
2282:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2283:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posX;
2284:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_AveragingFilter(posX,
2285:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2286:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                        CapSense_posFiltersData[posX
2287:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex + 1u] =
2288:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                              CapSense_posFiltersDat
2289:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = tempPos;
2290:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2291:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     tempPos = posY;
2292:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_AveragingFilter(posY,
2293:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2294:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                       CapSense_posFiltersData[posYI
2295:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex + 1u] =
2296:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2297:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = tempPos;
2298:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2299:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2300:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_AVERAGING_FILTER & \
2301:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2302:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2303:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2304:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR2_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2305:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR2_FILTER))
2306:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2307:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR2Filter(posX,
2308:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                            CapSense_posFiltersData[
2309:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2310:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2311:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR2Filter(posY,
2312:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2313:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2314:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2315:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2316:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR2_FILTER & \
2317:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *          CapSense_TOUCH_PADS_POS_FILTERS_MASK))
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 66


2318:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2319:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2320:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_IIR4_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MASK
2321:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_IIR4_FILTER))
2322:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 {
2323:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posX = (uint8) CapSense_IIR4Filter((uint16)posX,
2324:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2325:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posXIndex] = posX;
2326:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2327:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     posY = (uint8) CapSense_IIR4Filter((uint16)posY,
2328:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                     (uint16)CapSense_posFiltersData
2329:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     CapSense_posFiltersData[posYIndex] = posY;
2330:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 }
2331:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2332:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_IIR4_FILTER & \
2333:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2334:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2335:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2336:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #if (0u != (CapSense_JITTER_FILTER & CapSense_TOUCH_PADS_POS_FILTERS_MA
2337:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_JITTER_FILTER))
2338:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     {
2339:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posX = (uint8) CapSense_JitterFilter(posX,
2340:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2341:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posXIndex] = posX;
2342:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2343:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         posY = (uint8) CapSense_JitterFilter(posY,
2344:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                             CapSense_posFiltersData
2345:Generated_Source\PSoC4/CapSense_CSHL.c ****                                         CapSense_posFiltersData[posYIndex] = posY;
2346:Generated_Source\PSoC4/CapSense_CSHL.c ****                                     }
2347:Generated_Source\PSoC4/CapSense_CSHL.c ****                             #endif /* (0u != (CapSense_JITTER_FILTER & \
2348:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    *           CapSense_TOUCH_PADS_POS_FILTERS_MASK))
2349:Generated_Source\PSoC4/CapSense_CSHL.c ****                                    */
2350:Generated_Source\PSoC4/CapSense_CSHL.c ****                         }
2351:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
2352:Generated_Source\PSoC4/CapSense_CSHL.c ****                 #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2353:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2354:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Save positions */
2355:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = posX;
2356:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = posY;
2357:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2358:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2359:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2360:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK)
2361:Generated_Source\PSoC4/CapSense_CSHL.c ****             if(touch == 0u)
2362:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2363:Generated_Source\PSoC4/CapSense_CSHL.c ****                 /* Reset filters */
2364:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if ((posFiltersMask & CapSense_ANY_POS_FILTER) != 0u)
2365:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2366:Generated_Source\PSoC4/CapSense_CSHL.c ****                     CapSense_posFiltersData[firstTimeIndex] = 0u;
2367:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2368:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2369:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (0u != CapSense_TOUCH_PADS_POS_FILTERS_MASK) */
2370:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2371:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (touch);
2372:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2373:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2374:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 67


2375:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2376:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2377:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2378:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) )
2379:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2380:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_MedianFilter
2381:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2382:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2383:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2384:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Median filter function.
2385:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2386:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  median value.
2387:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2388:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2389:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2390:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2391:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
2392:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2393:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2394:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2395:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2396:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2397:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2398:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2399:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2400:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2401:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2402:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2403:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2404:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1376              		.loc 1 2404 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381              	.LVL158:
2405:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 tmp;
2406:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2407:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
 1382              		.loc 1 2407 0
 1383 0000 8842     		cmp	r0, r1
 1384 0002 02D9     		bls	.L111
 1385 0004 0300     		movs	r3, r0
2408:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2409:Generated_Source\PSoC4/CapSense_CSHL.c ****             tmp = x2;
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x1;
2411:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1386              		.loc 1 2411 0
 1387 0006 0800     		movs	r0, r1
 1388              	.LVL159:
2410:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1 = tmp;
 1389              		.loc 1 2410 0
 1390 0008 1900     		movs	r1, r3
 1391              	.LVL160:
 1392              	.L111:
2412:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2413:Generated_Source\PSoC4/CapSense_CSHL.c **** 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 68


2414:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x2 > x3)
 1393              		.loc 1 2414 0
 1394 000a 9142     		cmp	r1, r2
 1395 000c 00D9     		bls	.L112
2415:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2416:Generated_Source\PSoC4/CapSense_CSHL.c ****             x2 = x3;
 1396              		.loc 1 2416 0
 1397 000e 1100     		movs	r1, r2
 1398              	.LVL161:
 1399              	.L112:
2417:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2418:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2419:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 1400              		.loc 1 2419 0
 1401 0010 031C     		adds	r3, r0, #0
 1402 0012 8842     		cmp	r0, r1
 1403 0014 00D2     		bcs	.L113
 1404 0016 0B1C     		adds	r3, r1, #0
 1405              	.L113:
 1406 0018 98B2     		uxth	r0, r3
 1407              	.LVL162:
2420:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1408              		.loc 1 2420 0
 1409              		@ sp needed
 1410 001a 7047     		bx	lr
 1411              		.cfi_endproc
 1412              	.LFE64:
 1413              		.size	CapSense_MedianFilter, .-CapSense_MedianFilter
 1414              		.section	.text.CapSense_GetRadialCentroidPos,"ax",%progbits
 1415              		.align	2
 1416              		.global	CapSense_GetRadialCentroidPos
 1417              		.code	16
 1418              		.thumb_func
 1419              		.type	CapSense_GetRadialCentroidPos, %function
 1420              	CapSense_GetRadialCentroidPos:
 1421              	.LFB63:
1975:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (0u != CapSense_RADIAL_SLIDERS_POS_FILTERS_MASK)
 1422              		.loc 1 1975 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 8
 1425              		@ frame_needed = 0, uses_anonymous_args = 0
 1426              	.LVL163:
 1427 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1428              		.cfi_def_cfa_offset 20
 1429              		.cfi_offset 4, -20
 1430              		.cfi_offset 5, -16
 1431              		.cfi_offset 6, -12
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 4746     		mov	r7, r8
 1435 0004 80B4     		push	{r7}
 1436              		.cfi_def_cfa_offset 24
 1437              		.cfi_offset 8, -24
 1438 0006 84B0     		sub	sp, sp, #16
 1439              		.cfi_def_cfa_offset 40
 1440 0008 0500     		movs	r5, r0
1978:Generated_Source\PSoC4/CapSense_CSHL.c ****             uint8 posFiltersMask = CapSense_posFiltersMask[widget];
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 69


 1441              		.loc 1 1978 0
 1442 000a 234B     		ldr	r3, .L120
 1443 000c 1B18     		adds	r3, r3, r0
 1444 000e 2022     		movs	r2, #32
 1445 0010 9F5C     		ldrb	r7, [r3, r2]
 1446              	.LVL164:
1991:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 count = CapSense_numberOfSensors[widget];
 1447              		.loc 1 1991 0
 1448 0012 224A     		ldr	r2, .L120+4
 1449 0014 145C     		ldrb	r4, [r2, r0]
 1450              	.LVL165:
1992:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1451              		.loc 1 1992 0
 1452 0016 1218     		adds	r2, r2, r0
 1453 0018 167A     		ldrb	r6, [r2, #8]
 1454              	.LVL166:
1998:Generated_Source\PSoC4/CapSense_CSHL.c ****         #endif /* (CapSense_IS_DIPLEX_SLIDER) */
 1455              		.loc 1 1998 0
 1456 001a 1A7A     		ldrb	r2, [r3, #8]
 1457 001c 3100     		movs	r1, r6
 1458 001e 2000     		movs	r0, r4
 1459              	.LVL167:
 1460 0020 FFF7FEFF 		bl	CapSense_FindMaximum
 1461              	.LVL168:
2001:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1462              		.loc 1 2001 0
 1463 0024 FF28     		cmp	r0, #255
 1464 0026 2DD0     		beq	.L117
2004:Generated_Source\PSoC4/CapSense_CSHL.c ****                          offset, count, CapSense_centroidMult[widget], CapSense_noiseThreshold[widg
 1465              		.loc 1 2004 0
 1466 0028 1D4B     		ldr	r3, .L120+8
 1467 002a 5B5D     		ldrb	r3, [r3, r5]
 1468 002c 0093     		str	r3, [sp]
 1469 002e C823     		movs	r3, #200
 1470 0030 5B01     		lsls	r3, r3, #5
 1471 0032 3200     		movs	r2, r6
 1472 0034 2100     		movs	r1, r4
 1473 0036 FFF7FEFF 		bl	CapSense_CalcCentroid
 1474              	.LVL169:
 1475 003a 0400     		movs	r4, r0
 1476              	.LVL170:
 1477 003c 80B2     		uxth	r0, r0
 1478              	.LVL171:
2012:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1479              		.loc 1 2012 0
 1480 003e 7D1C     		adds	r5, r7, #1
 1481              	.LVL172:
 1482 0040 EDB2     		uxtb	r5, r5
 1483              	.LVL173:
2014:Generated_Source\PSoC4/CapSense_CSHL.c ****                     {
 1484              		.loc 1 2014 0
 1485 0042 154B     		ldr	r3, .L120
 1486 0044 DB19     		adds	r3, r3, r7
 1487 0046 2022     		movs	r2, #32
 1488 0048 9B5C     		ldrb	r3, [r3, r2]
 1489 004a 002B     		cmp	r3, #0
 1490 004c 09D1     		bne	.L118
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 70


2017:Generated_Source\PSoC4/CapSense_CSHL.c ****                         #if ((0u != (CapSense_MEDIAN_FILTER & \
 1491              		.loc 1 2017 0
 1492 004e 124B     		ldr	r3, .L120
 1493 0050 5919     		adds	r1, r3, r5
 1494 0052 8C54     		strb	r4, [r1, r2]
2026:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
 1495              		.loc 1 2026 0
 1496 0054 0135     		adds	r5, r5, #1
 1497              	.LVL174:
 1498 0056 5D19     		adds	r5, r3, r5
 1499              	.LVL175:
 1500 0058 AC54     		strb	r4, [r5, r2]
2034:Generated_Source\PSoC4/CapSense_CSHL.c ****                     }
 1501              		.loc 1 2034 0
 1502 005a DF19     		adds	r7, r3, r7
 1503              	.LVL176:
 1504 005c 0123     		movs	r3, #1
 1505 005e BB54     		strb	r3, [r7, r2]
 1506 0060 16E0     		b	.L119
 1507              	.LVL177:
 1508              	.L118:
2044:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
 1509              		.loc 1 2044 0
 1510 0062 0D4B     		ldr	r3, .L120
 1511 0064 2026     		movs	r6, #32
 1512              	.LVL178:
 1513 0066 5F19     		adds	r7, r3, r5
 1514              	.LVL179:
 1515 0068 BA5D     		ldrb	r2, [r7, r6]
 1516 006a 9046     		mov	r8, r2
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
 1517              		.loc 1 2043 0
 1518 006c 6946     		mov	r1, sp
 1519 006e CA81     		strh	r2, [r1, #14]
 1520 0070 C989     		ldrh	r1, [r1, #14]
2045:Generated_Source\PSoC4/CapSense_CSHL.c ****                                 CapSense_posFiltersData[posIndex + 1u] =
 1521              		.loc 1 2045 0
 1522 0072 0135     		adds	r5, r5, #1
 1523              	.LVL180:
 1524 0074 5D19     		adds	r5, r3, r5
 1525              	.LVL181:
2043:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                         CapSense_posFiltersData[pos
 1526              		.loc 1 2043 0
 1527 0076 AA5D     		ldrb	r2, [r5, r6]
 1528 0078 FFF7FEFF 		bl	CapSense_MedianFilter
 1529              	.LVL182:
2046:Generated_Source\PSoC4/CapSense_CSHL.c ****                                                                               CapSense_posFiltersDa
 1530              		.loc 1 2046 0
 1531 007c 4346     		mov	r3, r8
 1532 007e AB55     		strb	r3, [r5, r6]
2048:Generated_Source\PSoC4/CapSense_CSHL.c ****                             }
 1533              		.loc 1 2048 0
 1534 0080 BC55     		strb	r4, [r7, r6]
 1535 0082 05E0     		b	.L119
 1536              	.LVL183:
 1537              	.L117:
2115:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 71


 1538              		.loc 1 2115 0
 1539 0084 044B     		ldr	r3, .L120
 1540 0086 DF19     		adds	r7, r3, r7
 1541              	.LVL184:
 1542 0088 0022     		movs	r2, #0
 1543 008a 2023     		movs	r3, #32
 1544 008c FA54     		strb	r2, [r7, r3]
2109:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1545              		.loc 1 2109 0
 1546 008e 0548     		ldr	r0, .L120+12
 1547              	.LVL185:
 1548              	.L119:
2121:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ((CapSense_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
 1549              		.loc 1 2121 0
 1550 0090 04B0     		add	sp, sp, #16
 1551              		@ sp needed
 1552 0092 04BC     		pop	{r2}
 1553 0094 9046     		mov	r8, r2
 1554 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 1555              	.L121:
 1556              		.align	2
 1557              	.L120:
 1558 0098 00000000 		.word	.LANCHOR1
 1559 009c 00000000 		.word	.LANCHOR2
 1560 00a0 00000000 		.word	CapSense_noiseThreshold
 1561 00a4 FFFF0000 		.word	65535
 1562              		.cfi_endproc
 1563              	.LFE63:
 1564              		.size	CapSense_GetRadialCentroidPos, .-CapSense_GetRadialCentroidPos
 1565              		.section	.text.CapSense_IIR4Filter,"ax",%progbits
 1566              		.align	2
 1567              		.global	CapSense_IIR4Filter
 1568              		.code	16
 1569              		.thumb_func
 1570              		.type	CapSense_IIR4Filter, %function
 1571              	CapSense_IIR4Filter:
 1572              	.LFB65:
2421:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)) || \
2422:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_MEDIAN_FILTER)) || \
2423:Generated_Source\PSoC4/CapSense_CSHL.c ****       ((CapSense_TUNING_METHOD == CapSense__TUNING_AUTO)) ) */
2424:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2425:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2426:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)) || \
2427:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER)) )
2428:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2429:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_AveragingFilter
2430:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2431:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2432:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2433:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Averaging filter function.
2434:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2435:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  reports the averaging value.
2436:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2437:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2438:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2439:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2440:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x3:  Before previous value.
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 72


2441:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2442:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2443:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2444:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2445:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2446:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2447:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2448:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2449:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2450:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2451:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2452:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2453:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2454:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2455:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2456:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2457:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2458:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) || \
2459:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_AVERAGING_FILTER) ) */
2460:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2461:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2462:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2463:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2464:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2465:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR2Filter
2466:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2467:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2468:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2469:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2470:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2471:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2472:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2473:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2474:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2475:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2476:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2477:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2478:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2479:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2480:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2481:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2482:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2483:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2484:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2485:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR2Filter(uint16 x1, uint16 x2)
2486:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2487:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2488:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2489:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2490:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2491:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 1u;
2492:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2493:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2494:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2495:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)) || \
2496:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR2_FILTER)) )
2497:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 73


2498:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2499:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2500:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2501:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2502:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2503:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR4Filter
2504:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2505:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2506:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2507:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2508:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2509:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2510:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2511:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2512:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2513:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2514:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns a filtered value.
2515:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2516:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2517:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2518:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2519:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2520:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2521:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2522:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2523:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR4Filter(uint16 x1, uint16 x2)
2524:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1573              		.loc 1 2524 0
 1574              		.cfi_startproc
 1575              		@ args = 0, pretend = 0, frame = 0
 1576              		@ frame_needed = 0, uses_anonymous_args = 0
 1577              		@ link register save eliminated.
 1578              	.LVL186:
2525:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2526:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2527:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2528:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1579              		.loc 1 2528 0
 1580 0000 4018     		adds	r0, r0, r1
 1581              	.LVL187:
2529:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1582              		.loc 1 2529 0
 1583 0002 4900     		lsls	r1, r1, #1
 1584              	.LVL188:
 1585 0004 4018     		adds	r0, r0, r1
 1586              	.LVL189:
2530:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 2u;
 1587              		.loc 1 2530 0
 1588 0006 8008     		lsrs	r0, r0, #2
 1589              	.LVL190:
2531:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2532:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
 1590              		.loc 1 2532 0
 1591 0008 80B2     		uxth	r0, r0
 1592              	.LVL191:
2533:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1593              		.loc 1 2533 0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 74


 1594              		@ sp needed
 1595 000a 7047     		bx	lr
 1596              		.cfi_endproc
 1597              	.LFE65:
 1598              		.size	CapSense_IIR4Filter, .-CapSense_IIR4Filter
 1599              		.section	.text.CapSense_UpdateBaselineNoThreshold,"ax",%progbits
 1600              		.align	2
 1601              		.global	CapSense_UpdateBaselineNoThreshold
 1602              		.code	16
 1603              		.thumb_func
 1604              		.type	CapSense_UpdateBaselineNoThreshold, %function
 1605              	CapSense_UpdateBaselineNoThreshold:
 1606              	.LFB37:
 375:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 calc;
 1607              		.loc 1 375 0
 1608              		.cfi_startproc
 1609              		@ args = 0, pretend = 0, frame = 8
 1610              		@ frame_needed = 0, uses_anonymous_args = 0
 1611              	.LVL192:
 1612 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1613              		.cfi_def_cfa_offset 20
 1614              		.cfi_offset 4, -20
 1615              		.cfi_offset 5, -16
 1616              		.cfi_offset 6, -12
 1617              		.cfi_offset 7, -8
 1618              		.cfi_offset 14, -4
 1619 0002 4746     		mov	r7, r8
 1620 0004 80B4     		push	{r7}
 1621              		.cfi_def_cfa_offset 24
 1622              		.cfi_offset 8, -24
 1623 0006 82B0     		sub	sp, sp, #8
 1624              		.cfi_def_cfa_offset 32
 1625 0008 0400     		movs	r4, r0
 380:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint8 noiseThreshold;
 1626              		.loc 1 380 0
 1627 000a 3F4B     		ldr	r3, .L134
 1628 000c 1E5C     		ldrb	r6, [r3, r0]
 389:Generated_Source\PSoC4/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 1629              		.loc 1 389 0
 1630 000e 3F4B     		ldr	r3, .L134+4
 1631 0010 9B5D     		ldrb	r3, [r3, r6]
 1632 0012 0193     		str	r3, [sp, #4]
 1633              	.LVL193:
 390:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1634              		.loc 1 390 0
 1635 0014 4200     		lsls	r2, r0, #1
 1636 0016 3E4B     		ldr	r3, .L134+8
 1637 0018 D75A     		ldrh	r7, [r2, r3]
 1638              	.LVL194:
 393:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1639              		.loc 1 393 0
 1640 001a 2423     		movs	r3, #36
 1641 001c 3D4A     		ldr	r2, .L134+12
 1642 001e D35C     		ldrb	r3, [r2, r3]
 1643 0020 002B     		cmp	r3, #0
 1644 0022 09D0     		beq	.L124
 414:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_rawFilterData1[sensor] = filteredRawData;
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 75


 1645              		.loc 1 414 0
 1646 0024 3C4D     		ldr	r5, .L134+16
 1647 0026 4300     		lsls	r3, r0, #1
 1648 0028 9846     		mov	r8, r3
 1649 002a 595B     		ldrh	r1, [r3, r5]
 1650 002c 3800     		movs	r0, r7
 1651              	.LVL195:
 1652 002e FFF7FEFF 		bl	CapSense_IIR4Filter
 1653              	.LVL196:
 1654 0032 0700     		movs	r7, r0
 1655              	.LVL197:
 415:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1656              		.loc 1 415 0
 1657 0034 4346     		mov	r3, r8
 1658 0036 5853     		strh	r0, [r3, r5]
 1659              	.LVL198:
 1660              	.L124:
 436:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1661              		.loc 1 436 0
 1662 0038 E1B2     		uxtb	r1, r4
 1663 003a 354A     		ldr	r2, .L134+8
 1664 003c 3748     		ldr	r0, .L134+20
 1665 003e FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_60
 1666              	.LVL199:
 441:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1667              		.loc 1 441 0
 1668 0042 6300     		lsls	r3, r4, #1
 1669 0044 364A     		ldr	r2, .L134+24
 1670 0046 9A5A     		ldrh	r2, [r3, r2]
 1671 0048 9742     		cmp	r7, r2
 1672 004a 07D3     		bcc	.L125
 443:Generated_Source\PSoC4/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 1673              		.loc 1 443 0
 1674 004c 0021     		movs	r1, #0
 1675 004e 354B     		ldr	r3, .L134+28
 1676 0050 1955     		strb	r1, [r3, r4]
 444:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 1677              		.loc 1 444 0
 1678 0052 BD1A     		subs	r5, r7, r2
 1679 0054 ADB2     		uxth	r5, r5
 1680              	.LVL200:
 445:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1681              		.loc 1 445 0
 1682 0056 0123     		movs	r3, #1
 1683 0058 9846     		mov	r8, r3
 1684 005a 03E0     		b	.L126
 1685              	.LVL201:
 1686              	.L125:
 449:Generated_Source\PSoC4/CapSense_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 1687              		.loc 1 449 0
 1688 005c D51B     		subs	r5, r2, r7
 1689 005e ADB2     		uxth	r5, r5
 1690              	.LVL202:
 450:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1691              		.loc 1 450 0
 1692 0060 0023     		movs	r3, #0
 1693 0062 9846     		mov	r8, r3
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 76


 1694              	.LVL203:
 1695              	.L126:
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1696              		.loc 1 454 0
 1697 0064 4346     		mov	r3, r8
 1698 0066 002B     		cmp	r3, #0
 1699 0068 15D1     		bne	.L127
 454:Generated_Source\PSoC4/CapSense_CSHL.c ****     #else
 1700              		.loc 1 454 0 is_stmt 0 discriminator 1
 1701 006a 2F4B     		ldr	r3, .L134+32
 1702 006c 9B5D     		ldrb	r3, [r3, r6]
 1703 006e 9D42     		cmp	r5, r3
 1704 0070 11D9     		bls	.L127
 459:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1705              		.loc 1 459 0 is_stmt 1
 1706 0072 2C4B     		ldr	r3, .L134+28
 1707 0074 1B5D     		ldrb	r3, [r3, r4]
 1708 0076 274A     		ldr	r2, .L134+12
 1709 0078 1219     		adds	r2, r2, r4
 1710 007a 127C     		ldrb	r2, [r2, #16]
 1711 007c 9342     		cmp	r3, r2
 1712 007e 06D3     		bcc	.L128
 461:Generated_Source\PSoC4/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 1713              		.loc 1 461 0
 1714 0080 2000     		movs	r0, r4
 1715 0082 FFF7FEFF 		bl	CapSense_BaseInit
 1716              	.LVL204:
 462:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1717              		.loc 1 462 0
 1718 0086 0022     		movs	r2, #0
 1719 0088 264B     		ldr	r3, .L134+28
 1720 008a 1A55     		strb	r2, [r3, r4]
 1721 008c 1EE0     		b	.L129
 1722              	.L128:
 466:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1723              		.loc 1 466 0
 1724 008e 0133     		adds	r3, r3, #1
 1725 0090 244A     		ldr	r2, .L134+28
 1726 0092 1355     		strb	r3, [r2, r4]
 1727 0094 1AE0     		b	.L129
 1728              	.L127:
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1729              		.loc 1 474 0
 1730 0096 6B46     		mov	r3, sp
 1731 0098 9B88     		ldrh	r3, [r3, #4]
 1732 009a 9D42     		cmp	r5, r3
 1733 009c 06D9     		bls	.L130
 475:Generated_Source\PSoC4/CapSense_CSHL.c ****                && (sign == 0u)))
 1734              		.loc 1 475 0 discriminator 1
 1735 009e 224B     		ldr	r3, .L134+32
 1736 00a0 9B5D     		ldrb	r3, [r3, r6]
 474:Generated_Source\PSoC4/CapSense_CSHL.c ****              ((tempRaw < (uint16) CapSense_negativeNoiseThreshold[widget])
 1737              		.loc 1 474 0 discriminator 1
 1738 00a2 9D42     		cmp	r5, r3
 1739 00a4 12D2     		bcs	.L129
 476:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1740              		.loc 1 476 0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 77


 1741 00a6 4346     		mov	r3, r8
 1742 00a8 002B     		cmp	r3, #0
 1743 00aa 0FD1     		bne	.L129
 1744              	.L130:
 487:Generated_Source\PSoC4/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 1745              		.loc 1 487 0
 1746 00ac 1302     		lsls	r3, r2, #8
 1747 00ae 9C46     		mov	ip, r3
 1748              	.LVL205:
 488:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1749              		.loc 1 488 0
 1750 00b0 1B48     		ldr	r0, .L134+24
 1751 00b2 0119     		adds	r1, r0, r4
 1752 00b4 0B7F     		ldrb	r3, [r1, #28]
 1753              	.LVL206:
 1754 00b6 6646     		mov	r6, ip
 1755 00b8 3343     		orrs	r3, r6
 1756              	.LVL207:
 491:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1757              		.loc 1 491 0
 1758 00ba FF18     		adds	r7, r7, r3
 1759              	.LVL208:
 494:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1760              		.loc 1 494 0
 1761 00bc BF1A     		subs	r7, r7, r2
 1762              	.LVL209:
 497:Generated_Source\PSoC4/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 1763              		.loc 1 497 0
 1764 00be 3A0A     		lsrs	r2, r7, #8
 1765 00c0 6300     		lsls	r3, r4, #1
 1766 00c2 C252     		strh	r2, [r0, r3]
 498:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1767              		.loc 1 498 0
 1768 00c4 0F77     		strb	r7, [r1, #28]
 500:Generated_Source\PSoC4/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 1769              		.loc 1 500 0
 1770 00c6 0022     		movs	r2, #0
 1771 00c8 164B     		ldr	r3, .L134+28
 1772 00ca 1A55     		strb	r2, [r3, r4]
 1773              	.LVL210:
 1774              	.L129:
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1775              		.loc 1 507 0
 1776 00cc 6B46     		mov	r3, sp
 1777 00ce 9E88     		ldrh	r6, [r3, #4]
 1778 00d0 B542     		cmp	r5, r6
 1779 00d2 0FD9     		bls	.L131
 507:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1780              		.loc 1 507 0 is_stmt 0 discriminator 1
 1781 00d4 4346     		mov	r3, r8
 1782 00d6 002B     		cmp	r3, #0
 1783 00d8 0CD0     		beq	.L131
 1784              	.LVL211:
 511:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
 1785              		.loc 1 511 0 is_stmt 1
 1786 00da FF2D     		cmp	r5, #255
 1787 00dc 05D9     		bls	.L132
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 78


 513:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1788              		.loc 1 513 0
 1789 00de 104B     		ldr	r3, .L134+24
 1790              	.LVL212:
 1791 00e0 1C19     		adds	r4, r3, r4
 1792              	.LVL213:
 1793 00e2 FF22     		movs	r2, #255
 1794 00e4 2C23     		movs	r3, #44
 1795 00e6 E254     		strb	r2, [r4, r3]
 1796 00e8 09E0     		b	.L123
 1797              	.LVL214:
 1798              	.L132:
 517:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
 1799              		.loc 1 517 0
 1800 00ea 0D4B     		ldr	r3, .L134+24
 1801              	.LVL215:
 1802 00ec 1C19     		adds	r4, r3, r4
 1803              	.LVL216:
 1804 00ee 2C23     		movs	r3, #44
 1805 00f0 E554     		strb	r5, [r4, r3]
 1806 00f2 04E0     		b	.L123
 1807              	.LVL217:
 1808              	.L131:
 526:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 1809              		.loc 1 526 0
 1810 00f4 0A4B     		ldr	r3, .L134+24
 1811 00f6 1C19     		adds	r4, r3, r4
 1812              	.LVL218:
 1813 00f8 0022     		movs	r2, #0
 1814 00fa 2C23     		movs	r3, #44
 1815 00fc E254     		strb	r2, [r4, r3]
 1816              	.L123:
 533:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1817              		.loc 1 533 0
 1818 00fe 02B0     		add	sp, sp, #8
 1819              		@ sp needed
 1820              	.LVL219:
 1821              	.LVL220:
 1822 0100 04BC     		pop	{r2}
 1823 0102 9046     		mov	r8, r2
 1824 0104 F0BD     		pop	{r4, r5, r6, r7, pc}
 1825              	.L135:
 1826 0106 C046     		.align	2
 1827              	.L134:
 1828 0108 00000000 		.word	CapSense_widgetNumber
 1829 010c 00000000 		.word	CapSense_noiseThreshold
 1830 0110 00000000 		.word	CapSense_sensorRaw
 1831 0114 00000000 		.word	.LANCHOR1
 1832 0118 00000000 		.word	CapSense_rawFilterData1
 1833 011c 00000000 		.word	CapSense_config
 1834 0120 00000000 		.word	.LANCHOR0
 1835 0124 00000000 		.word	CapSense_lowBaselineResetCnt
 1836 0128 00000000 		.word	CapSense_negativeNoiseThreshold
 1837              		.cfi_endproc
 1838              	.LFE37:
 1839              		.size	CapSense_UpdateBaselineNoThreshold, .-CapSense_UpdateBaselineNoThreshold
 1840              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 79


 1841              		.align	2
 1842              		.global	CapSense_UpdateSensorBaseline
 1843              		.code	16
 1844              		.thumb_func
 1845              		.type	CapSense_UpdateSensorBaseline, %function
 1846              	CapSense_UpdateSensorBaseline:
 1847              	.LFB38:
 567:Generated_Source\PSoC4/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 1848              		.loc 1 567 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 0
 1851              		@ frame_needed = 0, uses_anonymous_args = 0
 1852              	.LVL221:
 1853 0000 10B5     		push	{r4, lr}
 1854              		.cfi_def_cfa_offset 8
 1855              		.cfi_offset 4, -8
 1856              		.cfi_offset 14, -4
 1857 0002 0400     		movs	r4, r0
 579:Generated_Source\PSoC4/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense__TUNING_AUTO) */
 1858              		.loc 1 579 0
 1859 0004 FFF7FEFF 		bl	CapSense_UpdateThresholds
 1860              	.LVL222:
 582:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1861              		.loc 1 582 0
 1862 0008 2000     		movs	r0, r4
 1863 000a FFF7FEFF 		bl	CapSense_UpdateBaselineNoThreshold
 1864              	.LVL223:
 588:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1865              		.loc 1 588 0
 1866              		@ sp needed
 1867              	.LVL224:
 1868 000e 10BD     		pop	{r4, pc}
 1869              		.cfi_endproc
 1870              	.LFE38:
 1871              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 1872              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 1873              		.align	2
 1874              		.global	CapSense_UpdateEnabledBaselines
 1875              		.code	16
 1876              		.thumb_func
 1877              		.type	CapSense_UpdateEnabledBaselines, %function
 1878              	CapSense_UpdateEnabledBaselines:
 1879              	.LFB39:
 621:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 i;
 1880              		.loc 1 621 0
 1881              		.cfi_startproc
 1882              		@ args = 0, pretend = 0, frame = 0
 1883              		@ frame_needed = 0, uses_anonymous_args = 0
 1884 0000 10B5     		push	{r4, lr}
 1885              		.cfi_def_cfa_offset 8
 1886              		.cfi_offset 4, -8
 1887              		.cfi_offset 14, -4
 1888              	.LVL225:
 625:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1889              		.loc 1 625 0
 1890 0002 0024     		movs	r4, #0
 1891 0004 09E0     		b	.L138
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 80


 1892              	.LVL226:
 1893              	.L140:
 627:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1894              		.loc 1 627 0
 1895 0006 2100     		movs	r1, r4
 1896 0008 0548     		ldr	r0, .L141
 1897 000a FFF7FEFF 		bl	CapSense_GetBitValue
 1898              	.LVL227:
 629:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1899              		.loc 1 629 0
 1900 000e 0028     		cmp	r0, #0
 1901 0010 02D0     		beq	.L139
 631:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1902              		.loc 1 631 0
 1903 0012 2000     		movs	r0, r4
 1904              	.LVL228:
 1905 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1906              	.LVL229:
 1907              	.L139:
 625:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1908              		.loc 1 625 0 discriminator 2
 1909 0018 0134     		adds	r4, r4, #1
 1910              	.LVL230:
 1911              	.L138:
 625:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1912              		.loc 1 625 0 is_stmt 0 discriminator 1
 1913 001a 0C2C     		cmp	r4, #12
 1914 001c F3D9     		bls	.L140
 634:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1915              		.loc 1 634 0 is_stmt 1
 1916              		@ sp needed
 1917              	.LVL231:
 1918 001e 10BD     		pop	{r4, pc}
 1919              	.L142:
 1920              		.align	2
 1921              	.L141:
 1922 0020 00000000 		.word	CapSense_sensorEnableMask
 1923              		.cfi_endproc
 1924              	.LFE39:
 1925              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 1926              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 1927              		.align	2
 1928              		.global	CapSense_UpdateWidgetBaseline
 1929              		.code	16
 1930              		.thumb_func
 1931              		.type	CapSense_UpdateWidgetBaseline, %function
 1932              	CapSense_UpdateWidgetBaseline:
 1933              	.LFB40:
 666:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 sensorsPerWidget;
 1934              		.loc 1 666 0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 0
 1937              		@ frame_needed = 0, uses_anonymous_args = 0
 1938              	.LVL232:
 1939 0000 70B5     		push	{r4, r5, r6, lr}
 1940              		.cfi_def_cfa_offset 16
 1941              		.cfi_offset 4, -16
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 81


 1942              		.cfi_offset 5, -12
 1943              		.cfi_offset 6, -8
 1944              		.cfi_offset 14, -4
 674:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1945              		.loc 1 674 0
 1946 0002 094B     		ldr	r3, .L147
 1947 0004 1A18     		adds	r2, r3, r0
 1948 0006 157A     		ldrb	r5, [r2, #8]
 1949              	.LVL233:
 677:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1950              		.loc 1 677 0
 1951 0008 1C5C     		ldrb	r4, [r3, r0]
 1952              	.LVL234:
 680:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1953              		.loc 1 680 0
 1954 000a 2D19     		adds	r5, r5, r4
 1955              	.LVL235:
 682:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1956              		.loc 1 682 0
 1957 000c 09E0     		b	.L144
 1958              	.LVL236:
 1959              	.L146:
 684:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1960              		.loc 1 684 0
 1961 000e 2100     		movs	r1, r4
 1962 0010 0648     		ldr	r0, .L147+4
 1963 0012 FFF7FEFF 		bl	CapSense_GetBitValue
 1964              	.LVL237:
 686:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
 1965              		.loc 1 686 0
 1966 0016 0028     		cmp	r0, #0
 1967 0018 02D0     		beq	.L145
 688:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
 1968              		.loc 1 688 0
 1969 001a 2000     		movs	r0, r4
 1970              	.LVL238:
 1971 001c FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 1972              	.LVL239:
 1973              	.L145:
 682:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1974              		.loc 1 682 0 discriminator 2
 1975 0020 0134     		adds	r4, r4, #1
 1976              	.LVL240:
 1977              	.L144:
 682:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 1978              		.loc 1 682 0 is_stmt 0 discriminator 1
 1979 0022 AC42     		cmp	r4, r5
 1980 0024 F3D3     		bcc	.L146
 691:Generated_Source\PSoC4/CapSense_CSHL.c **** 
 1981              		.loc 1 691 0 is_stmt 1
 1982              		@ sp needed
 1983              	.LVL241:
 1984              	.LVL242:
 1985 0026 70BD     		pop	{r4, r5, r6, pc}
 1986              	.L148:
 1987              		.align	2
 1988              	.L147:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 82


 1989 0028 00000000 		.word	.LANCHOR2
 1990 002c 00000000 		.word	CapSense_sensorEnableMask
 1991              		.cfi_endproc
 1992              	.LFE40:
 1993              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 1994              		.section	.text.CapSense_GetWidgetNumber,"ax",%progbits
 1995              		.align	2
 1996              		.global	CapSense_GetWidgetNumber
 1997              		.code	16
 1998              		.thumb_func
 1999              		.type	CapSense_GetWidgetNumber, %function
 2000              	CapSense_GetWidgetNumber:
 2001              	.LFB66:
2534:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)) || \
2535:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_IIR4_FILTER)) )
2536:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2537:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2538:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2539:Generated_Source\PSoC4/CapSense_CSHL.c **** #if ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2540:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) || \
2541:Generated_Source\PSoC4/CapSense_CSHL.c ****       (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)))
2542:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2543:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: uint16 CapSense_JitterFilter
2544:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2545:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2546:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2547:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the Jitter filter function.
2548:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2549:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2550:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2551:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2552:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2553:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2554:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2555:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2556:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2557:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2558:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2559:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2560:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2561:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2562:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2563:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_JitterFilter(uint16 x1, uint16 x2)
2564:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2565:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (x1 > x2)
2566:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2567:Generated_Source\PSoC4/CapSense_CSHL.c ****             x1--;
2568:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2569:Generated_Source\PSoC4/CapSense_CSHL.c ****         else
2570:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2571:Generated_Source\PSoC4/CapSense_CSHL.c ****             if (x1 < x2)
2572:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2573:Generated_Source\PSoC4/CapSense_CSHL.c ****                 x1++;
2574:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2575:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2576:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2577:Generated_Source\PSoC4/CapSense_CSHL.c ****         return x1;
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 83


2578:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2579:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* ( (0u != (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)) || \
2580:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2581:Generated_Source\PSoC4/CapSense_CSHL.c ****        *    (0u != (CapSense_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_JITTER_FILTER)) )
2582:Generated_Source\PSoC4/CapSense_CSHL.c ****        */
2583:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2584:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2585:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER))
2586:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2587:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR8Filter
2588:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2589:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2590:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2591:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2592:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2593:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2594:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2595:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2596:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2597:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2598:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2599:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2600:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2601:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2602:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2603:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2604:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2605:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2606:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2607:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2608:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR8Filter(uint16 x1, uint16 x2)
2609:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2610:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2611:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2612:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2613:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2614:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2615:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 3u;
2616:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2617:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2618:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2619:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)) */
2620:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2621:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2622:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
2623:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2624:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_IIR16Filter
2625:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2626:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2627:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2628:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2629:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Only applies for raw data.
2630:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2631:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2632:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x1:  Current value.
2633:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  x2:  Previous value.
2634:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 84


2635:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2636:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns filtered value.
2637:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2638:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2639:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None.
2640:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2641:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2642:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2643:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2644:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2645:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint16 CapSense_IIR16Filter(uint16 x1, uint16 x2)
2646:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2647:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 tmp;
2648:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2649:Generated_Source\PSoC4/CapSense_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2650:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp = (uint32)x1;
2651:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2652:Generated_Source\PSoC4/CapSense_CSHL.c ****         tmp >>= 4u;
2653:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2654:Generated_Source\PSoC4/CapSense_CSHL.c ****         return ((uint16) tmp);
2655:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2656:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) */
2657:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2658:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2659:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT))
2660:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2661:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2662:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_GetMatrixButtonPos
2663:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2664:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2665:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2666:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2667:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  button widget.
2668:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2669:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2670:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  widget:  widget number;
2671:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2672:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           stored:
2673:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[0] - column position;
2674:Generated_Source\PSoC4/CapSense_CSHL.c ****     *           pos[1] - raw position.
2675:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2676:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2677:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2678:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  cases.
2679:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2680:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2681:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2682:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_sensorSignal[ ] - used to store a difference between the current value of
2683:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  raw data and a previous value of the baseline.
2684:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2685:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2686:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2687:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2688:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2689:Generated_Source\PSoC4/CapSense_CSHL.c ****     uint32 CapSense_GetMatrixButtonPos(uint32 widget, uint8* pos)
2690:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
2691:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 i;
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 85


2692:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint32 retVal = 0u;
2693:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 row_sig_max = 0u;
2694:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint16 col_sig_max = 0u;
2695:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 row_ind = 0u;
2696:Generated_Source\PSoC4/CapSense_CSHL.c ****         uint8 col_ind = 0u;
2697:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2698:Generated_Source\PSoC4/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(widget) == 1u)
2699:Generated_Source\PSoC4/CapSense_CSHL.c ****         {
2700:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2701:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget]; i < (CapSense_rawDataIndex[widget] + \
2702:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget]); i++)
2703:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2704:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > col_sig_max)
2705:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2706:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_ind = i;
2707:Generated_Source\PSoC4/CapSense_CSHL.c ****                     col_sig_max = CapSense_sensorSignal[i];
2708:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2709:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2710:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2711:Generated_Source\PSoC4/CapSense_CSHL.c ****             /* Find row number with maximal signal value */
2712:Generated_Source\PSoC4/CapSense_CSHL.c ****             for(i = CapSense_rawDataIndex[widget+1u]; i < (CapSense_rawDataIndex[widget+1u] + \
2713:Generated_Source\PSoC4/CapSense_CSHL.c ****                  CapSense_numberOfSensors[widget+1u]); i++)
2714:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2715:Generated_Source\PSoC4/CapSense_CSHL.c ****                 if (CapSense_sensorSignal[i] > row_sig_max)
2716:Generated_Source\PSoC4/CapSense_CSHL.c ****                 {
2717:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_ind = i;
2718:Generated_Source\PSoC4/CapSense_CSHL.c ****                     row_sig_max = CapSense_sensorSignal[i];
2719:Generated_Source\PSoC4/CapSense_CSHL.c ****                 }
2720:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2721:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2722:Generated_Source\PSoC4/CapSense_CSHL.c ****             if((col_sig_max >= CapSense_fingerThreshold[widget]) && \
2723:Generated_Source\PSoC4/CapSense_CSHL.c ****                (row_sig_max >= CapSense_fingerThreshold[widget+1u]))
2724:Generated_Source\PSoC4/CapSense_CSHL.c ****             {
2725:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[0u] = col_ind - CapSense_rawDataIndex[widget];
2726:Generated_Source\PSoC4/CapSense_CSHL.c ****                 pos[1u] = row_ind - CapSense_rawDataIndex[widget+1u];
2727:Generated_Source\PSoC4/CapSense_CSHL.c ****                 retVal = 1u;
2728:Generated_Source\PSoC4/CapSense_CSHL.c ****             }
2729:Generated_Source\PSoC4/CapSense_CSHL.c ****         }
2730:Generated_Source\PSoC4/CapSense_CSHL.c ****         return (retVal);
2731:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
2732:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2733:Generated_Source\PSoC4/CapSense_CSHL.c **** #endif /* (0u != (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
2734:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2735:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetWidgetNumber
2737:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2738:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2739:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2740:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2741:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2742:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2743:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2744:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2745:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2746:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2747:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the widget number for the sensor.
2748:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 86


2749:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2750:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_widgetNumber[]  - stores widget numbers.
2751:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2752:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2753:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2754:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2755:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2756:Generated_Source\PSoC4/CapSense_CSHL.c **** uint32 CapSense_GetWidgetNumber(uint32 sensor)
2757:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2002              		.loc 1 2757 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 0
 2005              		@ frame_needed = 0, uses_anonymous_args = 0
 2006              		@ link register save eliminated.
 2007              	.LVL243:
2758:Generated_Source\PSoC4/CapSense_CSHL.c ****     return((uint32)CapSense_widgetNumber[sensor]);
 2008              		.loc 1 2758 0
 2009 0000 014B     		ldr	r3, .L150
 2010 0002 185C     		ldrb	r0, [r3, r0]
 2011              	.LVL244:
2759:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2012              		.loc 1 2759 0
 2013              		@ sp needed
 2014 0004 7047     		bx	lr
 2015              	.L151:
 2016 0006 C046     		.align	2
 2017              	.L150:
 2018 0008 00000000 		.word	CapSense_widgetNumber
 2019              		.cfi_endproc
 2020              	.LFE66:
 2021              		.size	CapSense_GetWidgetNumber, .-CapSense_GetWidgetNumber
 2022              		.section	.text.CapSense_GetLowBaselineReset,"ax",%progbits
 2023              		.align	2
 2024              		.global	CapSense_GetLowBaselineReset
 2025              		.code	16
 2026              		.thumb_func
 2027              		.type	CapSense_GetLowBaselineReset, %function
 2028              	CapSense_GetLowBaselineReset:
 2029              	.LFB67:
2760:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2761:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2762:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetLowBaselineReset
2763:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2764:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2765:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2766:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2767:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2768:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2769:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2770:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2771:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2772:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2773:Generated_Source\PSoC4/CapSense_CSHL.c **** *  low baseline reset threshold value a sensor.
2774:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2775:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2776:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_lowBaselineReset[]  - stores low baseline reset values.
2777:Generated_Source\PSoC4/CapSense_CSHL.c **** *
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 87


2778:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2779:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
2780:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2781:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2782:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetLowBaselineReset(uint32 sensor)
2783:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2030              		.loc 1 2783 0
 2031              		.cfi_startproc
 2032              		@ args = 0, pretend = 0, frame = 0
 2033              		@ frame_needed = 0, uses_anonymous_args = 0
 2034              		@ link register save eliminated.
 2035              	.LVL245:
2784:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_lowBaselineReset[sensor]);
 2036              		.loc 1 2784 0
 2037 0000 014B     		ldr	r3, .L153
 2038 0002 1818     		adds	r0, r3, r0
 2039              	.LVL246:
 2040 0004 007C     		ldrb	r0, [r0, #16]
2785:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2041              		.loc 1 2785 0
 2042              		@ sp needed
 2043 0006 7047     		bx	lr
 2044              	.L154:
 2045              		.align	2
 2046              	.L153:
 2047 0008 00000000 		.word	.LANCHOR1
 2048              		.cfi_endproc
 2049              	.LFE67:
 2050              		.size	CapSense_GetLowBaselineReset, .-CapSense_GetLowBaselineReset
 2051              		.section	.text.CapSense_GetDebounce,"ax",%progbits
 2052              		.align	2
 2053              		.global	CapSense_GetDebounce
 2054              		.code	16
 2055              		.thumb_func
 2056              		.type	CapSense_GetDebounce, %function
 2057              	CapSense_GetDebounce:
 2058              	.LFB68:
2786:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2787:Generated_Source\PSoC4/CapSense_CSHL.c **** /*******************************************************************************
2788:Generated_Source\PSoC4/CapSense_CSHL.c **** * Function Name: CapSense_GetDebounce
2789:Generated_Source\PSoC4/CapSense_CSHL.c **** ********************************************************************************
2790:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2791:Generated_Source\PSoC4/CapSense_CSHL.c **** * Summary:
2792:Generated_Source\PSoC4/CapSense_CSHL.c **** *  This API returns a debounce value.
2793:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2794:Generated_Source\PSoC4/CapSense_CSHL.c **** * Parameters:
2795:Generated_Source\PSoC4/CapSense_CSHL.c **** *  sensor: sensor index. The value of index can be
2796:Generated_Source\PSoC4/CapSense_CSHL.c **** *  from 0 to (CapSense_TOTAL_SENSOR_COUNT-1).
2797:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2798:Generated_Source\PSoC4/CapSense_CSHL.c **** * Return:
2799:Generated_Source\PSoC4/CapSense_CSHL.c **** *  Debounce value
2800:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2801:Generated_Source\PSoC4/CapSense_CSHL.c **** * Global Variables:
2802:Generated_Source\PSoC4/CapSense_CSHL.c **** *  CapSense_debounce[]  - stores the debounce value.
2803:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2804:Generated_Source\PSoC4/CapSense_CSHL.c **** * Side Effects:
2805:Generated_Source\PSoC4/CapSense_CSHL.c **** *  None
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 88


2806:Generated_Source\PSoC4/CapSense_CSHL.c **** *
2807:Generated_Source\PSoC4/CapSense_CSHL.c **** *******************************************************************************/
2808:Generated_Source\PSoC4/CapSense_CSHL.c **** uint8 CapSense_GetDebounce(uint32 widget)
2809:Generated_Source\PSoC4/CapSense_CSHL.c **** {
 2059              		.loc 1 2809 0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 0
 2062              		@ frame_needed = 0, uses_anonymous_args = 0
 2063              		@ link register save eliminated.
 2064              	.LVL247:
2810:Generated_Source\PSoC4/CapSense_CSHL.c ****     return(CapSense_debounce[widget]);
 2065              		.loc 1 2810 0
 2066 0000 014B     		ldr	r3, .L156
 2067 0002 185C     		ldrb	r0, [r3, r0]
 2068              	.LVL248:
2811:Generated_Source\PSoC4/CapSense_CSHL.c **** }
 2069              		.loc 1 2811 0
 2070              		@ sp needed
 2071 0004 7047     		bx	lr
 2072              	.L157:
 2073 0006 C046     		.align	2
 2074              	.L156:
 2075 0008 00000000 		.word	.LANCHOR1
 2076              		.cfi_endproc
 2077              	.LFE68:
 2078              		.size	CapSense_GetDebounce, .-CapSense_GetDebounce
 2079              		.section	.text.CapSense_EnableRawDataFilters,"ax",%progbits
 2080              		.align	2
 2081              		.global	CapSense_EnableRawDataFilters
 2082              		.code	16
 2083              		.thumb_func
 2084              		.type	CapSense_EnableRawDataFilters, %function
 2085              	CapSense_EnableRawDataFilters:
 2086              	.LFB69:
2812:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2813:Generated_Source\PSoC4/CapSense_CSHL.c **** #if (CapSense_RAW_FILTER_MASK != 0u)
2814:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2815:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_EnableRawDataFilters
2816:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2817:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2818:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2819:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2820:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2821:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2822:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2823:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2824:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2825:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2826:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2827:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2828:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2829:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2830:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2831:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2832:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2833:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2834:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_EnableRawDataFilters(void)
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 89


2835:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2087              		.loc 1 2835 0
 2088              		.cfi_startproc
 2089              		@ args = 0, pretend = 0, frame = 0
 2090              		@ frame_needed = 0, uses_anonymous_args = 0
 2091              		@ link register save eliminated.
2836:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_ENABLED;
 2092              		.loc 1 2836 0
 2093 0000 0121     		movs	r1, #1
 2094 0002 2423     		movs	r3, #36
 2095 0004 014A     		ldr	r2, .L159
 2096 0006 D154     		strb	r1, [r2, r3]
2837:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2097              		.loc 1 2837 0
 2098              		@ sp needed
 2099 0008 7047     		bx	lr
 2100              	.L160:
 2101 000a C046     		.align	2
 2102              	.L159:
 2103 000c 00000000 		.word	.LANCHOR1
 2104              		.cfi_endproc
 2105              	.LFE69:
 2106              		.size	CapSense_EnableRawDataFilters, .-CapSense_EnableRawDataFilters
 2107              		.section	.text.CapSense_DisableRawDataFilters,"ax",%progbits
 2108              		.align	2
 2109              		.global	CapSense_DisableRawDataFilters
 2110              		.code	16
 2111              		.thumb_func
 2112              		.type	CapSense_DisableRawDataFilters, %function
 2113              	CapSense_DisableRawDataFilters:
 2114              	.LFB70:
2838:Generated_Source\PSoC4/CapSense_CSHL.c **** 
2839:Generated_Source\PSoC4/CapSense_CSHL.c ****     /*******************************************************************************
2840:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Function Name: CapSense_DisableRawDataFilters
2841:Generated_Source\PSoC4/CapSense_CSHL.c ****     ********************************************************************************
2842:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2843:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Summary:
2844:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2845:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2846:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Parameters:
2847:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2848:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2849:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Return:
2850:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2851:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2852:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Global Variables:
2853:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  CapSense_enableRawFilters defines if the filters are enabled or not.
2854:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2855:Generated_Source\PSoC4/CapSense_CSHL.c ****     * Side Effects:
2856:Generated_Source\PSoC4/CapSense_CSHL.c ****     *  None
2857:Generated_Source\PSoC4/CapSense_CSHL.c ****     *
2858:Generated_Source\PSoC4/CapSense_CSHL.c ****     *******************************************************************************/
2859:Generated_Source\PSoC4/CapSense_CSHL.c ****     void CapSense_DisableRawDataFilters(void)
2860:Generated_Source\PSoC4/CapSense_CSHL.c ****     {
 2115              		.loc 1 2860 0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 90


 2118              		@ frame_needed = 0, uses_anonymous_args = 0
 2119              		@ link register save eliminated.
2861:Generated_Source\PSoC4/CapSense_CSHL.c ****         CapSense_enableRawFilters = CapSense_RAW_FILTERS_DISABLED;
 2120              		.loc 1 2861 0
 2121 0000 0021     		movs	r1, #0
 2122 0002 2423     		movs	r3, #36
 2123 0004 014A     		ldr	r2, .L162
 2124 0006 D154     		strb	r1, [r2, r3]
2862:Generated_Source\PSoC4/CapSense_CSHL.c ****     }
 2125              		.loc 1 2862 0
 2126              		@ sp needed
 2127 0008 7047     		bx	lr
 2128              	.L163:
 2129 000a C046     		.align	2
 2130              	.L162:
 2131 000c 00000000 		.word	.LANCHOR1
 2132              		.cfi_endproc
 2133              	.LFE70:
 2134              		.size	CapSense_DisableRawDataFilters, .-CapSense_DisableRawDataFilters
 2135              		.global	CapSense_numberOfSensors
 2136              		.global	CapSense_rawDataIndex
 2137              		.global	CapSense_debounce
 2138              		.comm	CapSense_hysteresis,6,4
 2139              		.comm	CapSense_negativeNoiseThreshold,6,4
 2140              		.comm	CapSense_noiseThreshold,6,4
 2141              		.global	CapSense_fingerThreshold
 2142              		.global	CapSense_enableRawFilters
 2143              		.global	CapSense_lowBaselineReset
 2144              		.comm	CapSense_lowBaselineResetCnt,13,4
 2145              		.global	CapSense_sensorOnMask
 2146              		.global	CapSense_sensorSignal
 2147              		.global	CapSense_sensorBaselineLow
 2148              		.global	CapSense_sensorBaseline
 2149              		.comm	CapSense_rawFilterData1,26,4
 2150              		.section	.rodata
 2151              		.align	2
 2152              		.set	.LANCHOR2,. + 0
 2153              		.type	CapSense_rawDataIndex, %object
 2154              		.size	CapSense_rawDataIndex, 6
 2155              	CapSense_rawDataIndex:
 2156 0000 05       		.byte	5
 2157 0001 00       		.byte	0
 2158 0002 01       		.byte	1
 2159 0003 02       		.byte	2
 2160 0004 03       		.byte	3
 2161 0005 04       		.byte	4
 2162 0006 0000     		.space	2
 2163              		.type	CapSense_numberOfSensors, %object
 2164              		.size	CapSense_numberOfSensors, 6
 2165              	CapSense_numberOfSensors:
 2166 0008 08       		.byte	8
 2167 0009 01       		.byte	1
 2168 000a 01       		.byte	1
 2169 000b 01       		.byte	1
 2170 000c 01       		.byte	1
 2171 000d 01       		.byte	1
 2172              		.data
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 91


 2173              		.align	2
 2174              		.set	.LANCHOR1,. + 0
 2175              		.type	CapSense_debounce, %object
 2176              		.size	CapSense_debounce, 6
 2177              	CapSense_debounce:
 2178 0000 01       		.byte	1
 2179 0001 02       		.byte	2
 2180 0002 02       		.byte	2
 2181 0003 02       		.byte	2
 2182 0004 02       		.byte	2
 2183 0005 01       		.byte	1
 2184 0006 0000     		.space	2
 2185              		.type	CapSense_fingerThreshold, %object
 2186              		.size	CapSense_fingerThreshold, 6
 2187              	CapSense_fingerThreshold:
 2188 0008 64       		.byte	100
 2189 0009 C8       		.byte	-56
 2190 000a C8       		.byte	-56
 2191 000b C8       		.byte	-56
 2192 000c C8       		.byte	-56
 2193 000d 64       		.byte	100
 2194 000e 0000     		.space	2
 2195              		.type	CapSense_lowBaselineReset, %object
 2196              		.size	CapSense_lowBaselineReset, 13
 2197              	CapSense_lowBaselineReset:
 2198 0010 1E       		.byte	30
 2199 0011 1E       		.byte	30
 2200 0012 1E       		.byte	30
 2201 0013 1E       		.byte	30
 2202 0014 1E       		.byte	30
 2203 0015 1E       		.byte	30
 2204 0016 1E       		.byte	30
 2205 0017 1E       		.byte	30
 2206 0018 1E       		.byte	30
 2207 0019 1E       		.byte	30
 2208 001a 1E       		.byte	30
 2209 001b 1E       		.byte	30
 2210 001c 1E       		.byte	30
 2211 001d 000000   		.space	3
 2212              		.type	CapSense_posFiltersData, %object
 2213              		.size	CapSense_posFiltersData, 4
 2214              	CapSense_posFiltersData:
 2215 0020 01       		.byte	1
 2216 0021 00       		.byte	0
 2217 0022 00       		.byte	0
 2218 0023 00       		.byte	0
 2219              		.type	CapSense_enableRawFilters, %object
 2220              		.size	CapSense_enableRawFilters, 1
 2221              	CapSense_enableRawFilters:
 2222 0024 01       		.byte	1
 2223              		.bss
 2224              		.align	2
 2225              		.set	.LANCHOR0,. + 0
 2226              		.type	CapSense_sensorBaseline, %object
 2227              		.size	CapSense_sensorBaseline, 26
 2228              	CapSense_sensorBaseline:
 2229 0000 00000000 		.space	26
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 92


 2229      00000000 
 2229      00000000 
 2229      00000000 
 2229      00000000 
 2230 001a 0000     		.space	2
 2231              		.type	CapSense_sensorBaselineLow, %object
 2232              		.size	CapSense_sensorBaselineLow, 13
 2233              	CapSense_sensorBaselineLow:
 2234 001c 00000000 		.space	13
 2234      00000000 
 2234      00000000 
 2234      00
 2235 0029 000000   		.space	3
 2236              		.type	CapSense_sensorSignal, %object
 2237              		.size	CapSense_sensorSignal, 13
 2238              	CapSense_sensorSignal:
 2239 002c 00000000 		.space	13
 2239      00000000 
 2239      00000000 
 2239      00
 2240 0039 000000   		.space	3
 2241              		.type	CapSense_debounceCounter, %object
 2242              		.size	CapSense_debounceCounter, 6
 2243              	CapSense_debounceCounter:
 2244 003c 00000000 		.space	6
 2244      0000
 2245 0042 0000     		.space	2
 2246              		.type	CapSense_sensorOnMask, %object
 2247              		.size	CapSense_sensorOnMask, 2
 2248              	CapSense_sensorOnMask:
 2249 0044 0000     		.space	2
 2250 0046 0000     		.space	2
 2251              		.type	CapSense_centroid.5642, %object
 2252              		.size	CapSense_centroid.5642, 3
 2253              	CapSense_centroid.5642:
 2254 0048 000000   		.space	3
 2255              		.text
 2256              	.Letext0:
 2257              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2258              		.file 3 "Generated_Source\\PSoC4\\CapSense_PVT.h"
 2259              		.file 4 "Generated_Source\\PSoC4\\CapSense.h"
 2260              		.section	.debug_info,"",%progbits
 2261              	.Ldebug_info0:
 2262 0000 71110000 		.4byte	0x1171
 2263 0004 0400     		.2byte	0x4
 2264 0006 00000000 		.4byte	.Ldebug_abbrev0
 2265 000a 04       		.byte	0x4
 2266 000b 01       		.uleb128 0x1
 2267 000c 34040000 		.4byte	.LASF152
 2268 0010 0C       		.byte	0xc
 2269 0011 B60A0000 		.4byte	.LASF153
 2270 0015 4F050000 		.4byte	.LASF154
 2271 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2272 001d 00000000 		.4byte	0
 2273 0021 00000000 		.4byte	.Ldebug_line0
 2274 0025 02       		.uleb128 0x2
 2275 0026 01       		.byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 93


 2276 0027 06       		.byte	0x6
 2277 0028 1C0B0000 		.4byte	.LASF0
 2278 002c 02       		.uleb128 0x2
 2279 002d 01       		.byte	0x1
 2280 002e 08       		.byte	0x8
 2281 002f F2090000 		.4byte	.LASF1
 2282 0033 02       		.uleb128 0x2
 2283 0034 02       		.byte	0x2
 2284 0035 05       		.byte	0x5
 2285 0036 C3080000 		.4byte	.LASF2
 2286 003a 02       		.uleb128 0x2
 2287 003b 02       		.byte	0x2
 2288 003c 07       		.byte	0x7
 2289 003d 280B0000 		.4byte	.LASF3
 2290 0041 02       		.uleb128 0x2
 2291 0042 04       		.byte	0x4
 2292 0043 05       		.byte	0x5
 2293 0044 CD080000 		.4byte	.LASF4
 2294 0048 02       		.uleb128 0x2
 2295 0049 04       		.byte	0x4
 2296 004a 07       		.byte	0x7
 2297 004b 84090000 		.4byte	.LASF5
 2298 004f 02       		.uleb128 0x2
 2299 0050 08       		.byte	0x8
 2300 0051 05       		.byte	0x5
 2301 0052 08070000 		.4byte	.LASF6
 2302 0056 02       		.uleb128 0x2
 2303 0057 08       		.byte	0x8
 2304 0058 07       		.byte	0x7
 2305 0059 39030000 		.4byte	.LASF7
 2306 005d 03       		.uleb128 0x3
 2307 005e 04       		.byte	0x4
 2308 005f 05       		.byte	0x5
 2309 0060 696E7400 		.ascii	"int\000"
 2310 0064 02       		.uleb128 0x2
 2311 0065 04       		.byte	0x4
 2312 0066 07       		.byte	0x7
 2313 0067 50010000 		.4byte	.LASF8
 2314 006b 04       		.uleb128 0x4
 2315 006c B80B0000 		.4byte	.LASF9
 2316 0070 02       		.byte	0x2
 2317 0071 E401     		.2byte	0x1e4
 2318 0073 2C000000 		.4byte	0x2c
 2319 0077 04       		.uleb128 0x4
 2320 0078 91060000 		.4byte	.LASF10
 2321 007c 02       		.byte	0x2
 2322 007d E501     		.2byte	0x1e5
 2323 007f 3A000000 		.4byte	0x3a
 2324 0083 04       		.uleb128 0x4
 2325 0084 10080000 		.4byte	.LASF11
 2326 0088 02       		.byte	0x2
 2327 0089 E601     		.2byte	0x1e6
 2328 008b 48000000 		.4byte	0x48
 2329 008f 04       		.uleb128 0x4
 2330 0090 6D010000 		.4byte	.LASF12
 2331 0094 02       		.byte	0x2
 2332 0095 E801     		.2byte	0x1e8
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 94


 2333 0097 33000000 		.4byte	0x33
 2334 009b 04       		.uleb128 0x4
 2335 009c DF020000 		.4byte	.LASF13
 2336 00a0 02       		.byte	0x2
 2337 00a1 E901     		.2byte	0x1e9
 2338 00a3 41000000 		.4byte	0x41
 2339 00a7 02       		.uleb128 0x2
 2340 00a8 04       		.byte	0x4
 2341 00a9 04       		.byte	0x4
 2342 00aa D9020000 		.4byte	.LASF14
 2343 00ae 02       		.uleb128 0x2
 2344 00af 08       		.byte	0x8
 2345 00b0 04       		.byte	0x4
 2346 00b1 BE0B0000 		.4byte	.LASF15
 2347 00b5 02       		.uleb128 0x2
 2348 00b6 01       		.byte	0x1
 2349 00b7 08       		.byte	0x8
 2350 00b8 5A060000 		.4byte	.LASF16
 2351 00bc 02       		.uleb128 0x2
 2352 00bd 04       		.byte	0x4
 2353 00be 07       		.byte	0x7
 2354 00bf 7B090000 		.4byte	.LASF17
 2355 00c3 02       		.uleb128 0x2
 2356 00c4 08       		.byte	0x8
 2357 00c5 04       		.byte	0x4
 2358 00c6 77080000 		.4byte	.LASF18
 2359 00ca 05       		.uleb128 0x5
 2360 00cb 5C       		.byte	0x5c
 2361 00cc 03       		.byte	0x3
 2362 00cd 2F       		.byte	0x2f
 2363 00ce E7010000 		.4byte	0x1e7
 2364 00d2 06       		.uleb128 0x6
 2365 00d3 9D060000 		.4byte	.LASF19
 2366 00d7 03       		.byte	0x3
 2367 00d8 31       		.byte	0x31
 2368 00d9 E7010000 		.4byte	0x1e7
 2369 00dd 00       		.byte	0
 2370 00de 06       		.uleb128 0x6
 2371 00df B4080000 		.4byte	.LASF20
 2372 00e3 03       		.byte	0x3
 2373 00e4 32       		.byte	0x32
 2374 00e5 E7010000 		.4byte	0x1e7
 2375 00e9 04       		.byte	0x4
 2376 00ea 06       		.uleb128 0x6
 2377 00eb 7C0A0000 		.4byte	.LASF21
 2378 00ef 03       		.byte	0x3
 2379 00f0 33       		.byte	0x33
 2380 00f1 E7010000 		.4byte	0x1e7
 2381 00f5 08       		.byte	0x8
 2382 00f6 06       		.uleb128 0x6
 2383 00f7 E5090000 		.4byte	.LASF22
 2384 00fb 03       		.byte	0x3
 2385 00fc 34       		.byte	0x34
 2386 00fd E7010000 		.4byte	0x1e7
 2387 0101 0C       		.byte	0xc
 2388 0102 06       		.uleb128 0x6
 2389 0103 120B0000 		.4byte	.LASF23
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 95


 2390 0107 03       		.byte	0x3
 2391 0108 35       		.byte	0x35
 2392 0109 E7010000 		.4byte	0x1e7
 2393 010d 10       		.byte	0x10
 2394 010e 06       		.uleb128 0x6
 2395 010f FC080000 		.4byte	.LASF24
 2396 0113 03       		.byte	0x3
 2397 0114 36       		.byte	0x36
 2398 0115 ED010000 		.4byte	0x1ed
 2399 0119 14       		.byte	0x14
 2400 011a 06       		.uleb128 0x6
 2401 011b EB020000 		.4byte	.LASF25
 2402 011f 03       		.byte	0x3
 2403 0120 37       		.byte	0x37
 2404 0121 F8010000 		.4byte	0x1f8
 2405 0125 18       		.byte	0x18
 2406 0126 06       		.uleb128 0x6
 2407 0127 E8040000 		.4byte	.LASF26
 2408 012b 03       		.byte	0x3
 2409 012c 38       		.byte	0x38
 2410 012d E7010000 		.4byte	0x1e7
 2411 0131 1C       		.byte	0x1c
 2412 0132 06       		.uleb128 0x6
 2413 0133 24030000 		.4byte	.LASF27
 2414 0137 03       		.byte	0x3
 2415 0138 39       		.byte	0x39
 2416 0139 E7010000 		.4byte	0x1e7
 2417 013d 20       		.byte	0x20
 2418 013e 06       		.uleb128 0x6
 2419 013f BC010000 		.4byte	.LASF28
 2420 0143 03       		.byte	0x3
 2421 0144 3A       		.byte	0x3a
 2422 0145 E7010000 		.4byte	0x1e7
 2423 0149 24       		.byte	0x24
 2424 014a 06       		.uleb128 0x6
 2425 014b B0070000 		.4byte	.LASF29
 2426 014f 03       		.byte	0x3
 2427 0150 3B       		.byte	0x3b
 2428 0151 FE010000 		.4byte	0x1fe
 2429 0155 28       		.byte	0x28
 2430 0156 06       		.uleb128 0x6
 2431 0157 73010000 		.4byte	.LASF30
 2432 015b 03       		.byte	0x3
 2433 015c 3C       		.byte	0x3c
 2434 015d FE010000 		.4byte	0x1fe
 2435 0161 2C       		.byte	0x2c
 2436 0162 06       		.uleb128 0x6
 2437 0163 AE090000 		.4byte	.LASF31
 2438 0167 03       		.byte	0x3
 2439 0168 3D       		.byte	0x3d
 2440 0169 FE010000 		.4byte	0x1fe
 2441 016d 30       		.byte	0x30
 2442 016e 06       		.uleb128 0x6
 2443 016f 51090000 		.4byte	.LASF32
 2444 0173 03       		.byte	0x3
 2445 0174 3E       		.byte	0x3e
 2446 0175 E7010000 		.4byte	0x1e7
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 96


 2447 0179 34       		.byte	0x34
 2448 017a 06       		.uleb128 0x6
 2449 017b 48000000 		.4byte	.LASF33
 2450 017f 03       		.byte	0x3
 2451 0180 3F       		.byte	0x3f
 2452 0181 E7010000 		.4byte	0x1e7
 2453 0185 38       		.byte	0x38
 2454 0186 06       		.uleb128 0x6
 2455 0187 82060000 		.4byte	.LASF34
 2456 018b 03       		.byte	0x3
 2457 018c 40       		.byte	0x40
 2458 018d ED010000 		.4byte	0x1ed
 2459 0191 3C       		.byte	0x3c
 2460 0192 06       		.uleb128 0x6
 2461 0193 29020000 		.4byte	.LASF35
 2462 0197 03       		.byte	0x3
 2463 0198 41       		.byte	0x41
 2464 0199 ED010000 		.4byte	0x1ed
 2465 019d 40       		.byte	0x40
 2466 019e 06       		.uleb128 0x6
 2467 019f 95000000 		.4byte	.LASF36
 2468 01a3 03       		.byte	0x3
 2469 01a4 42       		.byte	0x42
 2470 01a5 ED010000 		.4byte	0x1ed
 2471 01a9 44       		.byte	0x44
 2472 01aa 06       		.uleb128 0x6
 2473 01ab 60070000 		.4byte	.LASF37
 2474 01af 03       		.byte	0x3
 2475 01b0 43       		.byte	0x43
 2476 01b1 13020000 		.4byte	0x213
 2477 01b5 48       		.byte	0x48
 2478 01b6 06       		.uleb128 0x6
 2479 01b7 38070000 		.4byte	.LASF38
 2480 01bb 03       		.byte	0x3
 2481 01bc 44       		.byte	0x44
 2482 01bd 24020000 		.4byte	0x224
 2483 01c1 4C       		.byte	0x4c
 2484 01c2 06       		.uleb128 0x6
 2485 01c3 FE040000 		.4byte	.LASF39
 2486 01c7 03       		.byte	0x3
 2487 01c8 45       		.byte	0x45
 2488 01c9 13020000 		.4byte	0x213
 2489 01cd 50       		.byte	0x50
 2490 01ce 06       		.uleb128 0x6
 2491 01cf A5000000 		.4byte	.LASF40
 2492 01d3 03       		.byte	0x3
 2493 01d4 46       		.byte	0x46
 2494 01d5 3E020000 		.4byte	0x23e
 2495 01d9 54       		.byte	0x54
 2496 01da 06       		.uleb128 0x6
 2497 01db 590B0000 		.4byte	.LASF41
 2498 01df 03       		.byte	0x3
 2499 01e0 47       		.byte	0x47
 2500 01e1 59020000 		.4byte	0x259
 2501 01e5 58       		.byte	0x58
 2502 01e6 00       		.byte	0
 2503 01e7 07       		.uleb128 0x7
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 97


 2504 01e8 04       		.byte	0x4
 2505 01e9 6B000000 		.4byte	0x6b
 2506 01ed 07       		.uleb128 0x7
 2507 01ee 04       		.byte	0x4
 2508 01ef F3010000 		.4byte	0x1f3
 2509 01f3 08       		.uleb128 0x8
 2510 01f4 6B000000 		.4byte	0x6b
 2511 01f8 07       		.uleb128 0x7
 2512 01f9 04       		.byte	0x4
 2513 01fa 83000000 		.4byte	0x83
 2514 01fe 07       		.uleb128 0x7
 2515 01ff 04       		.byte	0x4
 2516 0200 77000000 		.4byte	0x77
 2517 0204 09       		.uleb128 0x9
 2518 0205 77000000 		.4byte	0x77
 2519 0209 13020000 		.4byte	0x213
 2520 020d 0A       		.uleb128 0xa
 2521 020e 83000000 		.4byte	0x83
 2522 0212 00       		.byte	0
 2523 0213 07       		.uleb128 0x7
 2524 0214 04       		.byte	0x4
 2525 0215 04020000 		.4byte	0x204
 2526 0219 0B       		.uleb128 0xb
 2527 021a 24020000 		.4byte	0x224
 2528 021e 0A       		.uleb128 0xa
 2529 021f 83000000 		.4byte	0x83
 2530 0223 00       		.byte	0
 2531 0224 07       		.uleb128 0x7
 2532 0225 04       		.byte	0x4
 2533 0226 19020000 		.4byte	0x219
 2534 022a 09       		.uleb128 0x9
 2535 022b 83000000 		.4byte	0x83
 2536 022f 3E020000 		.4byte	0x23e
 2537 0233 0A       		.uleb128 0xa
 2538 0234 ED010000 		.4byte	0x1ed
 2539 0238 0A       		.uleb128 0xa
 2540 0239 83000000 		.4byte	0x83
 2541 023d 00       		.byte	0
 2542 023e 07       		.uleb128 0x7
 2543 023f 04       		.byte	0x4
 2544 0240 2A020000 		.4byte	0x22a
 2545 0244 0B       		.uleb128 0xb
 2546 0245 59020000 		.4byte	0x259
 2547 0249 0A       		.uleb128 0xa
 2548 024a E7010000 		.4byte	0x1e7
 2549 024e 0A       		.uleb128 0xa
 2550 024f 83000000 		.4byte	0x83
 2551 0253 0A       		.uleb128 0xa
 2552 0254 83000000 		.4byte	0x83
 2553 0258 00       		.byte	0
 2554 0259 07       		.uleb128 0x7
 2555 025a 04       		.byte	0x4
 2556 025b 44020000 		.4byte	0x244
 2557 025f 0C       		.uleb128 0xc
 2558 0260 29010000 		.4byte	.LASF42
 2559 0264 03       		.byte	0x3
 2560 0265 48       		.byte	0x48
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 98


 2561 0266 CA000000 		.4byte	0xca
 2562 026a 05       		.uleb128 0x5
 2563 026b 0C       		.byte	0xc
 2564 026c 03       		.byte	0x3
 2565 026d 4A       		.byte	0x4a
 2566 026e BB020000 		.4byte	0x2bb
 2567 0272 06       		.uleb128 0x6
 2568 0273 FD050000 		.4byte	.LASF43
 2569 0277 03       		.byte	0x3
 2570 0278 4C       		.byte	0x4c
 2571 0279 6B000000 		.4byte	0x6b
 2572 027d 00       		.byte	0
 2573 027e 06       		.uleb128 0x6
 2574 027f 36020000 		.4byte	.LASF44
 2575 0283 03       		.byte	0x3
 2576 0284 4D       		.byte	0x4d
 2577 0285 6B000000 		.4byte	0x6b
 2578 0289 01       		.byte	0x1
 2579 028a 06       		.uleb128 0x6
 2580 028b 5D010000 		.4byte	.LASF45
 2581 028f 03       		.byte	0x3
 2582 0290 4E       		.byte	0x4e
 2583 0291 6B000000 		.4byte	0x6b
 2584 0295 02       		.byte	0x2
 2585 0296 06       		.uleb128 0x6
 2586 0297 34060000 		.4byte	.LASF46
 2587 029b 03       		.byte	0x3
 2588 029c 4F       		.byte	0x4f
 2589 029d 77000000 		.4byte	0x77
 2590 02a1 04       		.byte	0x4
 2591 02a2 06       		.uleb128 0x6
 2592 02a3 8E080000 		.4byte	.LASF47
 2593 02a7 03       		.byte	0x3
 2594 02a8 50       		.byte	0x50
 2595 02a9 77000000 		.4byte	0x77
 2596 02ad 06       		.byte	0x6
 2597 02ae 06       		.uleb128 0x6
 2598 02af 96090000 		.4byte	.LASF48
 2599 02b3 03       		.byte	0x3
 2600 02b4 51       		.byte	0x51
 2601 02b5 BB020000 		.4byte	0x2bb
 2602 02b9 08       		.byte	0x8
 2603 02ba 00       		.byte	0
 2604 02bb 07       		.uleb128 0x7
 2605 02bc 04       		.byte	0x4
 2606 02bd C1020000 		.4byte	0x2c1
 2607 02c1 08       		.uleb128 0x8
 2608 02c2 5F020000 		.4byte	0x25f
 2609 02c6 0C       		.uleb128 0xc
 2610 02c7 A2030000 		.4byte	.LASF49
 2611 02cb 03       		.byte	0x3
 2612 02cc 52       		.byte	0x52
 2613 02cd 6A020000 		.4byte	0x26a
 2614 02d1 0D       		.uleb128 0xd
 2615 02d2 88070000 		.4byte	.LASF50
 2616 02d6 01       		.byte	0x1
 2617 02d7 9E       		.byte	0x9e
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 99


 2618 02d8 00000000 		.4byte	.LFB33
 2619 02dc 48000000 		.4byte	.LFE33-.LFB33
 2620 02e0 01       		.uleb128 0x1
 2621 02e1 9C       		.byte	0x9c
 2622 02e2 05030000 		.4byte	0x305
 2623 02e6 0E       		.uleb128 0xe
 2624 02e7 2D060000 		.4byte	.LASF52
 2625 02eb 01       		.byte	0x1
 2626 02ec 9E       		.byte	0x9e
 2627 02ed 83000000 		.4byte	0x83
 2628 02f1 00000000 		.4byte	.LLST0
 2629 02f5 0F       		.uleb128 0xf
 2630 02f6 6A030000 		.4byte	.LASF54
 2631 02fa 01       		.byte	0x1
 2632 02fb A2       		.byte	0xa2
 2633 02fc 6B000000 		.4byte	0x6b
 2634 0300 21000000 		.4byte	.LLST1
 2635 0304 00       		.byte	0
 2636 0305 0D       		.uleb128 0xd
 2637 0306 DE010000 		.4byte	.LASF51
 2638 030a 01       		.byte	0x1
 2639 030b ED       		.byte	0xed
 2640 030c 00000000 		.4byte	.LFB34
 2641 0310 18000000 		.4byte	.LFE34-.LFB34
 2642 0314 01       		.uleb128 0x1
 2643 0315 9C       		.byte	0x9c
 2644 0316 57030000 		.4byte	0x357
 2645 031a 0E       		.uleb128 0xe
 2646 031b 2D060000 		.4byte	.LASF52
 2647 031f 01       		.byte	0x1
 2648 0320 ED       		.byte	0xed
 2649 0321 83000000 		.4byte	0x83
 2650 0325 41000000 		.4byte	.LLST2
 2651 0329 10       		.uleb128 0x10
 2652 032a 08000000 		.4byte	.LVL6
 2653 032e 27110000 		.4byte	0x1127
 2654 0332 3D030000 		.4byte	0x33d
 2655 0336 11       		.uleb128 0x11
 2656 0337 01       		.uleb128 0x1
 2657 0338 50       		.byte	0x50
 2658 0339 02       		.uleb128 0x2
 2659 033a 74       		.byte	0x74
 2660 033b 00       		.sleb128 0
 2661 033c 00       		.byte	0
 2662 033d 12       		.uleb128 0x12
 2663 033e 0C000000 		.4byte	.LVL7
 2664 0342 32110000 		.4byte	0x1132
 2665 0346 13       		.uleb128 0x13
 2666 0347 16000000 		.4byte	.LVL8
 2667 034b D1020000 		.4byte	0x2d1
 2668 034f 11       		.uleb128 0x11
 2669 0350 01       		.uleb128 0x1
 2670 0351 50       		.byte	0x50
 2671 0352 02       		.uleb128 0x2
 2672 0353 74       		.byte	0x74
 2673 0354 00       		.sleb128 0
 2674 0355 00       		.byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 100


 2675 0356 00       		.byte	0
 2676 0357 14       		.uleb128 0x14
 2677 0358 260A0000 		.4byte	.LASF53
 2678 035c 01       		.byte	0x1
 2679 035d 1201     		.2byte	0x112
 2680 035f 00000000 		.4byte	.LFB35
 2681 0363 14000000 		.4byte	.LFE35-.LFB35
 2682 0367 01       		.uleb128 0x1
 2683 0368 9C       		.byte	0x9c
 2684 0369 8C030000 		.4byte	0x38c
 2685 036d 15       		.uleb128 0x15
 2686 036e 6900     		.ascii	"i\000"
 2687 0370 01       		.byte	0x1
 2688 0371 1401     		.2byte	0x114
 2689 0373 83000000 		.4byte	0x83
 2690 0377 6D000000 		.4byte	.LLST3
 2691 037b 13       		.uleb128 0x13
 2692 037c 0C000000 		.4byte	.LVL12
 2693 0380 05030000 		.4byte	0x305
 2694 0384 11       		.uleb128 0x11
 2695 0385 01       		.uleb128 0x1
 2696 0386 50       		.byte	0x50
 2697 0387 02       		.uleb128 0x2
 2698 0388 74       		.byte	0x74
 2699 0389 00       		.sleb128 0
 2700 038a 00       		.byte	0
 2701 038b 00       		.byte	0
 2702 038c 14       		.uleb128 0x14
 2703 038d 80010000 		.4byte	.LASF55
 2704 0391 01       		.byte	0x1
 2705 0392 3501     		.2byte	0x135
 2706 0394 00000000 		.4byte	.LFB36
 2707 0398 30000000 		.4byte	.LFE36-.LFB36
 2708 039c 01       		.uleb128 0x1
 2709 039d 9C       		.byte	0x9c
 2710 039e F7030000 		.4byte	0x3f7
 2711 03a2 15       		.uleb128 0x15
 2712 03a3 6900     		.ascii	"i\000"
 2713 03a5 01       		.byte	0x1
 2714 03a6 3701     		.2byte	0x137
 2715 03a8 83000000 		.4byte	0x83
 2716 03ac 8C000000 		.4byte	.LLST4
 2717 03b0 16       		.uleb128 0x16
 2718 03b1 0C010000 		.4byte	.LASF56
 2719 03b5 01       		.byte	0x1
 2720 03b6 3801     		.2byte	0x138
 2721 03b8 83000000 		.4byte	0x83
 2722 03bc 9F000000 		.4byte	.LLST5
 2723 03c0 12       		.uleb128 0x12
 2724 03c1 06000000 		.4byte	.LVL15
 2725 03c5 3D110000 		.4byte	0x113d
 2726 03c9 12       		.uleb128 0x12
 2727 03ca 0A000000 		.4byte	.LVL16
 2728 03ce 32110000 		.4byte	0x1132
 2729 03d2 10       		.uleb128 0x10
 2730 03d3 1A000000 		.4byte	.LVL18
 2731 03d7 48110000 		.4byte	0x1148
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 101


 2732 03db E6030000 		.4byte	0x3e6
 2733 03df 11       		.uleb128 0x11
 2734 03e0 01       		.uleb128 0x1
 2735 03e1 51       		.byte	0x51
 2736 03e2 02       		.uleb128 0x2
 2737 03e3 74       		.byte	0x74
 2738 03e4 00       		.sleb128 0
 2739 03e5 00       		.byte	0
 2740 03e6 13       		.uleb128 0x13
 2741 03e7 24000000 		.4byte	.LVL20
 2742 03eb D1020000 		.4byte	0x2d1
 2743 03ef 11       		.uleb128 0x11
 2744 03f0 01       		.uleb128 0x1
 2745 03f1 50       		.byte	0x50
 2746 03f2 02       		.uleb128 0x2
 2747 03f3 74       		.byte	0x74
 2748 03f4 00       		.sleb128 0
 2749 03f5 00       		.byte	0
 2750 03f6 00       		.byte	0
 2751 03f7 17       		.uleb128 0x17
 2752 03f8 460A0000 		.4byte	.LASF59
 2753 03fc 01       		.byte	0x1
 2754 03fd CA02     		.2byte	0x2ca
 2755 03ff 77000000 		.4byte	0x77
 2756 0403 00000000 		.4byte	.LFB41
 2757 0407 0C000000 		.4byte	.LFE41-.LFB41
 2758 040b 01       		.uleb128 0x1
 2759 040c 9C       		.byte	0x9c
 2760 040d 22040000 		.4byte	0x422
 2761 0411 18       		.uleb128 0x18
 2762 0412 2D060000 		.4byte	.LASF52
 2763 0416 01       		.byte	0x1
 2764 0417 CA02     		.2byte	0x2ca
 2765 0419 83000000 		.4byte	0x83
 2766 041d B2000000 		.4byte	.LLST6
 2767 0421 00       		.byte	0
 2768 0422 14       		.uleb128 0x14
 2769 0423 10020000 		.4byte	.LASF57
 2770 0427 01       		.byte	0x1
 2771 0428 E502     		.2byte	0x2e5
 2772 042a 00000000 		.4byte	.LFB42
 2773 042e 0C000000 		.4byte	.LFE42-.LFB42
 2774 0432 01       		.uleb128 0x1
 2775 0433 9C       		.byte	0x9c
 2776 0434 57040000 		.4byte	0x457
 2777 0438 18       		.uleb128 0x18
 2778 0439 2D060000 		.4byte	.LASF52
 2779 043d 01       		.byte	0x1
 2780 043e E502     		.2byte	0x2e5
 2781 0440 83000000 		.4byte	0x83
 2782 0444 D3000000 		.4byte	.LLST7
 2783 0448 19       		.uleb128 0x19
 2784 0449 98060000 		.4byte	.LASF58
 2785 044d 01       		.byte	0x1
 2786 044e E502     		.2byte	0x2e5
 2787 0450 77000000 		.4byte	0x77
 2788 0454 01       		.uleb128 0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 102


 2789 0455 51       		.byte	0x51
 2790 0456 00       		.byte	0
 2791 0457 17       		.uleb128 0x17
 2792 0458 C2040000 		.4byte	.LASF60
 2793 045c 01       		.byte	0x1
 2794 045d 0003     		.2byte	0x300
 2795 045f 6B000000 		.4byte	0x6b
 2796 0463 00000000 		.4byte	.LFB43
 2797 0467 10000000 		.4byte	.LFE43-.LFB43
 2798 046b 01       		.uleb128 0x1
 2799 046c 9C       		.byte	0x9c
 2800 046d 82040000 		.4byte	0x482
 2801 0471 18       		.uleb128 0x18
 2802 0472 2D060000 		.4byte	.LASF52
 2803 0476 01       		.byte	0x1
 2804 0477 0003     		.2byte	0x300
 2805 0479 83000000 		.4byte	0x83
 2806 047d F4000000 		.4byte	.LLST8
 2807 0481 00       		.byte	0
 2808 0482 14       		.uleb128 0x14
 2809 0483 46020000 		.4byte	.LASF61
 2810 0487 01       		.byte	0x1
 2811 0488 1B03     		.2byte	0x31b
 2812 048a 00000000 		.4byte	.LFB44
 2813 048e 10000000 		.4byte	.LFE44-.LFB44
 2814 0492 01       		.uleb128 0x1
 2815 0493 9C       		.byte	0x9c
 2816 0494 B7040000 		.4byte	0x4b7
 2817 0498 18       		.uleb128 0x18
 2818 0499 2D060000 		.4byte	.LASF52
 2819 049d 01       		.byte	0x1
 2820 049e 1B03     		.2byte	0x31b
 2821 04a0 83000000 		.4byte	0x83
 2822 04a4 15010000 		.4byte	.LLST9
 2823 04a8 19       		.uleb128 0x19
 2824 04a9 11040000 		.4byte	.LASF62
 2825 04ad 01       		.byte	0x1
 2826 04ae 1B03     		.2byte	0x31b
 2827 04b0 6B000000 		.4byte	0x6b
 2828 04b4 01       		.uleb128 0x1
 2829 04b5 51       		.byte	0x51
 2830 04b6 00       		.byte	0
 2831 04b7 17       		.uleb128 0x17
 2832 04b8 51080000 		.4byte	.LASF63
 2833 04bc 01       		.byte	0x1
 2834 04bd 3603     		.2byte	0x336
 2835 04bf 6B000000 		.4byte	0x6b
 2836 04c3 00000000 		.4byte	.LFB45
 2837 04c7 0C000000 		.4byte	.LFE45-.LFB45
 2838 04cb 01       		.uleb128 0x1
 2839 04cc 9C       		.byte	0x9c
 2840 04cd E2040000 		.4byte	0x4e2
 2841 04d1 18       		.uleb128 0x18
 2842 04d2 6A030000 		.4byte	.LASF54
 2843 04d6 01       		.byte	0x1
 2844 04d7 3603     		.2byte	0x336
 2845 04d9 83000000 		.4byte	0x83
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 103


 2846 04dd 36010000 		.4byte	.LLST10
 2847 04e1 00       		.byte	0
 2848 04e2 17       		.uleb128 0x17
 2849 04e3 09030000 		.4byte	.LASF64
 2850 04e7 01       		.byte	0x1
 2851 04e8 5103     		.2byte	0x351
 2852 04ea 6B000000 		.4byte	0x6b
 2853 04ee 00000000 		.4byte	.LFB46
 2854 04f2 0C000000 		.4byte	.LFE46-.LFB46
 2855 04f6 01       		.uleb128 0x1
 2856 04f7 9C       		.byte	0x9c
 2857 04f8 0D050000 		.4byte	0x50d
 2858 04fc 18       		.uleb128 0x18
 2859 04fd 6A030000 		.4byte	.LASF54
 2860 0501 01       		.byte	0x1
 2861 0502 5103     		.2byte	0x351
 2862 0504 83000000 		.4byte	0x83
 2863 0508 57010000 		.4byte	.LLST11
 2864 050c 00       		.byte	0
 2865 050d 17       		.uleb128 0x17
 2866 050e 17040000 		.4byte	.LASF65
 2867 0512 01       		.byte	0x1
 2868 0513 6D03     		.2byte	0x36d
 2869 0515 6B000000 		.4byte	0x6b
 2870 0519 00000000 		.4byte	.LFB47
 2871 051d 0C000000 		.4byte	.LFE47-.LFB47
 2872 0521 01       		.uleb128 0x1
 2873 0522 9C       		.byte	0x9c
 2874 0523 38050000 		.4byte	0x538
 2875 0527 18       		.uleb128 0x18
 2876 0528 6A030000 		.4byte	.LASF54
 2877 052c 01       		.byte	0x1
 2878 052d 6D03     		.2byte	0x36d
 2879 052f 83000000 		.4byte	0x83
 2880 0533 78010000 		.4byte	.LLST12
 2881 0537 00       		.byte	0
 2882 0538 17       		.uleb128 0x17
 2883 0539 5F060000 		.4byte	.LASF66
 2884 053d 01       		.byte	0x1
 2885 053e 8903     		.2byte	0x389
 2886 0540 6B000000 		.4byte	0x6b
 2887 0544 00000000 		.4byte	.LFB48
 2888 0548 0C000000 		.4byte	.LFE48-.LFB48
 2889 054c 01       		.uleb128 0x1
 2890 054d 9C       		.byte	0x9c
 2891 054e 63050000 		.4byte	0x563
 2892 0552 18       		.uleb128 0x18
 2893 0553 6A030000 		.4byte	.LASF54
 2894 0557 01       		.byte	0x1
 2895 0558 8903     		.2byte	0x389
 2896 055a 83000000 		.4byte	0x83
 2897 055e 99010000 		.4byte	.LLST13
 2898 0562 00       		.byte	0
 2899 0563 14       		.uleb128 0x14
 2900 0564 D6030000 		.4byte	.LASF67
 2901 0568 01       		.byte	0x1
 2902 0569 AA03     		.2byte	0x3aa
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 104


 2903 056b 00000000 		.4byte	.LFB49
 2904 056f 0C000000 		.4byte	.LFE49-.LFB49
 2905 0573 01       		.uleb128 0x1
 2906 0574 9C       		.byte	0x9c
 2907 0575 98050000 		.4byte	0x598
 2908 0579 18       		.uleb128 0x18
 2909 057a 6A030000 		.4byte	.LASF54
 2910 057e 01       		.byte	0x1
 2911 057f AA03     		.2byte	0x3aa
 2912 0581 83000000 		.4byte	0x83
 2913 0585 BA010000 		.4byte	.LLST14
 2914 0589 19       		.uleb128 0x19
 2915 058a 11040000 		.4byte	.LASF62
 2916 058e 01       		.byte	0x1
 2917 058f AA03     		.2byte	0x3aa
 2918 0591 6B000000 		.4byte	0x6b
 2919 0595 01       		.uleb128 0x1
 2920 0596 51       		.byte	0x51
 2921 0597 00       		.byte	0
 2922 0598 14       		.uleb128 0x14
 2923 0599 8C020000 		.4byte	.LASF68
 2924 059d 01       		.byte	0x1
 2925 059e C603     		.2byte	0x3c6
 2926 05a0 00000000 		.4byte	.LFB50
 2927 05a4 0C000000 		.4byte	.LFE50-.LFB50
 2928 05a8 01       		.uleb128 0x1
 2929 05a9 9C       		.byte	0x9c
 2930 05aa CB050000 		.4byte	0x5cb
 2931 05ae 19       		.uleb128 0x19
 2932 05af 6A030000 		.4byte	.LASF54
 2933 05b3 01       		.byte	0x1
 2934 05b4 C603     		.2byte	0x3c6
 2935 05b6 83000000 		.4byte	0x83
 2936 05ba 01       		.uleb128 0x1
 2937 05bb 50       		.byte	0x50
 2938 05bc 19       		.uleb128 0x19
 2939 05bd 11040000 		.4byte	.LASF62
 2940 05c1 01       		.byte	0x1
 2941 05c2 C603     		.2byte	0x3c6
 2942 05c4 6B000000 		.4byte	0x6b
 2943 05c8 01       		.uleb128 0x1
 2944 05c9 51       		.byte	0x51
 2945 05ca 00       		.byte	0
 2946 05cb 14       		.uleb128 0x14
 2947 05cc 34080000 		.4byte	.LASF69
 2948 05d0 01       		.byte	0x1
 2949 05d1 E203     		.2byte	0x3e2
 2950 05d3 00000000 		.4byte	.LFB51
 2951 05d7 0C000000 		.4byte	.LFE51-.LFB51
 2952 05db 01       		.uleb128 0x1
 2953 05dc 9C       		.byte	0x9c
 2954 05dd FE050000 		.4byte	0x5fe
 2955 05e1 19       		.uleb128 0x19
 2956 05e2 6A030000 		.4byte	.LASF54
 2957 05e6 01       		.byte	0x1
 2958 05e7 E203     		.2byte	0x3e2
 2959 05e9 83000000 		.4byte	0x83
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 105


 2960 05ed 01       		.uleb128 0x1
 2961 05ee 50       		.byte	0x50
 2962 05ef 19       		.uleb128 0x19
 2963 05f0 11040000 		.4byte	.LASF62
 2964 05f4 01       		.byte	0x1
 2965 05f5 E203     		.2byte	0x3e2
 2966 05f7 6B000000 		.4byte	0x6b
 2967 05fb 01       		.uleb128 0x1
 2968 05fc 51       		.byte	0x51
 2969 05fd 00       		.byte	0
 2970 05fe 14       		.uleb128 0x14
 2971 05ff ED070000 		.4byte	.LASF70
 2972 0603 01       		.byte	0x1
 2973 0604 FF03     		.2byte	0x3ff
 2974 0606 00000000 		.4byte	.LFB52
 2975 060a 0C000000 		.4byte	.LFE52-.LFB52
 2976 060e 01       		.uleb128 0x1
 2977 060f 9C       		.byte	0x9c
 2978 0610 31060000 		.4byte	0x631
 2979 0614 19       		.uleb128 0x19
 2980 0615 6A030000 		.4byte	.LASF54
 2981 0619 01       		.byte	0x1
 2982 061a FF03     		.2byte	0x3ff
 2983 061c 83000000 		.4byte	0x83
 2984 0620 01       		.uleb128 0x1
 2985 0621 50       		.byte	0x50
 2986 0622 19       		.uleb128 0x19
 2987 0623 11040000 		.4byte	.LASF62
 2988 0627 01       		.byte	0x1
 2989 0628 FF03     		.2byte	0x3ff
 2990 062a 6B000000 		.4byte	0x6b
 2991 062e 01       		.uleb128 0x1
 2992 062f 51       		.byte	0x51
 2993 0630 00       		.byte	0
 2994 0631 14       		.uleb128 0x14
 2995 0632 C0090000 		.4byte	.LASF71
 2996 0636 01       		.byte	0x1
 2997 0637 1B04     		.2byte	0x41b
 2998 0639 00000000 		.4byte	.LFB53
 2999 063d 0C000000 		.4byte	.LFE53-.LFB53
 3000 0641 01       		.uleb128 0x1
 3001 0642 9C       		.byte	0x9c
 3002 0643 64060000 		.4byte	0x664
 3003 0647 19       		.uleb128 0x19
 3004 0648 6A030000 		.4byte	.LASF54
 3005 064c 01       		.byte	0x1
 3006 064d 1B04     		.2byte	0x41b
 3007 064f 83000000 		.4byte	0x83
 3008 0653 01       		.uleb128 0x1
 3009 0654 50       		.byte	0x50
 3010 0655 19       		.uleb128 0x19
 3011 0656 11040000 		.4byte	.LASF62
 3012 065a 01       		.byte	0x1
 3013 065b 1B04     		.2byte	0x41b
 3014 065d 6B000000 		.4byte	0x6b
 3015 0661 01       		.uleb128 0x1
 3016 0662 51       		.byte	0x51
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 106


 3017 0663 00       		.byte	0
 3018 0664 14       		.uleb128 0x14
 3019 0665 5F0A0000 		.4byte	.LASF72
 3020 0669 01       		.byte	0x1
 3021 066a 3704     		.2byte	0x437
 3022 066c 00000000 		.4byte	.LFB54
 3023 0670 0C000000 		.4byte	.LFE54-.LFB54
 3024 0674 01       		.uleb128 0x1
 3025 0675 9C       		.byte	0x9c
 3026 0676 99060000 		.4byte	0x699
 3027 067a 18       		.uleb128 0x18
 3028 067b 2D060000 		.4byte	.LASF52
 3029 067f 01       		.byte	0x1
 3030 0680 3704     		.2byte	0x437
 3031 0682 83000000 		.4byte	0x83
 3032 0686 DB010000 		.4byte	.LLST15
 3033 068a 19       		.uleb128 0x19
 3034 068b 11040000 		.4byte	.LASF62
 3035 068f 01       		.byte	0x1
 3036 0690 3704     		.2byte	0x437
 3037 0692 6B000000 		.4byte	0x6b
 3038 0696 01       		.uleb128 0x1
 3039 0697 51       		.byte	0x51
 3040 0698 00       		.byte	0
 3041 0699 17       		.uleb128 0x17
 3042 069a 43070000 		.4byte	.LASF73
 3043 069e 01       		.byte	0x1
 3044 069f 6504     		.2byte	0x465
 3045 06a1 83000000 		.4byte	0x83
 3046 06a5 00000000 		.4byte	.LFB55
 3047 06a9 C0000000 		.4byte	.LFE55-.LFB55
 3048 06ad 01       		.uleb128 0x1
 3049 06ae 9C       		.byte	0x9c
 3050 06af 87070000 		.4byte	0x787
 3051 06b3 18       		.uleb128 0x18
 3052 06b4 2D060000 		.4byte	.LASF52
 3053 06b8 01       		.byte	0x1
 3054 06b9 6504     		.2byte	0x465
 3055 06bb 83000000 		.4byte	0x83
 3056 06bf FC010000 		.4byte	.LLST16
 3057 06c3 16       		.uleb128 0x16
 3058 06c4 6A030000 		.4byte	.LASF54
 3059 06c8 01       		.byte	0x1
 3060 06c9 6704     		.2byte	0x467
 3061 06cb 6B000000 		.4byte	0x6b
 3062 06cf 28020000 		.4byte	.LLST17
 3063 06d3 16       		.uleb128 0x16
 3064 06d4 2F070000 		.4byte	.LASF74
 3065 06d8 01       		.byte	0x1
 3066 06d9 6804     		.2byte	0x468
 3067 06db 6B000000 		.4byte	0x6b
 3068 06df 53020000 		.4byte	.LLST18
 3069 06e3 16       		.uleb128 0x16
 3070 06e4 180A0000 		.4byte	.LASF75
 3071 06e8 01       		.byte	0x1
 3072 06e9 6904     		.2byte	0x469
 3073 06eb 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 107


 3074 06ef 66020000 		.4byte	.LLST19
 3075 06f3 16       		.uleb128 0x16
 3076 06f4 D5090000 		.4byte	.LASF76
 3077 06f8 01       		.byte	0x1
 3078 06f9 6B04     		.2byte	0x46b
 3079 06fb 6B000000 		.4byte	0x6b
 3080 06ff 9B020000 		.4byte	.LLST20
 3081 0703 16       		.uleb128 0x16
 3082 0704 0F050000 		.4byte	.LASF77
 3083 0708 01       		.byte	0x1
 3084 0709 6C04     		.2byte	0x46c
 3085 070b 6B000000 		.4byte	0x6b
 3086 070f AE020000 		.4byte	.LLST21
 3087 0713 10       		.uleb128 0x10
 3088 0714 38000000 		.4byte	.LVL58
 3089 0718 48110000 		.4byte	0x1148
 3090 071c 30070000 		.4byte	0x730
 3091 0720 11       		.uleb128 0x11
 3092 0721 01       		.uleb128 0x1
 3093 0722 50       		.byte	0x50
 3094 0723 05       		.uleb128 0x5
 3095 0724 03       		.byte	0x3
 3096 0725 44000000 		.4byte	.LANCHOR0+68
 3097 0729 11       		.uleb128 0x11
 3098 072a 01       		.uleb128 0x1
 3099 072b 51       		.byte	0x51
 3100 072c 02       		.uleb128 0x2
 3101 072d 75       		.byte	0x75
 3102 072e 00       		.sleb128 0
 3103 072f 00       		.byte	0
 3104 0730 10       		.uleb128 0x10
 3105 0731 5A000000 		.4byte	.LVL60
 3106 0735 53110000 		.4byte	0x1153
 3107 0739 50070000 		.4byte	0x750
 3108 073d 11       		.uleb128 0x11
 3109 073e 01       		.uleb128 0x1
 3110 073f 50       		.byte	0x50
 3111 0740 03       		.uleb128 0x3
 3112 0741 76       		.byte	0x76
 3113 0742 C400     		.sleb128 68
 3114 0744 11       		.uleb128 0x11
 3115 0745 01       		.uleb128 0x1
 3116 0746 51       		.byte	0x51
 3117 0747 02       		.uleb128 0x2
 3118 0748 75       		.byte	0x75
 3119 0749 00       		.sleb128 0
 3120 074a 11       		.uleb128 0x11
 3121 074b 01       		.uleb128 0x1
 3122 074c 52       		.byte	0x52
 3123 074d 01       		.uleb128 0x1
 3124 074e 30       		.byte	0x30
 3125 074f 00       		.byte	0
 3126 0750 10       		.uleb128 0x10
 3127 0751 90000000 		.4byte	.LVL64
 3128 0755 53110000 		.4byte	0x1153
 3129 0759 6D070000 		.4byte	0x76d
 3130 075d 11       		.uleb128 0x11
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 108


 3131 075e 01       		.uleb128 0x1
 3132 075f 50       		.byte	0x50
 3133 0760 05       		.uleb128 0x5
 3134 0761 03       		.byte	0x3
 3135 0762 44000000 		.4byte	.LANCHOR0+68
 3136 0766 11       		.uleb128 0x11
 3137 0767 01       		.uleb128 0x1
 3138 0768 51       		.byte	0x51
 3139 0769 02       		.uleb128 0x2
 3140 076a 75       		.byte	0x75
 3141 076b 00       		.sleb128 0
 3142 076c 00       		.byte	0
 3143 076d 13       		.uleb128 0x13
 3144 076e A4000000 		.4byte	.LVL68
 3145 0772 48110000 		.4byte	0x1148
 3146 0776 11       		.uleb128 0x11
 3147 0777 01       		.uleb128 0x1
 3148 0778 50       		.byte	0x50
 3149 0779 05       		.uleb128 0x5
 3150 077a 03       		.byte	0x3
 3151 077b 44000000 		.4byte	.LANCHOR0+68
 3152 077f 11       		.uleb128 0x11
 3153 0780 01       		.uleb128 0x1
 3154 0781 51       		.byte	0x51
 3155 0782 02       		.uleb128 0x2
 3156 0783 75       		.byte	0x75
 3157 0784 00       		.sleb128 0
 3158 0785 00       		.byte	0
 3159 0786 00       		.byte	0
 3160 0787 17       		.uleb128 0x17
 3161 0788 9B0B0000 		.4byte	.LASF78
 3162 078c 01       		.byte	0x1
 3163 078d BF04     		.2byte	0x4bf
 3164 078f 83000000 		.4byte	0x83
 3165 0793 00000000 		.4byte	.LFB56
 3166 0797 28000000 		.4byte	.LFE56-.LFB56
 3167 079b 01       		.uleb128 0x1
 3168 079c 9C       		.byte	0x9c
 3169 079d F2070000 		.4byte	0x7f2
 3170 07a1 18       		.uleb128 0x18
 3171 07a2 6A030000 		.4byte	.LASF54
 3172 07a6 01       		.byte	0x1
 3173 07a7 BF04     		.2byte	0x4bf
 3174 07a9 83000000 		.4byte	0x83
 3175 07ad CC020000 		.4byte	.LLST22
 3176 07b1 16       		.uleb128 0x16
 3177 07b2 B7060000 		.4byte	.LASF79
 3178 07b6 01       		.byte	0x1
 3179 07b7 C104     		.2byte	0x4c1
 3180 07b9 83000000 		.4byte	0x83
 3181 07bd ED020000 		.4byte	.LLST23
 3182 07c1 16       		.uleb128 0x16
 3183 07c2 1C010000 		.4byte	.LASF80
 3184 07c6 01       		.byte	0x1
 3185 07c7 C204     		.2byte	0x4c2
 3186 07c9 83000000 		.4byte	0x83
 3187 07cd 00030000 		.4byte	.LLST24
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 109


 3188 07d1 16       		.uleb128 0x16
 3189 07d2 F20A0000 		.4byte	.LASF81
 3190 07d6 01       		.byte	0x1
 3191 07d7 C304     		.2byte	0x4c3
 3192 07d9 83000000 		.4byte	0x83
 3193 07dd 3B030000 		.4byte	.LLST25
 3194 07e1 13       		.uleb128 0x13
 3195 07e2 14000000 		.4byte	.LVL77
 3196 07e6 99060000 		.4byte	0x699
 3197 07ea 11       		.uleb128 0x11
 3198 07eb 01       		.uleb128 0x1
 3199 07ec 50       		.byte	0x50
 3200 07ed 02       		.uleb128 0x2
 3201 07ee 74       		.byte	0x74
 3202 07ef 00       		.sleb128 0
 3203 07f0 00       		.byte	0
 3204 07f1 00       		.byte	0
 3205 07f2 17       		.uleb128 0x17
 3206 07f3 A4050000 		.4byte	.LASF82
 3207 07f7 01       		.byte	0x1
 3208 07f8 ED04     		.2byte	0x4ed
 3209 07fa 83000000 		.4byte	0x83
 3210 07fe 00000000 		.4byte	.LFB57
 3211 0802 1E000000 		.4byte	.LFE57-.LFB57
 3212 0806 01       		.uleb128 0x1
 3213 0807 9C       		.byte	0x9c
 3214 0808 3B080000 		.4byte	0x83b
 3215 080c 15       		.uleb128 0x15
 3216 080d 6900     		.ascii	"i\000"
 3217 080f 01       		.byte	0x1
 3218 0810 F004     		.2byte	0x4f0
 3219 0812 83000000 		.4byte	0x83
 3220 0816 65030000 		.4byte	.LLST26
 3221 081a 16       		.uleb128 0x16
 3222 081b F20A0000 		.4byte	.LASF81
 3223 081f 01       		.byte	0x1
 3224 0820 F104     		.2byte	0x4f1
 3225 0822 83000000 		.4byte	0x83
 3226 0826 84030000 		.4byte	.LLST27
 3227 082a 13       		.uleb128 0x13
 3228 082b 0E000000 		.4byte	.LVL85
 3229 082f 87070000 		.4byte	0x787
 3230 0833 11       		.uleb128 0x11
 3231 0834 01       		.uleb128 0x1
 3232 0835 50       		.byte	0x50
 3233 0836 02       		.uleb128 0x2
 3234 0837 74       		.byte	0x74
 3235 0838 00       		.sleb128 0
 3236 0839 00       		.byte	0
 3237 083a 00       		.byte	0
 3238 083b 14       		.uleb128 0x14
 3239 083c 44060000 		.4byte	.LASF83
 3240 0840 01       		.byte	0x1
 3241 0841 1C05     		.2byte	0x51c
 3242 0843 00000000 		.4byte	.LFB58
 3243 0847 2C000000 		.4byte	.LFE58-.LFB58
 3244 084b 01       		.uleb128 0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 110


 3245 084c 9C       		.byte	0x9c
 3246 084d 97080000 		.4byte	0x897
 3247 0851 18       		.uleb128 0x18
 3248 0852 6A030000 		.4byte	.LASF54
 3249 0856 01       		.byte	0x1
 3250 0857 1C05     		.2byte	0x51c
 3251 0859 83000000 		.4byte	0x83
 3252 085d AE030000 		.4byte	.LLST28
 3253 0861 16       		.uleb128 0x16
 3254 0862 B7060000 		.4byte	.LASF79
 3255 0866 01       		.byte	0x1
 3256 0867 1F05     		.2byte	0x51f
 3257 0869 6B000000 		.4byte	0x6b
 3258 086d CF030000 		.4byte	.LLST29
 3259 0871 16       		.uleb128 0x16
 3260 0872 1C010000 		.4byte	.LASF80
 3261 0876 01       		.byte	0x1
 3262 0877 2005     		.2byte	0x520
 3263 0879 6B000000 		.4byte	0x6b
 3264 087d ED030000 		.4byte	.LLST30
 3265 0881 13       		.uleb128 0x13
 3266 0882 18000000 		.4byte	.LVL94
 3267 0886 53110000 		.4byte	0x1153
 3268 088a 11       		.uleb128 0x11
 3269 088b 01       		.uleb128 0x1
 3270 088c 51       		.byte	0x51
 3271 088d 02       		.uleb128 0x2
 3272 088e 74       		.byte	0x74
 3273 088f 00       		.sleb128 0
 3274 0890 11       		.uleb128 0x11
 3275 0891 01       		.uleb128 0x1
 3276 0892 52       		.byte	0x52
 3277 0893 01       		.uleb128 0x1
 3278 0894 31       		.byte	0x31
 3279 0895 00       		.byte	0
 3280 0896 00       		.byte	0
 3281 0897 14       		.uleb128 0x14
 3282 0898 B4000000 		.4byte	.LASF84
 3283 089c 01       		.byte	0x1
 3284 089d 4705     		.2byte	0x547
 3285 089f 00000000 		.4byte	.LFB59
 3286 08a3 2C000000 		.4byte	.LFE59-.LFB59
 3287 08a7 01       		.uleb128 0x1
 3288 08a8 9C       		.byte	0x9c
 3289 08a9 F3080000 		.4byte	0x8f3
 3290 08ad 18       		.uleb128 0x18
 3291 08ae 6A030000 		.4byte	.LASF54
 3292 08b2 01       		.byte	0x1
 3293 08b3 4705     		.2byte	0x547
 3294 08b5 83000000 		.4byte	0x83
 3295 08b9 28040000 		.4byte	.LLST31
 3296 08bd 16       		.uleb128 0x16
 3297 08be B7060000 		.4byte	.LASF79
 3298 08c2 01       		.byte	0x1
 3299 08c3 4905     		.2byte	0x549
 3300 08c5 6B000000 		.4byte	0x6b
 3301 08c9 49040000 		.4byte	.LLST32
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 111


 3302 08cd 16       		.uleb128 0x16
 3303 08ce 1C010000 		.4byte	.LASF80
 3304 08d2 01       		.byte	0x1
 3305 08d3 4A05     		.2byte	0x54a
 3306 08d5 6B000000 		.4byte	0x6b
 3307 08d9 67040000 		.4byte	.LLST33
 3308 08dd 13       		.uleb128 0x13
 3309 08de 18000000 		.4byte	.LVL103
 3310 08e2 53110000 		.4byte	0x1153
 3311 08e6 11       		.uleb128 0x11
 3312 08e7 01       		.uleb128 0x1
 3313 08e8 51       		.byte	0x51
 3314 08e9 02       		.uleb128 0x2
 3315 08ea 74       		.byte	0x74
 3316 08eb 00       		.sleb128 0
 3317 08ec 11       		.uleb128 0x11
 3318 08ed 01       		.uleb128 0x1
 3319 08ee 52       		.byte	0x52
 3320 08ef 01       		.uleb128 0x1
 3321 08f0 30       		.byte	0x30
 3322 08f1 00       		.byte	0
 3323 08f2 00       		.byte	0
 3324 08f3 17       		.uleb128 0x17
 3325 08f4 E7080000 		.4byte	.LASF85
 3326 08f8 01       		.byte	0x1
 3327 08f9 7905     		.2byte	0x579
 3328 08fb 6B000000 		.4byte	0x6b
 3329 08ff 00000000 		.4byte	.LFB60
 3330 0903 2C000000 		.4byte	.LFE60-.LFB60
 3331 0907 01       		.uleb128 0x1
 3332 0908 9C       		.byte	0x9c
 3333 0909 78090000 		.4byte	0x978
 3334 090d 18       		.uleb128 0x18
 3335 090e E1040000 		.4byte	.LASF86
 3336 0912 01       		.byte	0x1
 3337 0913 7905     		.2byte	0x579
 3338 0915 6B000000 		.4byte	0x6b
 3339 0919 A2040000 		.4byte	.LLST34
 3340 091d 19       		.uleb128 0x19
 3341 091e E5020000 		.4byte	.LASF87
 3342 0922 01       		.byte	0x1
 3343 0923 7905     		.2byte	0x579
 3344 0925 6B000000 		.4byte	0x6b
 3345 0929 01       		.uleb128 0x1
 3346 092a 51       		.byte	0x51
 3347 092b 19       		.uleb128 0x19
 3348 092c D5090000 		.4byte	.LASF76
 3349 0930 01       		.byte	0x1
 3350 0931 7905     		.2byte	0x579
 3351 0933 6B000000 		.4byte	0x6b
 3352 0937 01       		.uleb128 0x1
 3353 0938 52       		.byte	0x52
 3354 0939 15       		.uleb128 0x15
 3355 093a 6900     		.ascii	"i\000"
 3356 093c 01       		.byte	0x1
 3357 093d 7C05     		.2byte	0x57c
 3358 093f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 112


 3359 0943 C3040000 		.4byte	.LLST35
 3360 0947 16       		.uleb128 0x16
 3361 0948 73090000 		.4byte	.LASF88
 3362 094c 01       		.byte	0x1
 3363 094d 8605     		.2byte	0x586
 3364 094f 6B000000 		.4byte	0x6b
 3365 0953 ED040000 		.4byte	.LLST36
 3366 0957 16       		.uleb128 0x16
 3367 0958 E2080000 		.4byte	.LASF89
 3368 095c 01       		.byte	0x1
 3369 095d 8805     		.2byte	0x588
 3370 095f 6B000000 		.4byte	0x6b
 3371 0963 0D050000 		.4byte	.LLST37
 3372 0967 16       		.uleb128 0x16
 3373 0968 26080000 		.4byte	.LASF90
 3374 096c 01       		.byte	0x1
 3375 096d 8905     		.2byte	0x589
 3376 096f E7010000 		.4byte	0x1e7
 3377 0973 37050000 		.4byte	.LLST38
 3378 0977 00       		.byte	0
 3379 0978 1A       		.uleb128 0x1a
 3380 0979 9A070000 		.4byte	.LASF91
 3381 097d 01       		.byte	0x1
 3382 097e 1806     		.2byte	0x618
 3383 0980 6B000000 		.4byte	0x6b
 3384 0984 00000000 		.4byte	.LFB61
 3385 0988 E4000000 		.4byte	.LFE61-.LFB61
 3386 098c 01       		.uleb128 0x1
 3387 098d 9C       		.byte	0x9c
 3388 098e 330A0000 		.4byte	0xa33
 3389 0992 18       		.uleb128 0x18
 3390 0993 73090000 		.4byte	.LASF88
 3391 0997 01       		.byte	0x1
 3392 0998 1806     		.2byte	0x618
 3393 099a 6B000000 		.4byte	0x6b
 3394 099e 4A050000 		.4byte	.LLST39
 3395 09a2 18       		.uleb128 0x18
 3396 09a3 E1040000 		.4byte	.LASF86
 3397 09a7 01       		.byte	0x1
 3398 09a8 1806     		.2byte	0x618
 3399 09aa 6B000000 		.4byte	0x6b
 3400 09ae 6B050000 		.4byte	.LLST40
 3401 09b2 18       		.uleb128 0x18
 3402 09b3 E5020000 		.4byte	.LASF87
 3403 09b7 01       		.byte	0x1
 3404 09b8 1906     		.2byte	0x619
 3405 09ba 6B000000 		.4byte	0x6b
 3406 09be BE050000 		.4byte	.LLST41
 3407 09c2 18       		.uleb128 0x18
 3408 09c3 AC060000 		.4byte	.LASF92
 3409 09c7 01       		.byte	0x1
 3410 09c8 1906     		.2byte	0x619
 3411 09ca 77000000 		.4byte	0x77
 3412 09ce DF050000 		.4byte	.LLST42
 3413 09d2 18       		.uleb128 0x18
 3414 09d3 9F090000 		.4byte	.LASF93
 3415 09d7 01       		.byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 113


 3416 09d8 1906     		.2byte	0x619
 3417 09da 6B000000 		.4byte	0x6b
 3418 09de 00060000 		.4byte	.LLST43
 3419 09e2 1B       		.uleb128 0x1b
 3420 09e3 DA060000 		.4byte	.LASF94
 3421 09e7 01       		.byte	0x1
 3422 09e8 2306     		.2byte	0x623
 3423 09ea 330A0000 		.4byte	0xa33
 3424 09ee 05       		.uleb128 0x5
 3425 09ef 03       		.byte	0x3
 3426 09f0 48000000 		.4byte	CapSense_centroid.5642
 3427 09f4 1B       		.uleb128 0x1b
 3428 09f5 DD0B0000 		.4byte	.LASF95
 3429 09f9 01       		.byte	0x1
 3430 09fa 2A06     		.2byte	0x62a
 3431 09fc 6B000000 		.4byte	0x6b
 3432 0a00 01       		.uleb128 0x1
 3433 0a01 50       		.byte	0x50
 3434 0a02 16       		.uleb128 0x16
 3435 0a03 6D080000 		.4byte	.LASF96
 3436 0a07 01       		.byte	0x1
 3437 0a08 2B06     		.2byte	0x62b
 3438 0a0a 83000000 		.4byte	0x83
 3439 0a0e 2C060000 		.4byte	.LLST44
 3440 0a12 16       		.uleb128 0x16
 3441 0a13 45090000 		.4byte	.LASF97
 3442 0a17 01       		.byte	0x1
 3443 0a18 2C06     		.2byte	0x62c
 3444 0a1a 9B000000 		.4byte	0x9b
 3445 0a1e 57060000 		.4byte	.LLST45
 3446 0a22 16       		.uleb128 0x16
 3447 0a23 26080000 		.4byte	.LASF90
 3448 0a27 01       		.byte	0x1
 3449 0a28 2E06     		.2byte	0x62e
 3450 0a2a E7010000 		.4byte	0x1e7
 3451 0a2e 94060000 		.4byte	.LLST46
 3452 0a32 00       		.byte	0
 3453 0a33 1C       		.uleb128 0x1c
 3454 0a34 6B000000 		.4byte	0x6b
 3455 0a38 430A0000 		.4byte	0xa43
 3456 0a3c 1D       		.uleb128 0x1d
 3457 0a3d BC000000 		.4byte	0xbc
 3458 0a41 02       		.byte	0x2
 3459 0a42 00       		.byte	0
 3460 0a43 17       		.uleb128 0x17
 3461 0a44 9C080000 		.4byte	.LASF98
 3462 0a48 01       		.byte	0x1
 3463 0a49 EB06     		.2byte	0x6eb
 3464 0a4b 77000000 		.4byte	0x77
 3465 0a4f 00000000 		.4byte	.LFB62
 3466 0a53 4C000000 		.4byte	.LFE62-.LFB62
 3467 0a57 01       		.uleb128 0x1
 3468 0a58 9C       		.byte	0x9c
 3469 0a59 E50A0000 		.4byte	0xae5
 3470 0a5d 18       		.uleb128 0x18
 3471 0a5e 6A030000 		.4byte	.LASF54
 3472 0a62 01       		.byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 114


 3473 0a63 EB06     		.2byte	0x6eb
 3474 0a65 83000000 		.4byte	0x83
 3475 0a69 07070000 		.4byte	.LLST47
 3476 0a6d 16       		.uleb128 0x16
 3477 0a6e 73090000 		.4byte	.LASF88
 3478 0a72 01       		.byte	0x1
 3479 0a73 FE06     		.2byte	0x6fe
 3480 0a75 6B000000 		.4byte	0x6b
 3481 0a79 33070000 		.4byte	.LLST48
 3482 0a7d 16       		.uleb128 0x16
 3483 0a7e DD0B0000 		.4byte	.LASF95
 3484 0a82 01       		.byte	0x1
 3485 0a83 FF06     		.2byte	0x6ff
 3486 0a85 77000000 		.4byte	0x77
 3487 0a89 51070000 		.4byte	.LLST49
 3488 0a8d 16       		.uleb128 0x16
 3489 0a8e E1040000 		.4byte	.LASF86
 3490 0a92 01       		.byte	0x1
 3491 0a93 0007     		.2byte	0x700
 3492 0a95 6B000000 		.4byte	0x6b
 3493 0a99 6F070000 		.4byte	.LLST50
 3494 0a9d 16       		.uleb128 0x16
 3495 0a9e E5020000 		.4byte	.LASF87
 3496 0aa2 01       		.byte	0x1
 3497 0aa3 0107     		.2byte	0x701
 3498 0aa5 6B000000 		.4byte	0x6b
 3499 0aa9 95070000 		.4byte	.LLST51
 3500 0aad 10       		.uleb128 0x10
 3501 0aae 1C000000 		.4byte	.LVL150
 3502 0ab2 F3080000 		.4byte	0x8f3
 3503 0ab6 C70A0000 		.4byte	0xac7
 3504 0aba 11       		.uleb128 0x11
 3505 0abb 01       		.uleb128 0x1
 3506 0abc 50       		.byte	0x50
 3507 0abd 02       		.uleb128 0x2
 3508 0abe 75       		.byte	0x75
 3509 0abf 00       		.sleb128 0
 3510 0ac0 11       		.uleb128 0x11
 3511 0ac1 01       		.uleb128 0x1
 3512 0ac2 51       		.byte	0x51
 3513 0ac3 02       		.uleb128 0x2
 3514 0ac4 76       		.byte	0x76
 3515 0ac5 00       		.sleb128 0
 3516 0ac6 00       		.byte	0
 3517 0ac7 13       		.uleb128 0x13
 3518 0ac8 32000000 		.4byte	.LVL151
 3519 0acc 78090000 		.4byte	0x978
 3520 0ad0 11       		.uleb128 0x11
 3521 0ad1 01       		.uleb128 0x1
 3522 0ad2 51       		.byte	0x51
 3523 0ad3 02       		.uleb128 0x2
 3524 0ad4 75       		.byte	0x75
 3525 0ad5 00       		.sleb128 0
 3526 0ad6 11       		.uleb128 0x11
 3527 0ad7 01       		.uleb128 0x1
 3528 0ad8 52       		.byte	0x52
 3529 0ad9 02       		.uleb128 0x2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 115


 3530 0ada 76       		.byte	0x76
 3531 0adb 00       		.sleb128 0
 3532 0adc 11       		.uleb128 0x11
 3533 0add 01       		.uleb128 0x1
 3534 0ade 53       		.byte	0x53
 3535 0adf 03       		.uleb128 0x3
 3536 0ae0 0A       		.byte	0xa
 3537 0ae1 0019     		.2byte	0x1900
 3538 0ae3 00       		.byte	0
 3539 0ae4 00       		.byte	0
 3540 0ae5 17       		.uleb128 0x17
 3541 0ae6 680B0000 		.4byte	.LASF99
 3542 0aea 01       		.byte	0x1
 3543 0aeb 6309     		.2byte	0x963
 3544 0aed 77000000 		.4byte	0x77
 3545 0af1 00000000 		.4byte	.LFB64
 3546 0af5 1C000000 		.4byte	.LFE64-.LFB64
 3547 0af9 01       		.uleb128 0x1
 3548 0afa 9C       		.byte	0x9c
 3549 0afb 370B0000 		.4byte	0xb37
 3550 0aff 1E       		.uleb128 0x1e
 3551 0b00 783100   		.ascii	"x1\000"
 3552 0b03 01       		.byte	0x1
 3553 0b04 6309     		.2byte	0x963
 3554 0b06 77000000 		.4byte	0x77
 3555 0b0a BB070000 		.4byte	.LLST52
 3556 0b0e 1E       		.uleb128 0x1e
 3557 0b0f 783200   		.ascii	"x2\000"
 3558 0b12 01       		.byte	0x1
 3559 0b13 6309     		.2byte	0x963
 3560 0b15 77000000 		.4byte	0x77
 3561 0b19 E7070000 		.4byte	.LLST53
 3562 0b1d 1F       		.uleb128 0x1f
 3563 0b1e 783300   		.ascii	"x3\000"
 3564 0b21 01       		.byte	0x1
 3565 0b22 6309     		.2byte	0x963
 3566 0b24 77000000 		.4byte	0x77
 3567 0b28 01       		.uleb128 0x1
 3568 0b29 52       		.byte	0x52
 3569 0b2a 20       		.uleb128 0x20
 3570 0b2b 746D7000 		.ascii	"tmp\000"
 3571 0b2f 01       		.byte	0x1
 3572 0b30 6509     		.2byte	0x965
 3573 0b32 77000000 		.4byte	0x77
 3574 0b36 00       		.byte	0
 3575 0b37 17       		.uleb128 0x17
 3576 0b38 3B0B0000 		.4byte	.LASF100
 3577 0b3c 01       		.byte	0x1
 3578 0b3d B607     		.2byte	0x7b6
 3579 0b3f 77000000 		.4byte	0x77
 3580 0b43 00000000 		.4byte	.LFB63
 3581 0b47 A8000000 		.4byte	.LFE63-.LFB63
 3582 0b4b 01       		.uleb128 0x1
 3583 0b4c 9C       		.byte	0x9c
 3584 0b4d 2C0C0000 		.4byte	0xc2c
 3585 0b51 18       		.uleb128 0x18
 3586 0b52 6A030000 		.4byte	.LASF54
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 116


 3587 0b56 01       		.byte	0x1
 3588 0b57 B607     		.2byte	0x7b6
 3589 0b59 83000000 		.4byte	0x83
 3590 0b5d 05080000 		.4byte	.LLST54
 3591 0b61 16       		.uleb128 0x16
 3592 0b62 F3000000 		.4byte	.LASF101
 3593 0b66 01       		.byte	0x1
 3594 0b67 B907     		.2byte	0x7b9
 3595 0b69 6B000000 		.4byte	0x6b
 3596 0b6d 4A080000 		.4byte	.LLST55
 3597 0b71 16       		.uleb128 0x16
 3598 0b72 17080000 		.4byte	.LASF102
 3599 0b76 01       		.byte	0x1
 3600 0b77 BA07     		.2byte	0x7ba
 3601 0b79 6B000000 		.4byte	0x6b
 3602 0b7d 8F080000 		.4byte	.LLST56
 3603 0b81 21       		.uleb128 0x21
 3604 0b82 FA020000 		.4byte	.LASF103
 3605 0b86 01       		.byte	0x1
 3606 0b87 BB07     		.2byte	0x7bb
 3607 0b89 6B000000 		.4byte	0x6b
 3608 0b8d 01       		.byte	0x1
 3609 0b8e 16       		.uleb128 0x16
 3610 0b8f CB000000 		.4byte	.LASF104
 3611 0b93 01       		.byte	0x1
 3612 0b94 C007     		.2byte	0x7c0
 3613 0b96 6B000000 		.4byte	0x6b
 3614 0b9a B8080000 		.4byte	.LLST57
 3615 0b9e 16       		.uleb128 0x16
 3616 0b9f 73090000 		.4byte	.LASF88
 3617 0ba3 01       		.byte	0x1
 3618 0ba4 C507     		.2byte	0x7c5
 3619 0ba6 6B000000 		.4byte	0x6b
 3620 0baa CB080000 		.4byte	.LLST58
 3621 0bae 16       		.uleb128 0x16
 3622 0baf DD0B0000 		.4byte	.LASF95
 3623 0bb3 01       		.byte	0x1
 3624 0bb4 C607     		.2byte	0x7c6
 3625 0bb6 77000000 		.4byte	0x77
 3626 0bba E9080000 		.4byte	.LLST59
 3627 0bbe 16       		.uleb128 0x16
 3628 0bbf E1040000 		.4byte	.LASF86
 3629 0bc3 01       		.byte	0x1
 3630 0bc4 C707     		.2byte	0x7c7
 3631 0bc6 6B000000 		.4byte	0x6b
 3632 0bca 1F090000 		.4byte	.LLST60
 3633 0bce 16       		.uleb128 0x16
 3634 0bcf E5020000 		.4byte	.LASF87
 3635 0bd3 01       		.byte	0x1
 3636 0bd4 C807     		.2byte	0x7c8
 3637 0bd6 6B000000 		.4byte	0x6b
 3638 0bda 75090000 		.4byte	.LLST61
 3639 0bde 10       		.uleb128 0x10
 3640 0bdf 24000000 		.4byte	.LVL168
 3641 0be3 F3080000 		.4byte	0x8f3
 3642 0be7 F80B0000 		.4byte	0xbf8
 3643 0beb 11       		.uleb128 0x11
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 117


 3644 0bec 01       		.uleb128 0x1
 3645 0bed 50       		.byte	0x50
 3646 0bee 02       		.uleb128 0x2
 3647 0bef 74       		.byte	0x74
 3648 0bf0 00       		.sleb128 0
 3649 0bf1 11       		.uleb128 0x11
 3650 0bf2 01       		.uleb128 0x1
 3651 0bf3 51       		.byte	0x51
 3652 0bf4 02       		.uleb128 0x2
 3653 0bf5 76       		.byte	0x76
 3654 0bf6 00       		.sleb128 0
 3655 0bf7 00       		.byte	0
 3656 0bf8 10       		.uleb128 0x10
 3657 0bf9 3A000000 		.4byte	.LVL169
 3658 0bfd 78090000 		.4byte	0x978
 3659 0c01 190C0000 		.4byte	0xc19
 3660 0c05 11       		.uleb128 0x11
 3661 0c06 01       		.uleb128 0x1
 3662 0c07 51       		.byte	0x51
 3663 0c08 02       		.uleb128 0x2
 3664 0c09 74       		.byte	0x74
 3665 0c0a 00       		.sleb128 0
 3666 0c0b 11       		.uleb128 0x11
 3667 0c0c 01       		.uleb128 0x1
 3668 0c0d 52       		.byte	0x52
 3669 0c0e 02       		.uleb128 0x2
 3670 0c0f 76       		.byte	0x76
 3671 0c10 00       		.sleb128 0
 3672 0c11 11       		.uleb128 0x11
 3673 0c12 01       		.uleb128 0x1
 3674 0c13 53       		.byte	0x53
 3675 0c14 03       		.uleb128 0x3
 3676 0c15 0A       		.byte	0xa
 3677 0c16 0019     		.2byte	0x1900
 3678 0c18 00       		.byte	0
 3679 0c19 13       		.uleb128 0x13
 3680 0c1a 7C000000 		.4byte	.LVL182
 3681 0c1e E50A0000 		.4byte	0xae5
 3682 0c22 11       		.uleb128 0x11
 3683 0c23 01       		.uleb128 0x1
 3684 0c24 51       		.byte	0x51
 3685 0c25 04       		.uleb128 0x4
 3686 0c26 7D       		.byte	0x7d
 3687 0c27 0E       		.sleb128 14
 3688 0c28 94       		.byte	0x94
 3689 0c29 02       		.byte	0x2
 3690 0c2a 00       		.byte	0
 3691 0c2b 00       		.byte	0
 3692 0c2c 17       		.uleb128 0x17
 3693 0c2d 1B000000 		.4byte	.LASF105
 3694 0c31 01       		.byte	0x1
 3695 0c32 DB09     		.2byte	0x9db
 3696 0c34 77000000 		.4byte	0x77
 3697 0c38 00000000 		.4byte	.LFB65
 3698 0c3c 0C000000 		.4byte	.LFE65-.LFB65
 3699 0c40 01       		.uleb128 0x1
 3700 0c41 9C       		.byte	0x9c
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 118


 3701 0c42 750C0000 		.4byte	0xc75
 3702 0c46 1E       		.uleb128 0x1e
 3703 0c47 783100   		.ascii	"x1\000"
 3704 0c4a 01       		.byte	0x1
 3705 0c4b DB09     		.2byte	0x9db
 3706 0c4d 77000000 		.4byte	0x77
 3707 0c51 B9090000 		.4byte	.LLST62
 3708 0c55 1E       		.uleb128 0x1e
 3709 0c56 783200   		.ascii	"x2\000"
 3710 0c59 01       		.byte	0x1
 3711 0c5a DB09     		.2byte	0x9db
 3712 0c5c 77000000 		.4byte	0x77
 3713 0c60 DA090000 		.4byte	.LLST63
 3714 0c64 15       		.uleb128 0x15
 3715 0c65 746D7000 		.ascii	"tmp\000"
 3716 0c69 01       		.byte	0x1
 3717 0c6a DD09     		.2byte	0x9dd
 3718 0c6c 83000000 		.4byte	0x83
 3719 0c70 FB090000 		.4byte	.LLST64
 3720 0c74 00       		.byte	0
 3721 0c75 14       		.uleb128 0x14
 3722 0c76 72000000 		.4byte	.LASF106
 3723 0c7a 01       		.byte	0x1
 3724 0c7b 7601     		.2byte	0x176
 3725 0c7d 00000000 		.4byte	.LFB37
 3726 0c81 2C010000 		.4byte	.LFE37-.LFB37
 3727 0c85 01       		.uleb128 0x1
 3728 0c86 9C       		.byte	0x9c
 3729 0c87 2F0D0000 		.4byte	0xd2f
 3730 0c8b 18       		.uleb128 0x18
 3731 0c8c 2D060000 		.4byte	.LASF52
 3732 0c90 01       		.byte	0x1
 3733 0c91 7601     		.2byte	0x176
 3734 0c93 83000000 		.4byte	0x83
 3735 0c97 0E0A0000 		.4byte	.LLST65
 3736 0c9b 16       		.uleb128 0x16
 3737 0c9c F9040000 		.4byte	.LASF107
 3738 0ca0 01       		.byte	0x1
 3739 0ca1 7801     		.2byte	0x178
 3740 0ca3 83000000 		.4byte	0x83
 3741 0ca7 6C0A0000 		.4byte	.LLST66
 3742 0cab 16       		.uleb128 0x16
 3743 0cac DC040000 		.4byte	.LASF108
 3744 0cb0 01       		.byte	0x1
 3745 0cb1 7901     		.2byte	0x179
 3746 0cb3 83000000 		.4byte	0x83
 3747 0cb7 A00A0000 		.4byte	.LLST67
 3748 0cbb 16       		.uleb128 0x16
 3749 0cbc 7E0B0000 		.4byte	.LASF109
 3750 0cc0 01       		.byte	0x1
 3751 0cc1 7A01     		.2byte	0x17a
 3752 0cc3 77000000 		.4byte	0x77
 3753 0cc7 F70A0000 		.4byte	.LLST68
 3754 0ccb 16       		.uleb128 0x16
 3755 0ccc 2E050000 		.4byte	.LASF110
 3756 0cd0 01       		.byte	0x1
 3757 0cd1 7B01     		.2byte	0x17b
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 119


 3758 0cd3 77000000 		.4byte	0x77
 3759 0cd7 150B0000 		.4byte	.LLST69
 3760 0cdb 22       		.uleb128 0x22
 3761 0cdc 6A030000 		.4byte	.LASF54
 3762 0ce0 01       		.byte	0x1
 3763 0ce1 7C01     		.2byte	0x17c
 3764 0ce3 6B000000 		.4byte	0x6b
 3765 0ce7 1B       		.uleb128 0x1b
 3766 0ce8 9F090000 		.4byte	.LASF93
 3767 0cec 01       		.byte	0x1
 3768 0ced 7D01     		.2byte	0x17d
 3769 0cef 6B000000 		.4byte	0x6b
 3770 0cf3 02       		.uleb128 0x2
 3771 0cf4 91       		.byte	0x91
 3772 0cf5 64       		.sleb128 -28
 3773 0cf6 10       		.uleb128 0x10
 3774 0cf7 32000000 		.4byte	.LVL196
 3775 0cfb 2C0C0000 		.4byte	0xc2c
 3776 0cff 0A0D0000 		.4byte	0xd0a
 3777 0d03 11       		.uleb128 0x11
 3778 0d04 01       		.uleb128 0x1
 3779 0d05 50       		.byte	0x50
 3780 0d06 02       		.uleb128 0x2
 3781 0d07 77       		.byte	0x77
 3782 0d08 00       		.sleb128 0
 3783 0d09 00       		.byte	0
 3784 0d0a 10       		.uleb128 0x10
 3785 0d0b 42000000 		.4byte	.LVL199
 3786 0d0f 5E110000 		.4byte	0x115e
 3787 0d13 1E0D0000 		.4byte	0xd1e
 3788 0d17 11       		.uleb128 0x11
 3789 0d18 01       		.uleb128 0x1
 3790 0d19 51       		.byte	0x51
 3791 0d1a 02       		.uleb128 0x2
 3792 0d1b 74       		.byte	0x74
 3793 0d1c 00       		.sleb128 0
 3794 0d1d 00       		.byte	0
 3795 0d1e 13       		.uleb128 0x13
 3796 0d1f 86000000 		.4byte	.LVL204
 3797 0d23 D1020000 		.4byte	0x2d1
 3798 0d27 11       		.uleb128 0x11
 3799 0d28 01       		.uleb128 0x1
 3800 0d29 50       		.byte	0x50
 3801 0d2a 02       		.uleb128 0x2
 3802 0d2b 74       		.byte	0x74
 3803 0d2c 00       		.sleb128 0
 3804 0d2d 00       		.byte	0
 3805 0d2e 00       		.byte	0
 3806 0d2f 14       		.uleb128 0x14
 3807 0d30 6A070000 		.4byte	.LASF111
 3808 0d34 01       		.byte	0x1
 3809 0d35 3602     		.2byte	0x236
 3810 0d37 00000000 		.4byte	.LFB38
 3811 0d3b 10000000 		.4byte	.LFE38-.LFB38
 3812 0d3f 01       		.uleb128 0x1
 3813 0d40 9C       		.byte	0x9c
 3814 0d41 7A0D0000 		.4byte	0xd7a
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 120


 3815 0d45 18       		.uleb128 0x18
 3816 0d46 2D060000 		.4byte	.LASF52
 3817 0d4a 01       		.byte	0x1
 3818 0d4b 3602     		.2byte	0x236
 3819 0d4d 83000000 		.4byte	0x83
 3820 0d51 3E0B0000 		.4byte	.LLST70
 3821 0d55 10       		.uleb128 0x10
 3822 0d56 08000000 		.4byte	.LVL222
 3823 0d5a 69110000 		.4byte	0x1169
 3824 0d5e 690D0000 		.4byte	0xd69
 3825 0d62 11       		.uleb128 0x11
 3826 0d63 01       		.uleb128 0x1
 3827 0d64 50       		.byte	0x50
 3828 0d65 02       		.uleb128 0x2
 3829 0d66 74       		.byte	0x74
 3830 0d67 00       		.sleb128 0
 3831 0d68 00       		.byte	0
 3832 0d69 13       		.uleb128 0x13
 3833 0d6a 0E000000 		.4byte	.LVL223
 3834 0d6e 750C0000 		.4byte	0xc75
 3835 0d72 11       		.uleb128 0x11
 3836 0d73 01       		.uleb128 0x1
 3837 0d74 50       		.byte	0x50
 3838 0d75 02       		.uleb128 0x2
 3839 0d76 74       		.byte	0x74
 3840 0d77 00       		.sleb128 0
 3841 0d78 00       		.byte	0
 3842 0d79 00       		.byte	0
 3843 0d7a 14       		.uleb128 0x14
 3844 0d7b D3000000 		.4byte	.LASF112
 3845 0d7f 01       		.byte	0x1
 3846 0d80 6C02     		.2byte	0x26c
 3847 0d82 00000000 		.4byte	.LFB39
 3848 0d86 24000000 		.4byte	.LFE39-.LFB39
 3849 0d8a 01       		.uleb128 0x1
 3850 0d8b 9C       		.byte	0x9c
 3851 0d8c D30D0000 		.4byte	0xdd3
 3852 0d90 15       		.uleb128 0x15
 3853 0d91 6900     		.ascii	"i\000"
 3854 0d93 01       		.byte	0x1
 3855 0d94 6E02     		.2byte	0x26e
 3856 0d96 83000000 		.4byte	0x83
 3857 0d9a 6A0B0000 		.4byte	.LLST71
 3858 0d9e 16       		.uleb128 0x16
 3859 0d9f 0C010000 		.4byte	.LASF56
 3860 0da3 01       		.byte	0x1
 3861 0da4 6F02     		.2byte	0x26f
 3862 0da6 83000000 		.4byte	0x83
 3863 0daa 890B0000 		.4byte	.LLST72
 3864 0dae 10       		.uleb128 0x10
 3865 0daf 0E000000 		.4byte	.LVL227
 3866 0db3 48110000 		.4byte	0x1148
 3867 0db7 C20D0000 		.4byte	0xdc2
 3868 0dbb 11       		.uleb128 0x11
 3869 0dbc 01       		.uleb128 0x1
 3870 0dbd 51       		.byte	0x51
 3871 0dbe 02       		.uleb128 0x2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 121


 3872 0dbf 74       		.byte	0x74
 3873 0dc0 00       		.sleb128 0
 3874 0dc1 00       		.byte	0
 3875 0dc2 13       		.uleb128 0x13
 3876 0dc3 18000000 		.4byte	.LVL229
 3877 0dc7 2F0D0000 		.4byte	0xd2f
 3878 0dcb 11       		.uleb128 0x11
 3879 0dcc 01       		.uleb128 0x1
 3880 0dcd 50       		.byte	0x50
 3881 0dce 02       		.uleb128 0x2
 3882 0dcf 74       		.byte	0x74
 3883 0dd0 00       		.sleb128 0
 3884 0dd1 00       		.byte	0
 3885 0dd2 00       		.byte	0
 3886 0dd3 14       		.uleb128 0x14
 3887 0dd4 A7020000 		.4byte	.LASF113
 3888 0dd8 01       		.byte	0x1
 3889 0dd9 9902     		.2byte	0x299
 3890 0ddb 00000000 		.4byte	.LFB40
 3891 0ddf 30000000 		.4byte	.LFE40-.LFB40
 3892 0de3 01       		.uleb128 0x1
 3893 0de4 9C       		.byte	0x9c
 3894 0de5 6C0E0000 		.4byte	0xe6c
 3895 0de9 18       		.uleb128 0x18
 3896 0dea 6A030000 		.4byte	.LASF54
 3897 0dee 01       		.byte	0x1
 3898 0def 9902     		.2byte	0x299
 3899 0df1 83000000 		.4byte	0x83
 3900 0df5 9C0B0000 		.4byte	.LLST73
 3901 0df9 16       		.uleb128 0x16
 3902 0dfa 3E050000 		.4byte	.LASF114
 3903 0dfe 01       		.byte	0x1
 3904 0dff 9B02     		.2byte	0x29b
 3905 0e01 83000000 		.4byte	0x83
 3906 0e05 BD0B0000 		.4byte	.LLST74
 3907 0e09 16       		.uleb128 0x16
 3908 0e0a D6080000 		.4byte	.LASF115
 3909 0e0e 01       		.byte	0x1
 3910 0e0f 9C02     		.2byte	0x29c
 3911 0e11 83000000 		.4byte	0x83
 3912 0e15 FB0B0000 		.4byte	.LLST75
 3913 0e19 16       		.uleb128 0x16
 3914 0e1a 83080000 		.4byte	.LASF116
 3915 0e1e 01       		.byte	0x1
 3916 0e1f 9D02     		.2byte	0x29d
 3917 0e21 83000000 		.4byte	0x83
 3918 0e25 270C0000 		.4byte	.LLST76
 3919 0e29 15       		.uleb128 0x15
 3920 0e2a 6900     		.ascii	"i\000"
 3921 0e2c 01       		.byte	0x1
 3922 0e2d 9E02     		.2byte	0x29e
 3923 0e2f 83000000 		.4byte	0x83
 3924 0e33 620C0000 		.4byte	.LLST77
 3925 0e37 16       		.uleb128 0x16
 3926 0e38 0C010000 		.4byte	.LASF56
 3927 0e3c 01       		.byte	0x1
 3928 0e3d 9F02     		.2byte	0x29f
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 122


 3929 0e3f 83000000 		.4byte	0x83
 3930 0e43 750C0000 		.4byte	.LLST78
 3931 0e47 10       		.uleb128 0x10
 3932 0e48 16000000 		.4byte	.LVL237
 3933 0e4c 48110000 		.4byte	0x1148
 3934 0e50 5B0E0000 		.4byte	0xe5b
 3935 0e54 11       		.uleb128 0x11
 3936 0e55 01       		.uleb128 0x1
 3937 0e56 51       		.byte	0x51
 3938 0e57 02       		.uleb128 0x2
 3939 0e58 74       		.byte	0x74
 3940 0e59 00       		.sleb128 0
 3941 0e5a 00       		.byte	0
 3942 0e5b 13       		.uleb128 0x13
 3943 0e5c 20000000 		.4byte	.LVL239
 3944 0e60 2F0D0000 		.4byte	0xd2f
 3945 0e64 11       		.uleb128 0x11
 3946 0e65 01       		.uleb128 0x1
 3947 0e66 50       		.byte	0x50
 3948 0e67 02       		.uleb128 0x2
 3949 0e68 74       		.byte	0x74
 3950 0e69 00       		.sleb128 0
 3951 0e6a 00       		.byte	0
 3952 0e6b 00       		.byte	0
 3953 0e6c 17       		.uleb128 0x17
 3954 0e6d 16070000 		.4byte	.LASF117
 3955 0e71 01       		.byte	0x1
 3956 0e72 C40A     		.2byte	0xac4
 3957 0e74 83000000 		.4byte	0x83
 3958 0e78 00000000 		.4byte	.LFB66
 3959 0e7c 0C000000 		.4byte	.LFE66-.LFB66
 3960 0e80 01       		.uleb128 0x1
 3961 0e81 9C       		.byte	0x9c
 3962 0e82 970E0000 		.4byte	0xe97
 3963 0e86 18       		.uleb128 0x18
 3964 0e87 2D060000 		.4byte	.LASF52
 3965 0e8b 01       		.byte	0x1
 3966 0e8c C40A     		.2byte	0xac4
 3967 0e8e 83000000 		.4byte	0x83
 3968 0e92 880C0000 		.4byte	.LLST79
 3969 0e96 00       		.byte	0
 3970 0e97 17       		.uleb128 0x17
 3971 0e98 D0070000 		.4byte	.LASF118
 3972 0e9c 01       		.byte	0x1
 3973 0e9d DE0A     		.2byte	0xade
 3974 0e9f 6B000000 		.4byte	0x6b
 3975 0ea3 00000000 		.4byte	.LFB67
 3976 0ea7 0C000000 		.4byte	.LFE67-.LFB67
 3977 0eab 01       		.uleb128 0x1
 3978 0eac 9C       		.byte	0x9c
 3979 0ead C20E0000 		.4byte	0xec2
 3980 0eb1 18       		.uleb128 0x18
 3981 0eb2 2D060000 		.4byte	.LASF52
 3982 0eb6 01       		.byte	0x1
 3983 0eb7 DE0A     		.2byte	0xade
 3984 0eb9 83000000 		.4byte	0x83
 3985 0ebd A90C0000 		.4byte	.LLST80
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 123


 3986 0ec1 00       		.byte	0
 3987 0ec2 17       		.uleb128 0x17
 3988 0ec3 860B0000 		.4byte	.LASF119
 3989 0ec7 01       		.byte	0x1
 3990 0ec8 F80A     		.2byte	0xaf8
 3991 0eca 6B000000 		.4byte	0x6b
 3992 0ece 00000000 		.4byte	.LFB68
 3993 0ed2 0C000000 		.4byte	.LFE68-.LFB68
 3994 0ed6 01       		.uleb128 0x1
 3995 0ed7 9C       		.byte	0x9c
 3996 0ed8 ED0E0000 		.4byte	0xeed
 3997 0edc 18       		.uleb128 0x18
 3998 0edd 6A030000 		.4byte	.LASF54
 3999 0ee1 01       		.byte	0x1
 4000 0ee2 F80A     		.2byte	0xaf8
 4001 0ee4 83000000 		.4byte	0x83
 4002 0ee8 CA0C0000 		.4byte	.LLST81
 4003 0eec 00       		.byte	0
 4004 0eed 23       		.uleb128 0x23
 4005 0eee 0D090000 		.4byte	.LASF120
 4006 0ef2 01       		.byte	0x1
 4007 0ef3 120B     		.2byte	0xb12
 4008 0ef5 00000000 		.4byte	.LFB69
 4009 0ef9 10000000 		.4byte	.LFE69-.LFB69
 4010 0efd 01       		.uleb128 0x1
 4011 0efe 9C       		.byte	0x9c
 4012 0eff 23       		.uleb128 0x23
 4013 0f00 F2030000 		.4byte	.LASF121
 4014 0f04 01       		.byte	0x1
 4015 0f05 2B0B     		.2byte	0xb2b
 4016 0f07 00000000 		.4byte	.LFB70
 4017 0f0b 10000000 		.4byte	.LFE70-.LFB70
 4018 0f0f 01       		.uleb128 0x1
 4019 0f10 9C       		.byte	0x9c
 4020 0f11 1C       		.uleb128 0x1c
 4021 0f12 6B000000 		.4byte	0x6b
 4022 0f16 210F0000 		.4byte	0xf21
 4023 0f1a 1D       		.uleb128 0x1d
 4024 0f1b BC000000 		.4byte	0xbc
 4025 0f1f 05       		.byte	0x5
 4026 0f20 00       		.byte	0
 4027 0f21 24       		.uleb128 0x24
 4028 0f22 2F000000 		.4byte	.LASF122
 4029 0f26 01       		.byte	0x1
 4030 0f27 57       		.byte	0x57
 4031 0f28 110F0000 		.4byte	0xf11
 4032 0f2c 05       		.uleb128 0x5
 4033 0f2d 03       		.byte	0x3
 4034 0f2e 3C000000 		.4byte	CapSense_debounceCounter
 4035 0f32 1C       		.uleb128 0x1c
 4036 0f33 420F0000 		.4byte	0xf42
 4037 0f37 420F0000 		.4byte	0xf42
 4038 0f3b 1D       		.uleb128 0x1d
 4039 0f3c BC000000 		.4byte	0xbc
 4040 0f40 00       		.byte	0
 4041 0f41 00       		.byte	0
 4042 0f42 08       		.uleb128 0x8
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 124


 4043 0f43 77000000 		.4byte	0x77
 4044 0f47 25       		.uleb128 0x25
 4045 0f48 A00A0000 		.4byte	.LASF123
 4046 0f4c 01       		.byte	0x1
 4047 0f4d 6D       		.byte	0x6d
 4048 0f4e 550F0000 		.4byte	0xf55
 4049 0f52 02       		.byte	0x2
 4050 0f53 00       		.byte	0
 4051 0f54 19       		.byte	0x19
 4052 0f55 08       		.uleb128 0x8
 4053 0f56 320F0000 		.4byte	0xf32
 4054 0f5a 1C       		.uleb128 0x1c
 4055 0f5b 6B000000 		.4byte	0x6b
 4056 0f5f 6A0F0000 		.4byte	0xf6a
 4057 0f63 1D       		.uleb128 0x1d
 4058 0f64 BC000000 		.4byte	0xbc
 4059 0f68 00       		.byte	0
 4060 0f69 00       		.byte	0
 4061 0f6a 25       		.uleb128 0x25
 4062 0f6b 71030000 		.4byte	.LASF124
 4063 0f6f 01       		.byte	0x1
 4064 0f70 71       		.byte	0x71
 4065 0f71 770F0000 		.4byte	0xf77
 4066 0f75 01       		.byte	0x1
 4067 0f76 01       		.byte	0x1
 4068 0f77 08       		.uleb128 0x8
 4069 0f78 5A0F0000 		.4byte	0xf5a
 4070 0f7c 1C       		.uleb128 0x1c
 4071 0f7d 6B000000 		.4byte	0x6b
 4072 0f81 8C0F0000 		.4byte	0xf8c
 4073 0f85 1D       		.uleb128 0x1d
 4074 0f86 BC000000 		.4byte	0xbc
 4075 0f8a 03       		.byte	0x3
 4076 0f8b 00       		.byte	0
 4077 0f8c 24       		.uleb128 0x24
 4078 0f8d A4010000 		.4byte	.LASF125
 4079 0f91 01       		.byte	0x1
 4080 0f92 75       		.byte	0x75
 4081 0f93 7C0F0000 		.4byte	0xf7c
 4082 0f97 05       		.uleb128 0x5
 4083 0f98 03       		.byte	0x3
 4084 0f99 20000000 		.4byte	CapSense_posFiltersData
 4085 0f9d 1C       		.uleb128 0x1c
 4086 0f9e 77000000 		.4byte	0x77
 4087 0fa2 AD0F0000 		.4byte	0xfad
 4088 0fa6 1D       		.uleb128 0x1d
 4089 0fa7 BC000000 		.4byte	0xbc
 4090 0fab 0C       		.byte	0xc
 4091 0fac 00       		.byte	0
 4092 0fad 26       		.uleb128 0x26
 4093 0fae BD070000 		.4byte	.LASF126
 4094 0fb2 01       		.byte	0x1
 4095 0fb3 2C       		.byte	0x2c
 4096 0fb4 9D0F0000 		.4byte	0xf9d
 4097 0fb8 1C       		.uleb128 0x1c
 4098 0fb9 6B000000 		.4byte	0x6b
 4099 0fbd C80F0000 		.4byte	0xfc8
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 125


 4100 0fc1 1D       		.uleb128 0x1d
 4101 0fc2 BC000000 		.4byte	0xbc
 4102 0fc6 01       		.byte	0x1
 4103 0fc7 00       		.byte	0
 4104 0fc8 26       		.uleb128 0x26
 4105 0fc9 50030000 		.4byte	.LASF127
 4106 0fcd 01       		.byte	0x1
 4107 0fce 2D       		.byte	0x2d
 4108 0fcf B80F0000 		.4byte	0xfb8
 4109 0fd3 1C       		.uleb128 0x1c
 4110 0fd4 F3010000 		.4byte	0x1f3
 4111 0fd8 E30F0000 		.4byte	0xfe3
 4112 0fdc 1D       		.uleb128 0x1d
 4113 0fdd BC000000 		.4byte	0xbc
 4114 0fe1 0C       		.byte	0xc
 4115 0fe2 00       		.byte	0
 4116 0fe3 26       		.uleb128 0x26
 4117 0fe4 C0030000 		.4byte	.LASF128
 4118 0fe8 01       		.byte	0x1
 4119 0fe9 2E       		.byte	0x2e
 4120 0fea EE0F0000 		.4byte	0xfee
 4121 0fee 08       		.uleb128 0x8
 4122 0fef D30F0000 		.4byte	0xfd3
 4123 0ff3 27       		.uleb128 0x27
 4124 0ff4 5B090000 		.4byte	.LASF129
 4125 0ff8 01       		.byte	0x1
 4126 0ff9 34       		.byte	0x34
 4127 0ffa 9D0F0000 		.4byte	0xf9d
 4128 0ffe 05       		.uleb128 0x5
 4129 0fff 03       		.byte	0x3
 4130 1000 00000000 		.4byte	CapSense_sensorBaseline
 4131 1004 1C       		.uleb128 0x1c
 4132 1005 6B000000 		.4byte	0x6b
 4133 1009 14100000 		.4byte	0x1014
 4134 100d 1D       		.uleb128 0x1d
 4135 100e BC000000 		.4byte	0xbc
 4136 1012 0C       		.byte	0xc
 4137 1013 00       		.byte	0
 4138 1014 27       		.uleb128 0x27
 4139 1015 00000000 		.4byte	.LASF130
 4140 1019 01       		.byte	0x1
 4141 101a 35       		.byte	0x35
 4142 101b 04100000 		.4byte	0x1004
 4143 101f 05       		.uleb128 0x5
 4144 1020 03       		.byte	0x3
 4145 1021 00000000 		.4byte	CapSense_sensorBaselineLow
 4146 1025 27       		.uleb128 0x27
 4147 1026 60020000 		.4byte	.LASF131
 4148 102a 01       		.byte	0x1
 4149 102b 36       		.byte	0x36
 4150 102c 04100000 		.4byte	0x1004
 4151 1030 05       		.uleb128 0x5
 4152 1031 03       		.byte	0x3
 4153 1032 00000000 		.4byte	CapSense_sensorSignal
 4154 1036 27       		.uleb128 0x27
 4155 1037 E60B0000 		.4byte	.LASF132
 4156 103b 01       		.byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 126


 4157 103c 37       		.byte	0x37
 4158 103d B80F0000 		.4byte	0xfb8
 4159 1041 05       		.uleb128 0x5
 4160 1042 03       		.byte	0x3
 4161 1043 00000000 		.4byte	CapSense_sensorOnMask
 4162 1047 27       		.uleb128 0x27
 4163 1048 55000000 		.4byte	.LASF133
 4164 104c 01       		.byte	0x1
 4165 104d 39       		.byte	0x39
 4166 104e 04100000 		.4byte	0x1004
 4167 1052 05       		.uleb128 0x5
 4168 1053 03       		.byte	0x3
 4169 1054 00000000 		.4byte	CapSense_lowBaselineResetCnt
 4170 1058 27       		.uleb128 0x27
 4171 1059 2B090000 		.4byte	.LASF134
 4172 105d 01       		.byte	0x1
 4173 105e 3A       		.byte	0x3a
 4174 105f 04100000 		.4byte	0x1004
 4175 1063 05       		.uleb128 0x5
 4176 1064 03       		.byte	0x3
 4177 1065 00000000 		.4byte	CapSense_lowBaselineReset
 4178 1069 27       		.uleb128 0x27
 4179 106a 89030000 		.4byte	.LASF135
 4180 106e 01       		.byte	0x1
 4181 106f 49       		.byte	0x49
 4182 1070 110F0000 		.4byte	0xf11
 4183 1074 05       		.uleb128 0x5
 4184 1075 03       		.byte	0x3
 4185 1076 00000000 		.4byte	CapSense_fingerThreshold
 4186 107a 27       		.uleb128 0x27
 4187 107b 000A0000 		.4byte	.LASF136
 4188 107f 01       		.byte	0x1
 4189 1080 4D       		.byte	0x4d
 4190 1081 110F0000 		.4byte	0xf11
 4191 1085 05       		.uleb128 0x5
 4192 1086 03       		.byte	0x3
 4193 1087 00000000 		.4byte	CapSense_noiseThreshold
 4194 108b 27       		.uleb128 0x27
 4195 108c DD050000 		.4byte	.LASF137
 4196 1090 01       		.byte	0x1
 4197 1091 4F       		.byte	0x4f
 4198 1092 110F0000 		.4byte	0xf11
 4199 1096 05       		.uleb128 0x5
 4200 1097 03       		.byte	0x3
 4201 1098 00000000 		.4byte	CapSense_negativeNoiseThreshold
 4202 109c 27       		.uleb128 0x27
 4203 109d C5020000 		.4byte	.LASF138
 4204 10a1 01       		.byte	0x1
 4205 10a2 51       		.byte	0x51
 4206 10a3 110F0000 		.4byte	0xf11
 4207 10a7 05       		.uleb128 0x5
 4208 10a8 03       		.byte	0x3
 4209 10a9 00000000 		.4byte	CapSense_hysteresis
 4210 10ad 27       		.uleb128 0x27
 4211 10ae CC010000 		.4byte	.LASF139
 4212 10b2 01       		.byte	0x1
 4213 10b3 53       		.byte	0x53
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 127


 4214 10b4 110F0000 		.4byte	0xf11
 4215 10b8 05       		.uleb128 0x5
 4216 10b9 03       		.byte	0x3
 4217 10ba 00000000 		.4byte	CapSense_debounce
 4218 10be 1C       		.uleb128 0x1c
 4219 10bf F3010000 		.4byte	0x1f3
 4220 10c3 CE100000 		.4byte	0x10ce
 4221 10c7 1D       		.uleb128 0x1d
 4222 10c8 BC000000 		.4byte	0xbc
 4223 10cc 05       		.byte	0x5
 4224 10cd 00       		.byte	0
 4225 10ce 27       		.uleb128 0x27
 4226 10cf 76020000 		.4byte	.LASF140
 4227 10d3 01       		.byte	0x1
 4228 10d4 5B       		.byte	0x5b
 4229 10d5 DF100000 		.4byte	0x10df
 4230 10d9 05       		.uleb128 0x5
 4231 10da 03       		.byte	0x3
 4232 10db 00000000 		.4byte	CapSense_rawDataIndex
 4233 10df 08       		.uleb128 0x8
 4234 10e0 BE100000 		.4byte	0x10be
 4235 10e4 27       		.uleb128 0x27
 4236 10e5 C4050000 		.4byte	.LASF141
 4237 10e9 01       		.byte	0x1
 4238 10ea 64       		.byte	0x64
 4239 10eb F5100000 		.4byte	0x10f5
 4240 10ef 05       		.uleb128 0x5
 4241 10f0 03       		.byte	0x3
 4242 10f1 00000000 		.4byte	CapSense_numberOfSensors
 4243 10f5 08       		.uleb128 0x8
 4244 10f6 BE100000 		.4byte	0x10be
 4245 10fa 27       		.uleb128 0x27
 4246 10fb C50B0000 		.4byte	.LASF142
 4247 10ff 01       		.byte	0x1
 4248 1100 27       		.byte	0x27
 4249 1101 9D0F0000 		.4byte	0xf9d
 4250 1105 05       		.uleb128 0x5
 4251 1106 03       		.byte	0x3
 4252 1107 00000000 		.4byte	CapSense_rawFilterData1
 4253 110b 26       		.uleb128 0x26
 4254 110c FC000000 		.4byte	.LASF143
 4255 1110 01       		.byte	0x1
 4256 1111 41       		.byte	0x41
 4257 1112 C6020000 		.4byte	0x2c6
 4258 1116 27       		.uleb128 0x27
 4259 1117 F80A0000 		.4byte	.LASF144
 4260 111b 01       		.byte	0x1
 4261 111c 45       		.byte	0x45
 4262 111d 6B000000 		.4byte	0x6b
 4263 1121 05       		.uleb128 0x5
 4264 1122 03       		.byte	0x3
 4265 1123 00000000 		.4byte	CapSense_enableRawFilters
 4266 1127 28       		.uleb128 0x28
 4267 1128 1A050000 		.4byte	.LASF145
 4268 112c 1A050000 		.4byte	.LASF145
 4269 1130 04       		.byte	0x4
 4270 1131 A8       		.byte	0xa8
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 128


 4271 1132 28       		.uleb128 0x28
 4272 1133 00020000 		.4byte	.LASF146
 4273 1137 00020000 		.4byte	.LASF146
 4274 113b 04       		.byte	0x4
 4275 113c A7       		.byte	0xa7
 4276 113d 28       		.uleb128 0x28
 4277 113e EC060000 		.4byte	.LASF147
 4278 1142 EC060000 		.4byte	.LASF147
 4279 1146 04       		.byte	0x4
 4280 1147 AA       		.byte	0xaa
 4281 1148 28       		.uleb128 0x28
 4282 1149 DD0A0000 		.4byte	.LASF148
 4283 114d DD0A0000 		.4byte	.LASF148
 4284 1151 03       		.byte	0x3
 4285 1152 6A       		.byte	0x6a
 4286 1153 28       		.uleb128 0x28
 4287 1154 8B0A0000 		.4byte	.LASF149
 4288 1158 8B0A0000 		.4byte	.LASF149
 4289 115c 03       		.byte	0x3
 4290 115d 6B       		.byte	0x6b
 4291 115e 28       		.uleb128 0x28
 4292 115f 0F060000 		.4byte	.LASF150
 4293 1163 0F060000 		.4byte	.LASF150
 4294 1167 03       		.byte	0x3
 4295 1168 81       		.byte	0x81
 4296 1169 28       		.uleb128 0x28
 4297 116a C0060000 		.4byte	.LASF151
 4298 116e C0060000 		.4byte	.LASF151
 4299 1172 01       		.byte	0x1
 4300 1173 17       		.byte	0x17
 4301 1174 00       		.byte	0
 4302              		.section	.debug_abbrev,"",%progbits
 4303              	.Ldebug_abbrev0:
 4304 0000 01       		.uleb128 0x1
 4305 0001 11       		.uleb128 0x11
 4306 0002 01       		.byte	0x1
 4307 0003 25       		.uleb128 0x25
 4308 0004 0E       		.uleb128 0xe
 4309 0005 13       		.uleb128 0x13
 4310 0006 0B       		.uleb128 0xb
 4311 0007 03       		.uleb128 0x3
 4312 0008 0E       		.uleb128 0xe
 4313 0009 1B       		.uleb128 0x1b
 4314 000a 0E       		.uleb128 0xe
 4315 000b 55       		.uleb128 0x55
 4316 000c 17       		.uleb128 0x17
 4317 000d 11       		.uleb128 0x11
 4318 000e 01       		.uleb128 0x1
 4319 000f 10       		.uleb128 0x10
 4320 0010 17       		.uleb128 0x17
 4321 0011 00       		.byte	0
 4322 0012 00       		.byte	0
 4323 0013 02       		.uleb128 0x2
 4324 0014 24       		.uleb128 0x24
 4325 0015 00       		.byte	0
 4326 0016 0B       		.uleb128 0xb
 4327 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 129


 4328 0018 3E       		.uleb128 0x3e
 4329 0019 0B       		.uleb128 0xb
 4330 001a 03       		.uleb128 0x3
 4331 001b 0E       		.uleb128 0xe
 4332 001c 00       		.byte	0
 4333 001d 00       		.byte	0
 4334 001e 03       		.uleb128 0x3
 4335 001f 24       		.uleb128 0x24
 4336 0020 00       		.byte	0
 4337 0021 0B       		.uleb128 0xb
 4338 0022 0B       		.uleb128 0xb
 4339 0023 3E       		.uleb128 0x3e
 4340 0024 0B       		.uleb128 0xb
 4341 0025 03       		.uleb128 0x3
 4342 0026 08       		.uleb128 0x8
 4343 0027 00       		.byte	0
 4344 0028 00       		.byte	0
 4345 0029 04       		.uleb128 0x4
 4346 002a 16       		.uleb128 0x16
 4347 002b 00       		.byte	0
 4348 002c 03       		.uleb128 0x3
 4349 002d 0E       		.uleb128 0xe
 4350 002e 3A       		.uleb128 0x3a
 4351 002f 0B       		.uleb128 0xb
 4352 0030 3B       		.uleb128 0x3b
 4353 0031 05       		.uleb128 0x5
 4354 0032 49       		.uleb128 0x49
 4355 0033 13       		.uleb128 0x13
 4356 0034 00       		.byte	0
 4357 0035 00       		.byte	0
 4358 0036 05       		.uleb128 0x5
 4359 0037 13       		.uleb128 0x13
 4360 0038 01       		.byte	0x1
 4361 0039 0B       		.uleb128 0xb
 4362 003a 0B       		.uleb128 0xb
 4363 003b 3A       		.uleb128 0x3a
 4364 003c 0B       		.uleb128 0xb
 4365 003d 3B       		.uleb128 0x3b
 4366 003e 0B       		.uleb128 0xb
 4367 003f 01       		.uleb128 0x1
 4368 0040 13       		.uleb128 0x13
 4369 0041 00       		.byte	0
 4370 0042 00       		.byte	0
 4371 0043 06       		.uleb128 0x6
 4372 0044 0D       		.uleb128 0xd
 4373 0045 00       		.byte	0
 4374 0046 03       		.uleb128 0x3
 4375 0047 0E       		.uleb128 0xe
 4376 0048 3A       		.uleb128 0x3a
 4377 0049 0B       		.uleb128 0xb
 4378 004a 3B       		.uleb128 0x3b
 4379 004b 0B       		.uleb128 0xb
 4380 004c 49       		.uleb128 0x49
 4381 004d 13       		.uleb128 0x13
 4382 004e 38       		.uleb128 0x38
 4383 004f 0B       		.uleb128 0xb
 4384 0050 00       		.byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 130


 4385 0051 00       		.byte	0
 4386 0052 07       		.uleb128 0x7
 4387 0053 0F       		.uleb128 0xf
 4388 0054 00       		.byte	0
 4389 0055 0B       		.uleb128 0xb
 4390 0056 0B       		.uleb128 0xb
 4391 0057 49       		.uleb128 0x49
 4392 0058 13       		.uleb128 0x13
 4393 0059 00       		.byte	0
 4394 005a 00       		.byte	0
 4395 005b 08       		.uleb128 0x8
 4396 005c 26       		.uleb128 0x26
 4397 005d 00       		.byte	0
 4398 005e 49       		.uleb128 0x49
 4399 005f 13       		.uleb128 0x13
 4400 0060 00       		.byte	0
 4401 0061 00       		.byte	0
 4402 0062 09       		.uleb128 0x9
 4403 0063 15       		.uleb128 0x15
 4404 0064 01       		.byte	0x1
 4405 0065 27       		.uleb128 0x27
 4406 0066 19       		.uleb128 0x19
 4407 0067 49       		.uleb128 0x49
 4408 0068 13       		.uleb128 0x13
 4409 0069 01       		.uleb128 0x1
 4410 006a 13       		.uleb128 0x13
 4411 006b 00       		.byte	0
 4412 006c 00       		.byte	0
 4413 006d 0A       		.uleb128 0xa
 4414 006e 05       		.uleb128 0x5
 4415 006f 00       		.byte	0
 4416 0070 49       		.uleb128 0x49
 4417 0071 13       		.uleb128 0x13
 4418 0072 00       		.byte	0
 4419 0073 00       		.byte	0
 4420 0074 0B       		.uleb128 0xb
 4421 0075 15       		.uleb128 0x15
 4422 0076 01       		.byte	0x1
 4423 0077 27       		.uleb128 0x27
 4424 0078 19       		.uleb128 0x19
 4425 0079 01       		.uleb128 0x1
 4426 007a 13       		.uleb128 0x13
 4427 007b 00       		.byte	0
 4428 007c 00       		.byte	0
 4429 007d 0C       		.uleb128 0xc
 4430 007e 16       		.uleb128 0x16
 4431 007f 00       		.byte	0
 4432 0080 03       		.uleb128 0x3
 4433 0081 0E       		.uleb128 0xe
 4434 0082 3A       		.uleb128 0x3a
 4435 0083 0B       		.uleb128 0xb
 4436 0084 3B       		.uleb128 0x3b
 4437 0085 0B       		.uleb128 0xb
 4438 0086 49       		.uleb128 0x49
 4439 0087 13       		.uleb128 0x13
 4440 0088 00       		.byte	0
 4441 0089 00       		.byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 131


 4442 008a 0D       		.uleb128 0xd
 4443 008b 2E       		.uleb128 0x2e
 4444 008c 01       		.byte	0x1
 4445 008d 3F       		.uleb128 0x3f
 4446 008e 19       		.uleb128 0x19
 4447 008f 03       		.uleb128 0x3
 4448 0090 0E       		.uleb128 0xe
 4449 0091 3A       		.uleb128 0x3a
 4450 0092 0B       		.uleb128 0xb
 4451 0093 3B       		.uleb128 0x3b
 4452 0094 0B       		.uleb128 0xb
 4453 0095 27       		.uleb128 0x27
 4454 0096 19       		.uleb128 0x19
 4455 0097 11       		.uleb128 0x11
 4456 0098 01       		.uleb128 0x1
 4457 0099 12       		.uleb128 0x12
 4458 009a 06       		.uleb128 0x6
 4459 009b 40       		.uleb128 0x40
 4460 009c 18       		.uleb128 0x18
 4461 009d 9742     		.uleb128 0x2117
 4462 009f 19       		.uleb128 0x19
 4463 00a0 01       		.uleb128 0x1
 4464 00a1 13       		.uleb128 0x13
 4465 00a2 00       		.byte	0
 4466 00a3 00       		.byte	0
 4467 00a4 0E       		.uleb128 0xe
 4468 00a5 05       		.uleb128 0x5
 4469 00a6 00       		.byte	0
 4470 00a7 03       		.uleb128 0x3
 4471 00a8 0E       		.uleb128 0xe
 4472 00a9 3A       		.uleb128 0x3a
 4473 00aa 0B       		.uleb128 0xb
 4474 00ab 3B       		.uleb128 0x3b
 4475 00ac 0B       		.uleb128 0xb
 4476 00ad 49       		.uleb128 0x49
 4477 00ae 13       		.uleb128 0x13
 4478 00af 02       		.uleb128 0x2
 4479 00b0 17       		.uleb128 0x17
 4480 00b1 00       		.byte	0
 4481 00b2 00       		.byte	0
 4482 00b3 0F       		.uleb128 0xf
 4483 00b4 34       		.uleb128 0x34
 4484 00b5 00       		.byte	0
 4485 00b6 03       		.uleb128 0x3
 4486 00b7 0E       		.uleb128 0xe
 4487 00b8 3A       		.uleb128 0x3a
 4488 00b9 0B       		.uleb128 0xb
 4489 00ba 3B       		.uleb128 0x3b
 4490 00bb 0B       		.uleb128 0xb
 4491 00bc 49       		.uleb128 0x49
 4492 00bd 13       		.uleb128 0x13
 4493 00be 02       		.uleb128 0x2
 4494 00bf 17       		.uleb128 0x17
 4495 00c0 00       		.byte	0
 4496 00c1 00       		.byte	0
 4497 00c2 10       		.uleb128 0x10
 4498 00c3 898201   		.uleb128 0x4109
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 132


 4499 00c6 01       		.byte	0x1
 4500 00c7 11       		.uleb128 0x11
 4501 00c8 01       		.uleb128 0x1
 4502 00c9 31       		.uleb128 0x31
 4503 00ca 13       		.uleb128 0x13
 4504 00cb 01       		.uleb128 0x1
 4505 00cc 13       		.uleb128 0x13
 4506 00cd 00       		.byte	0
 4507 00ce 00       		.byte	0
 4508 00cf 11       		.uleb128 0x11
 4509 00d0 8A8201   		.uleb128 0x410a
 4510 00d3 00       		.byte	0
 4511 00d4 02       		.uleb128 0x2
 4512 00d5 18       		.uleb128 0x18
 4513 00d6 9142     		.uleb128 0x2111
 4514 00d8 18       		.uleb128 0x18
 4515 00d9 00       		.byte	0
 4516 00da 00       		.byte	0
 4517 00db 12       		.uleb128 0x12
 4518 00dc 898201   		.uleb128 0x4109
 4519 00df 00       		.byte	0
 4520 00e0 11       		.uleb128 0x11
 4521 00e1 01       		.uleb128 0x1
 4522 00e2 31       		.uleb128 0x31
 4523 00e3 13       		.uleb128 0x13
 4524 00e4 00       		.byte	0
 4525 00e5 00       		.byte	0
 4526 00e6 13       		.uleb128 0x13
 4527 00e7 898201   		.uleb128 0x4109
 4528 00ea 01       		.byte	0x1
 4529 00eb 11       		.uleb128 0x11
 4530 00ec 01       		.uleb128 0x1
 4531 00ed 31       		.uleb128 0x31
 4532 00ee 13       		.uleb128 0x13
 4533 00ef 00       		.byte	0
 4534 00f0 00       		.byte	0
 4535 00f1 14       		.uleb128 0x14
 4536 00f2 2E       		.uleb128 0x2e
 4537 00f3 01       		.byte	0x1
 4538 00f4 3F       		.uleb128 0x3f
 4539 00f5 19       		.uleb128 0x19
 4540 00f6 03       		.uleb128 0x3
 4541 00f7 0E       		.uleb128 0xe
 4542 00f8 3A       		.uleb128 0x3a
 4543 00f9 0B       		.uleb128 0xb
 4544 00fa 3B       		.uleb128 0x3b
 4545 00fb 05       		.uleb128 0x5
 4546 00fc 27       		.uleb128 0x27
 4547 00fd 19       		.uleb128 0x19
 4548 00fe 11       		.uleb128 0x11
 4549 00ff 01       		.uleb128 0x1
 4550 0100 12       		.uleb128 0x12
 4551 0101 06       		.uleb128 0x6
 4552 0102 40       		.uleb128 0x40
 4553 0103 18       		.uleb128 0x18
 4554 0104 9742     		.uleb128 0x2117
 4555 0106 19       		.uleb128 0x19
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 133


 4556 0107 01       		.uleb128 0x1
 4557 0108 13       		.uleb128 0x13
 4558 0109 00       		.byte	0
 4559 010a 00       		.byte	0
 4560 010b 15       		.uleb128 0x15
 4561 010c 34       		.uleb128 0x34
 4562 010d 00       		.byte	0
 4563 010e 03       		.uleb128 0x3
 4564 010f 08       		.uleb128 0x8
 4565 0110 3A       		.uleb128 0x3a
 4566 0111 0B       		.uleb128 0xb
 4567 0112 3B       		.uleb128 0x3b
 4568 0113 05       		.uleb128 0x5
 4569 0114 49       		.uleb128 0x49
 4570 0115 13       		.uleb128 0x13
 4571 0116 02       		.uleb128 0x2
 4572 0117 17       		.uleb128 0x17
 4573 0118 00       		.byte	0
 4574 0119 00       		.byte	0
 4575 011a 16       		.uleb128 0x16
 4576 011b 34       		.uleb128 0x34
 4577 011c 00       		.byte	0
 4578 011d 03       		.uleb128 0x3
 4579 011e 0E       		.uleb128 0xe
 4580 011f 3A       		.uleb128 0x3a
 4581 0120 0B       		.uleb128 0xb
 4582 0121 3B       		.uleb128 0x3b
 4583 0122 05       		.uleb128 0x5
 4584 0123 49       		.uleb128 0x49
 4585 0124 13       		.uleb128 0x13
 4586 0125 02       		.uleb128 0x2
 4587 0126 17       		.uleb128 0x17
 4588 0127 00       		.byte	0
 4589 0128 00       		.byte	0
 4590 0129 17       		.uleb128 0x17
 4591 012a 2E       		.uleb128 0x2e
 4592 012b 01       		.byte	0x1
 4593 012c 3F       		.uleb128 0x3f
 4594 012d 19       		.uleb128 0x19
 4595 012e 03       		.uleb128 0x3
 4596 012f 0E       		.uleb128 0xe
 4597 0130 3A       		.uleb128 0x3a
 4598 0131 0B       		.uleb128 0xb
 4599 0132 3B       		.uleb128 0x3b
 4600 0133 05       		.uleb128 0x5
 4601 0134 27       		.uleb128 0x27
 4602 0135 19       		.uleb128 0x19
 4603 0136 49       		.uleb128 0x49
 4604 0137 13       		.uleb128 0x13
 4605 0138 11       		.uleb128 0x11
 4606 0139 01       		.uleb128 0x1
 4607 013a 12       		.uleb128 0x12
 4608 013b 06       		.uleb128 0x6
 4609 013c 40       		.uleb128 0x40
 4610 013d 18       		.uleb128 0x18
 4611 013e 9742     		.uleb128 0x2117
 4612 0140 19       		.uleb128 0x19
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 134


 4613 0141 01       		.uleb128 0x1
 4614 0142 13       		.uleb128 0x13
 4615 0143 00       		.byte	0
 4616 0144 00       		.byte	0
 4617 0145 18       		.uleb128 0x18
 4618 0146 05       		.uleb128 0x5
 4619 0147 00       		.byte	0
 4620 0148 03       		.uleb128 0x3
 4621 0149 0E       		.uleb128 0xe
 4622 014a 3A       		.uleb128 0x3a
 4623 014b 0B       		.uleb128 0xb
 4624 014c 3B       		.uleb128 0x3b
 4625 014d 05       		.uleb128 0x5
 4626 014e 49       		.uleb128 0x49
 4627 014f 13       		.uleb128 0x13
 4628 0150 02       		.uleb128 0x2
 4629 0151 17       		.uleb128 0x17
 4630 0152 00       		.byte	0
 4631 0153 00       		.byte	0
 4632 0154 19       		.uleb128 0x19
 4633 0155 05       		.uleb128 0x5
 4634 0156 00       		.byte	0
 4635 0157 03       		.uleb128 0x3
 4636 0158 0E       		.uleb128 0xe
 4637 0159 3A       		.uleb128 0x3a
 4638 015a 0B       		.uleb128 0xb
 4639 015b 3B       		.uleb128 0x3b
 4640 015c 05       		.uleb128 0x5
 4641 015d 49       		.uleb128 0x49
 4642 015e 13       		.uleb128 0x13
 4643 015f 02       		.uleb128 0x2
 4644 0160 18       		.uleb128 0x18
 4645 0161 00       		.byte	0
 4646 0162 00       		.byte	0
 4647 0163 1A       		.uleb128 0x1a
 4648 0164 2E       		.uleb128 0x2e
 4649 0165 01       		.byte	0x1
 4650 0166 3F       		.uleb128 0x3f
 4651 0167 19       		.uleb128 0x19
 4652 0168 03       		.uleb128 0x3
 4653 0169 0E       		.uleb128 0xe
 4654 016a 3A       		.uleb128 0x3a
 4655 016b 0B       		.uleb128 0xb
 4656 016c 3B       		.uleb128 0x3b
 4657 016d 05       		.uleb128 0x5
 4658 016e 27       		.uleb128 0x27
 4659 016f 19       		.uleb128 0x19
 4660 0170 49       		.uleb128 0x49
 4661 0171 13       		.uleb128 0x13
 4662 0172 11       		.uleb128 0x11
 4663 0173 01       		.uleb128 0x1
 4664 0174 12       		.uleb128 0x12
 4665 0175 06       		.uleb128 0x6
 4666 0176 40       		.uleb128 0x40
 4667 0177 18       		.uleb128 0x18
 4668 0178 9642     		.uleb128 0x2116
 4669 017a 19       		.uleb128 0x19
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 135


 4670 017b 01       		.uleb128 0x1
 4671 017c 13       		.uleb128 0x13
 4672 017d 00       		.byte	0
 4673 017e 00       		.byte	0
 4674 017f 1B       		.uleb128 0x1b
 4675 0180 34       		.uleb128 0x34
 4676 0181 00       		.byte	0
 4677 0182 03       		.uleb128 0x3
 4678 0183 0E       		.uleb128 0xe
 4679 0184 3A       		.uleb128 0x3a
 4680 0185 0B       		.uleb128 0xb
 4681 0186 3B       		.uleb128 0x3b
 4682 0187 05       		.uleb128 0x5
 4683 0188 49       		.uleb128 0x49
 4684 0189 13       		.uleb128 0x13
 4685 018a 02       		.uleb128 0x2
 4686 018b 18       		.uleb128 0x18
 4687 018c 00       		.byte	0
 4688 018d 00       		.byte	0
 4689 018e 1C       		.uleb128 0x1c
 4690 018f 01       		.uleb128 0x1
 4691 0190 01       		.byte	0x1
 4692 0191 49       		.uleb128 0x49
 4693 0192 13       		.uleb128 0x13
 4694 0193 01       		.uleb128 0x1
 4695 0194 13       		.uleb128 0x13
 4696 0195 00       		.byte	0
 4697 0196 00       		.byte	0
 4698 0197 1D       		.uleb128 0x1d
 4699 0198 21       		.uleb128 0x21
 4700 0199 00       		.byte	0
 4701 019a 49       		.uleb128 0x49
 4702 019b 13       		.uleb128 0x13
 4703 019c 2F       		.uleb128 0x2f
 4704 019d 0B       		.uleb128 0xb
 4705 019e 00       		.byte	0
 4706 019f 00       		.byte	0
 4707 01a0 1E       		.uleb128 0x1e
 4708 01a1 05       		.uleb128 0x5
 4709 01a2 00       		.byte	0
 4710 01a3 03       		.uleb128 0x3
 4711 01a4 08       		.uleb128 0x8
 4712 01a5 3A       		.uleb128 0x3a
 4713 01a6 0B       		.uleb128 0xb
 4714 01a7 3B       		.uleb128 0x3b
 4715 01a8 05       		.uleb128 0x5
 4716 01a9 49       		.uleb128 0x49
 4717 01aa 13       		.uleb128 0x13
 4718 01ab 02       		.uleb128 0x2
 4719 01ac 17       		.uleb128 0x17
 4720 01ad 00       		.byte	0
 4721 01ae 00       		.byte	0
 4722 01af 1F       		.uleb128 0x1f
 4723 01b0 05       		.uleb128 0x5
 4724 01b1 00       		.byte	0
 4725 01b2 03       		.uleb128 0x3
 4726 01b3 08       		.uleb128 0x8
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 136


 4727 01b4 3A       		.uleb128 0x3a
 4728 01b5 0B       		.uleb128 0xb
 4729 01b6 3B       		.uleb128 0x3b
 4730 01b7 05       		.uleb128 0x5
 4731 01b8 49       		.uleb128 0x49
 4732 01b9 13       		.uleb128 0x13
 4733 01ba 02       		.uleb128 0x2
 4734 01bb 18       		.uleb128 0x18
 4735 01bc 00       		.byte	0
 4736 01bd 00       		.byte	0
 4737 01be 20       		.uleb128 0x20
 4738 01bf 34       		.uleb128 0x34
 4739 01c0 00       		.byte	0
 4740 01c1 03       		.uleb128 0x3
 4741 01c2 08       		.uleb128 0x8
 4742 01c3 3A       		.uleb128 0x3a
 4743 01c4 0B       		.uleb128 0xb
 4744 01c5 3B       		.uleb128 0x3b
 4745 01c6 05       		.uleb128 0x5
 4746 01c7 49       		.uleb128 0x49
 4747 01c8 13       		.uleb128 0x13
 4748 01c9 00       		.byte	0
 4749 01ca 00       		.byte	0
 4750 01cb 21       		.uleb128 0x21
 4751 01cc 34       		.uleb128 0x34
 4752 01cd 00       		.byte	0
 4753 01ce 03       		.uleb128 0x3
 4754 01cf 0E       		.uleb128 0xe
 4755 01d0 3A       		.uleb128 0x3a
 4756 01d1 0B       		.uleb128 0xb
 4757 01d2 3B       		.uleb128 0x3b
 4758 01d3 05       		.uleb128 0x5
 4759 01d4 49       		.uleb128 0x49
 4760 01d5 13       		.uleb128 0x13
 4761 01d6 1C       		.uleb128 0x1c
 4762 01d7 0B       		.uleb128 0xb
 4763 01d8 00       		.byte	0
 4764 01d9 00       		.byte	0
 4765 01da 22       		.uleb128 0x22
 4766 01db 34       		.uleb128 0x34
 4767 01dc 00       		.byte	0
 4768 01dd 03       		.uleb128 0x3
 4769 01de 0E       		.uleb128 0xe
 4770 01df 3A       		.uleb128 0x3a
 4771 01e0 0B       		.uleb128 0xb
 4772 01e1 3B       		.uleb128 0x3b
 4773 01e2 05       		.uleb128 0x5
 4774 01e3 49       		.uleb128 0x49
 4775 01e4 13       		.uleb128 0x13
 4776 01e5 00       		.byte	0
 4777 01e6 00       		.byte	0
 4778 01e7 23       		.uleb128 0x23
 4779 01e8 2E       		.uleb128 0x2e
 4780 01e9 00       		.byte	0
 4781 01ea 3F       		.uleb128 0x3f
 4782 01eb 19       		.uleb128 0x19
 4783 01ec 03       		.uleb128 0x3
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 137


 4784 01ed 0E       		.uleb128 0xe
 4785 01ee 3A       		.uleb128 0x3a
 4786 01ef 0B       		.uleb128 0xb
 4787 01f0 3B       		.uleb128 0x3b
 4788 01f1 05       		.uleb128 0x5
 4789 01f2 27       		.uleb128 0x27
 4790 01f3 19       		.uleb128 0x19
 4791 01f4 11       		.uleb128 0x11
 4792 01f5 01       		.uleb128 0x1
 4793 01f6 12       		.uleb128 0x12
 4794 01f7 06       		.uleb128 0x6
 4795 01f8 40       		.uleb128 0x40
 4796 01f9 18       		.uleb128 0x18
 4797 01fa 9742     		.uleb128 0x2117
 4798 01fc 19       		.uleb128 0x19
 4799 01fd 00       		.byte	0
 4800 01fe 00       		.byte	0
 4801 01ff 24       		.uleb128 0x24
 4802 0200 34       		.uleb128 0x34
 4803 0201 00       		.byte	0
 4804 0202 03       		.uleb128 0x3
 4805 0203 0E       		.uleb128 0xe
 4806 0204 3A       		.uleb128 0x3a
 4807 0205 0B       		.uleb128 0xb
 4808 0206 3B       		.uleb128 0x3b
 4809 0207 0B       		.uleb128 0xb
 4810 0208 49       		.uleb128 0x49
 4811 0209 13       		.uleb128 0x13
 4812 020a 02       		.uleb128 0x2
 4813 020b 18       		.uleb128 0x18
 4814 020c 00       		.byte	0
 4815 020d 00       		.byte	0
 4816 020e 25       		.uleb128 0x25
 4817 020f 34       		.uleb128 0x34
 4818 0210 00       		.byte	0
 4819 0211 03       		.uleb128 0x3
 4820 0212 0E       		.uleb128 0xe
 4821 0213 3A       		.uleb128 0x3a
 4822 0214 0B       		.uleb128 0xb
 4823 0215 3B       		.uleb128 0x3b
 4824 0216 0B       		.uleb128 0xb
 4825 0217 49       		.uleb128 0x49
 4826 0218 13       		.uleb128 0x13
 4827 0219 1C       		.uleb128 0x1c
 4828 021a 0A       		.uleb128 0xa
 4829 021b 00       		.byte	0
 4830 021c 00       		.byte	0
 4831 021d 26       		.uleb128 0x26
 4832 021e 34       		.uleb128 0x34
 4833 021f 00       		.byte	0
 4834 0220 03       		.uleb128 0x3
 4835 0221 0E       		.uleb128 0xe
 4836 0222 3A       		.uleb128 0x3a
 4837 0223 0B       		.uleb128 0xb
 4838 0224 3B       		.uleb128 0x3b
 4839 0225 0B       		.uleb128 0xb
 4840 0226 49       		.uleb128 0x49
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 138


 4841 0227 13       		.uleb128 0x13
 4842 0228 3F       		.uleb128 0x3f
 4843 0229 19       		.uleb128 0x19
 4844 022a 3C       		.uleb128 0x3c
 4845 022b 19       		.uleb128 0x19
 4846 022c 00       		.byte	0
 4847 022d 00       		.byte	0
 4848 022e 27       		.uleb128 0x27
 4849 022f 34       		.uleb128 0x34
 4850 0230 00       		.byte	0
 4851 0231 03       		.uleb128 0x3
 4852 0232 0E       		.uleb128 0xe
 4853 0233 3A       		.uleb128 0x3a
 4854 0234 0B       		.uleb128 0xb
 4855 0235 3B       		.uleb128 0x3b
 4856 0236 0B       		.uleb128 0xb
 4857 0237 49       		.uleb128 0x49
 4858 0238 13       		.uleb128 0x13
 4859 0239 3F       		.uleb128 0x3f
 4860 023a 19       		.uleb128 0x19
 4861 023b 02       		.uleb128 0x2
 4862 023c 18       		.uleb128 0x18
 4863 023d 00       		.byte	0
 4864 023e 00       		.byte	0
 4865 023f 28       		.uleb128 0x28
 4866 0240 2E       		.uleb128 0x2e
 4867 0241 00       		.byte	0
 4868 0242 3F       		.uleb128 0x3f
 4869 0243 19       		.uleb128 0x19
 4870 0244 3C       		.uleb128 0x3c
 4871 0245 19       		.uleb128 0x19
 4872 0246 6E       		.uleb128 0x6e
 4873 0247 0E       		.uleb128 0xe
 4874 0248 03       		.uleb128 0x3
 4875 0249 0E       		.uleb128 0xe
 4876 024a 3A       		.uleb128 0x3a
 4877 024b 0B       		.uleb128 0xb
 4878 024c 3B       		.uleb128 0x3b
 4879 024d 0B       		.uleb128 0xb
 4880 024e 00       		.byte	0
 4881 024f 00       		.byte	0
 4882 0250 00       		.byte	0
 4883              		.section	.debug_loc,"",%progbits
 4884              	.Ldebug_loc0:
 4885              	.LLST0:
 4886 0000 00000000 		.4byte	.LVL0
 4887 0004 2E000000 		.4byte	.LVL4
 4888 0008 0100     		.2byte	0x1
 4889 000a 50       		.byte	0x50
 4890 000b 2E000000 		.4byte	.LVL4
 4891 000f 48000000 		.4byte	.LFE33
 4892 0013 0400     		.2byte	0x4
 4893 0015 F3       		.byte	0xf3
 4894 0016 01       		.uleb128 0x1
 4895 0017 50       		.byte	0x50
 4896 0018 9F       		.byte	0x9f
 4897 0019 00000000 		.4byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 139


 4898 001d 00000000 		.4byte	0
 4899              	.LLST1:
 4900 0021 06000000 		.4byte	.LVL1
 4901 0025 26000000 		.4byte	.LVL2
 4902 0029 0100     		.2byte	0x1
 4903 002b 52       		.byte	0x52
 4904 002c 26000000 		.4byte	.LVL2
 4905 0030 28000000 		.4byte	.LVL3
 4906 0034 0300     		.2byte	0x3
 4907 0036 73       		.byte	0x73
 4908 0037 01       		.sleb128 1
 4909 0038 9F       		.byte	0x9f
 4910 0039 00000000 		.4byte	0
 4911 003d 00000000 		.4byte	0
 4912              	.LLST2:
 4913 0041 00000000 		.4byte	.LVL5
 4914 0045 07000000 		.4byte	.LVL6-1
 4915 0049 0100     		.2byte	0x1
 4916 004b 50       		.byte	0x50
 4917 004c 07000000 		.4byte	.LVL6-1
 4918 0050 16000000 		.4byte	.LVL9
 4919 0054 0100     		.2byte	0x1
 4920 0056 54       		.byte	0x54
 4921 0057 16000000 		.4byte	.LVL9
 4922 005b 18000000 		.4byte	.LFE34
 4923 005f 0400     		.2byte	0x4
 4924 0061 F3       		.byte	0xf3
 4925 0062 01       		.uleb128 0x1
 4926 0063 50       		.byte	0x50
 4927 0064 9F       		.byte	0x9f
 4928 0065 00000000 		.4byte	0
 4929 0069 00000000 		.4byte	0
 4930              	.LLST3:
 4931 006d 02000000 		.4byte	.LVL10
 4932 0071 06000000 		.4byte	.LVL11
 4933 0075 0200     		.2byte	0x2
 4934 0077 30       		.byte	0x30
 4935 0078 9F       		.byte	0x9f
 4936 0079 06000000 		.4byte	.LVL11
 4937 007d 12000000 		.4byte	.LVL14
 4938 0081 0100     		.2byte	0x1
 4939 0083 54       		.byte	0x54
 4940 0084 00000000 		.4byte	0
 4941 0088 00000000 		.4byte	0
 4942              	.LLST4:
 4943 008c 12000000 		.4byte	.LVL17
 4944 0090 2A000000 		.4byte	.LVL22
 4945 0094 0100     		.2byte	0x1
 4946 0096 54       		.byte	0x54
 4947 0097 00000000 		.4byte	0
 4948 009b 00000000 		.4byte	0
 4949              	.LLST5:
 4950 009f 1A000000 		.4byte	.LVL18
 4951 00a3 20000000 		.4byte	.LVL19
 4952 00a7 0100     		.2byte	0x1
 4953 00a9 50       		.byte	0x50
 4954 00aa 00000000 		.4byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 140


 4955 00ae 00000000 		.4byte	0
 4956              	.LLST6:
 4957 00b2 00000000 		.4byte	.LVL23
 4958 00b6 02000000 		.4byte	.LVL24
 4959 00ba 0100     		.2byte	0x1
 4960 00bc 50       		.byte	0x50
 4961 00bd 02000000 		.4byte	.LVL24
 4962 00c1 0C000000 		.4byte	.LFE41
 4963 00c5 0400     		.2byte	0x4
 4964 00c7 F3       		.byte	0xf3
 4965 00c8 01       		.uleb128 0x1
 4966 00c9 50       		.byte	0x50
 4967 00ca 9F       		.byte	0x9f
 4968 00cb 00000000 		.4byte	0
 4969 00cf 00000000 		.4byte	0
 4970              	.LLST7:
 4971 00d3 00000000 		.4byte	.LVL25
 4972 00d7 02000000 		.4byte	.LVL26
 4973 00db 0100     		.2byte	0x1
 4974 00dd 50       		.byte	0x50
 4975 00de 02000000 		.4byte	.LVL26
 4976 00e2 0C000000 		.4byte	.LFE42
 4977 00e6 0400     		.2byte	0x4
 4978 00e8 F3       		.byte	0xf3
 4979 00e9 01       		.uleb128 0x1
 4980 00ea 50       		.byte	0x50
 4981 00eb 9F       		.byte	0x9f
 4982 00ec 00000000 		.4byte	0
 4983 00f0 00000000 		.4byte	0
 4984              	.LLST8:
 4985 00f4 00000000 		.4byte	.LVL27
 4986 00f8 04000000 		.4byte	.LVL28
 4987 00fc 0100     		.2byte	0x1
 4988 00fe 50       		.byte	0x50
 4989 00ff 04000000 		.4byte	.LVL28
 4990 0103 10000000 		.4byte	.LFE43
 4991 0107 0400     		.2byte	0x4
 4992 0109 F3       		.byte	0xf3
 4993 010a 01       		.uleb128 0x1
 4994 010b 50       		.byte	0x50
 4995 010c 9F       		.byte	0x9f
 4996 010d 00000000 		.4byte	0
 4997 0111 00000000 		.4byte	0
 4998              	.LLST9:
 4999 0115 00000000 		.4byte	.LVL29
 5000 0119 04000000 		.4byte	.LVL30
 5001 011d 0100     		.2byte	0x1
 5002 011f 50       		.byte	0x50
 5003 0120 04000000 		.4byte	.LVL30
 5004 0124 10000000 		.4byte	.LFE44
 5005 0128 0400     		.2byte	0x4
 5006 012a F3       		.byte	0xf3
 5007 012b 01       		.uleb128 0x1
 5008 012c 50       		.byte	0x50
 5009 012d 9F       		.byte	0x9f
 5010 012e 00000000 		.4byte	0
 5011 0132 00000000 		.4byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 141


 5012              	.LLST10:
 5013 0136 00000000 		.4byte	.LVL31
 5014 013a 04000000 		.4byte	.LVL32
 5015 013e 0100     		.2byte	0x1
 5016 0140 50       		.byte	0x50
 5017 0141 04000000 		.4byte	.LVL32
 5018 0145 0C000000 		.4byte	.LFE45
 5019 0149 0400     		.2byte	0x4
 5020 014b F3       		.byte	0xf3
 5021 014c 01       		.uleb128 0x1
 5022 014d 50       		.byte	0x50
 5023 014e 9F       		.byte	0x9f
 5024 014f 00000000 		.4byte	0
 5025 0153 00000000 		.4byte	0
 5026              	.LLST11:
 5027 0157 00000000 		.4byte	.LVL33
 5028 015b 04000000 		.4byte	.LVL34
 5029 015f 0100     		.2byte	0x1
 5030 0161 50       		.byte	0x50
 5031 0162 04000000 		.4byte	.LVL34
 5032 0166 0C000000 		.4byte	.LFE46
 5033 016a 0400     		.2byte	0x4
 5034 016c F3       		.byte	0xf3
 5035 016d 01       		.uleb128 0x1
 5036 016e 50       		.byte	0x50
 5037 016f 9F       		.byte	0x9f
 5038 0170 00000000 		.4byte	0
 5039 0174 00000000 		.4byte	0
 5040              	.LLST12:
 5041 0178 00000000 		.4byte	.LVL35
 5042 017c 04000000 		.4byte	.LVL36
 5043 0180 0100     		.2byte	0x1
 5044 0182 50       		.byte	0x50
 5045 0183 04000000 		.4byte	.LVL36
 5046 0187 0C000000 		.4byte	.LFE47
 5047 018b 0400     		.2byte	0x4
 5048 018d F3       		.byte	0xf3
 5049 018e 01       		.uleb128 0x1
 5050 018f 50       		.byte	0x50
 5051 0190 9F       		.byte	0x9f
 5052 0191 00000000 		.4byte	0
 5053 0195 00000000 		.4byte	0
 5054              	.LLST13:
 5055 0199 00000000 		.4byte	.LVL37
 5056 019d 04000000 		.4byte	.LVL38
 5057 01a1 0100     		.2byte	0x1
 5058 01a3 50       		.byte	0x50
 5059 01a4 04000000 		.4byte	.LVL38
 5060 01a8 0C000000 		.4byte	.LFE48
 5061 01ac 0400     		.2byte	0x4
 5062 01ae F3       		.byte	0xf3
 5063 01af 01       		.uleb128 0x1
 5064 01b0 50       		.byte	0x50
 5065 01b1 9F       		.byte	0x9f
 5066 01b2 00000000 		.4byte	0
 5067 01b6 00000000 		.4byte	0
 5068              	.LLST14:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 142


 5069 01ba 00000000 		.4byte	.LVL39
 5070 01be 04000000 		.4byte	.LVL40
 5071 01c2 0100     		.2byte	0x1
 5072 01c4 50       		.byte	0x50
 5073 01c5 04000000 		.4byte	.LVL40
 5074 01c9 0C000000 		.4byte	.LFE49
 5075 01cd 0400     		.2byte	0x4
 5076 01cf F3       		.byte	0xf3
 5077 01d0 01       		.uleb128 0x1
 5078 01d1 50       		.byte	0x50
 5079 01d2 9F       		.byte	0x9f
 5080 01d3 00000000 		.4byte	0
 5081 01d7 00000000 		.4byte	0
 5082              	.LLST15:
 5083 01db 00000000 		.4byte	.LVL45
 5084 01df 04000000 		.4byte	.LVL46
 5085 01e3 0100     		.2byte	0x1
 5086 01e5 50       		.byte	0x50
 5087 01e6 04000000 		.4byte	.LVL46
 5088 01ea 0C000000 		.4byte	.LFE54
 5089 01ee 0400     		.2byte	0x4
 5090 01f0 F3       		.byte	0xf3
 5091 01f1 01       		.uleb128 0x1
 5092 01f2 50       		.byte	0x50
 5093 01f3 9F       		.byte	0x9f
 5094 01f4 00000000 		.4byte	0
 5095 01f8 00000000 		.4byte	0
 5096              	.LLST16:
 5097 01fc 00000000 		.4byte	.LVL47
 5098 0200 32000000 		.4byte	.LVL57
 5099 0204 0100     		.2byte	0x1
 5100 0206 50       		.byte	0x50
 5101 0207 32000000 		.4byte	.LVL57
 5102 020b AA000000 		.4byte	.LVL69
 5103 020f 0100     		.2byte	0x1
 5104 0211 55       		.byte	0x55
 5105 0212 AA000000 		.4byte	.LVL69
 5106 0216 C0000000 		.4byte	.LFE55
 5107 021a 0400     		.2byte	0x4
 5108 021c F3       		.byte	0xf3
 5109 021d 01       		.uleb128 0x1
 5110 021e 50       		.byte	0x50
 5111 021f 9F       		.byte	0x9f
 5112 0220 00000000 		.4byte	0
 5113 0224 00000000 		.4byte	0
 5114              	.LLST17:
 5115 0228 0C000000 		.4byte	.LVL48
 5116 022c 22000000 		.4byte	.LVL53
 5117 0230 0100     		.2byte	0x1
 5118 0232 53       		.byte	0x53
 5119 0233 2A000000 		.4byte	.LVL54
 5120 0237 2C000000 		.4byte	.LVL55
 5121 023b 0100     		.2byte	0x1
 5122 023d 53       		.byte	0x53
 5123 023e 2C000000 		.4byte	.LVL55
 5124 0242 2E000000 		.4byte	.LVL56
 5125 0246 0300     		.2byte	0x3
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 143


 5126 0248 73       		.byte	0x73
 5127 0249 01       		.sleb128 1
 5128 024a 9F       		.byte	0x9f
 5129 024b 00000000 		.4byte	0
 5130 024f 00000000 		.4byte	0
 5131              	.LLST18:
 5132 0253 1A000000 		.4byte	.LVL51
 5133 0257 AA000000 		.4byte	.LVL70
 5134 025b 0100     		.2byte	0x1
 5135 025d 57       		.byte	0x57
 5136 025e 00000000 		.4byte	0
 5137 0262 00000000 		.4byte	0
 5138              	.LLST19:
 5139 0266 1E000000 		.4byte	.LVL52
 5140 026a 2A000000 		.4byte	.LVL54
 5141 026e 0200     		.2byte	0x2
 5142 0270 35       		.byte	0x35
 5143 0271 9F       		.byte	0x9f
 5144 0272 2E000000 		.4byte	.LVL56
 5145 0276 5C000000 		.4byte	.LVL61
 5146 027a 0100     		.2byte	0x1
 5147 027c 54       		.byte	0x54
 5148 027d 62000000 		.4byte	.LVL62
 5149 0281 78000000 		.4byte	.LVL63
 5150 0285 0100     		.2byte	0x1
 5151 0287 54       		.byte	0x54
 5152 0288 92000000 		.4byte	.LVL65
 5153 028c 96000000 		.4byte	.LVL66
 5154 0290 0100     		.2byte	0x1
 5155 0292 54       		.byte	0x54
 5156 0293 00000000 		.4byte	0
 5157 0297 00000000 		.4byte	0
 5158              	.LLST20:
 5159 029b 14000000 		.4byte	.LVL49
 5160 029f AA000000 		.4byte	.LVL71
 5161 02a3 0100     		.2byte	0x1
 5162 02a5 58       		.byte	0x58
 5163 02a6 00000000 		.4byte	0
 5164 02aa 00000000 		.4byte	0
 5165              	.LLST21:
 5166 02ae 18000000 		.4byte	.LVL50
 5167 02b2 4E000000 		.4byte	.LVL59
 5168 02b6 0100     		.2byte	0x1
 5169 02b8 56       		.byte	0x56
 5170 02b9 62000000 		.4byte	.LVL62
 5171 02bd 9A000000 		.4byte	.LVL67
 5172 02c1 0100     		.2byte	0x1
 5173 02c3 56       		.byte	0x56
 5174 02c4 00000000 		.4byte	0
 5175 02c8 00000000 		.4byte	0
 5176              	.LLST22:
 5177 02cc 00000000 		.4byte	.LVL72
 5178 02d0 08000000 		.4byte	.LVL74
 5179 02d4 0100     		.2byte	0x1
 5180 02d6 50       		.byte	0x50
 5181 02d7 08000000 		.4byte	.LVL74
 5182 02db 28000000 		.4byte	.LFE56
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 144


 5183 02df 0400     		.2byte	0x4
 5184 02e1 F3       		.byte	0xf3
 5185 02e2 01       		.uleb128 0x1
 5186 02e3 50       		.byte	0x50
 5187 02e4 9F       		.byte	0x9f
 5188 02e5 00000000 		.4byte	0
 5189 02e9 00000000 		.4byte	0
 5190              	.LLST23:
 5191 02ed 06000000 		.4byte	.LVL73
 5192 02f1 22000000 		.4byte	.LVL80
 5193 02f5 0100     		.2byte	0x1
 5194 02f7 54       		.byte	0x54
 5195 02f8 00000000 		.4byte	0
 5196 02fc 00000000 		.4byte	0
 5197              	.LLST24:
 5198 0300 0C000000 		.4byte	.LVL75
 5199 0304 22000000 		.4byte	.LVL81
 5200 0308 0100     		.2byte	0x1
 5201 030a 55       		.byte	0x55
 5202 030b 22000000 		.4byte	.LVL81
 5203 030f 28000000 		.4byte	.LFE56
 5204 0313 1E00     		.2byte	0x1e
 5205 0315 F3       		.byte	0xf3
 5206 0316 01       		.uleb128 0x1
 5207 0317 50       		.byte	0x50
 5208 0318 03       		.byte	0x3
 5209 0319 00000000 		.4byte	.LANCHOR2
 5210 031d 22       		.byte	0x22
 5211 031e 94       		.byte	0x94
 5212 031f 01       		.byte	0x1
 5213 0320 08       		.byte	0x8
 5214 0321 FF       		.byte	0xff
 5215 0322 1A       		.byte	0x1a
 5216 0323 F3       		.byte	0xf3
 5217 0324 01       		.uleb128 0x1
 5218 0325 50       		.byte	0x50
 5219 0326 03       		.byte	0x3
 5220 0327 08000000 		.4byte	.LANCHOR2+8
 5221 032b 22       		.byte	0x22
 5222 032c 94       		.byte	0x94
 5223 032d 01       		.byte	0x1
 5224 032e 08       		.byte	0x8
 5225 032f FF       		.byte	0xff
 5226 0330 1A       		.byte	0x1a
 5227 0331 22       		.byte	0x22
 5228 0332 9F       		.byte	0x9f
 5229 0333 00000000 		.4byte	0
 5230 0337 00000000 		.4byte	0
 5231              	.LLST25:
 5232 033b 0C000000 		.4byte	.LVL75
 5233 033f 0E000000 		.4byte	.LVL76
 5234 0343 0200     		.2byte	0x2
 5235 0345 30       		.byte	0x30
 5236 0346 9F       		.byte	0x9f
 5237 0347 0E000000 		.4byte	.LVL76
 5238 034b 22000000 		.4byte	.LVL82
 5239 034f 0100     		.2byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 145


 5240 0351 56       		.byte	0x56
 5241 0352 22000000 		.4byte	.LVL82
 5242 0356 28000000 		.4byte	.LFE56
 5243 035a 0100     		.2byte	0x1
 5244 035c 50       		.byte	0x50
 5245 035d 00000000 		.4byte	0
 5246 0361 00000000 		.4byte	0
 5247              	.LLST26:
 5248 0365 02000000 		.4byte	.LVL83
 5249 0369 08000000 		.4byte	.LVL84
 5250 036d 0200     		.2byte	0x2
 5251 036f 30       		.byte	0x30
 5252 0370 9F       		.byte	0x9f
 5253 0371 08000000 		.4byte	.LVL84
 5254 0375 1C000000 		.4byte	.LVL88
 5255 0379 0100     		.2byte	0x1
 5256 037b 54       		.byte	0x54
 5257 037c 00000000 		.4byte	0
 5258 0380 00000000 		.4byte	0
 5259              	.LLST27:
 5260 0384 02000000 		.4byte	.LVL83
 5261 0388 08000000 		.4byte	.LVL84
 5262 038c 0200     		.2byte	0x2
 5263 038e 30       		.byte	0x30
 5264 038f 9F       		.byte	0x9f
 5265 0390 08000000 		.4byte	.LVL84
 5266 0394 1C000000 		.4byte	.LVL89
 5267 0398 0100     		.2byte	0x1
 5268 039a 55       		.byte	0x55
 5269 039b 1C000000 		.4byte	.LVL89
 5270 039f 1E000000 		.4byte	.LFE57
 5271 03a3 0100     		.2byte	0x1
 5272 03a5 50       		.byte	0x50
 5273 03a6 00000000 		.4byte	0
 5274 03aa 00000000 		.4byte	0
 5275              	.LLST28:
 5276 03ae 00000000 		.4byte	.LVL90
 5277 03b2 08000000 		.4byte	.LVL92
 5278 03b6 0100     		.2byte	0x1
 5279 03b8 50       		.byte	0x50
 5280 03b9 08000000 		.4byte	.LVL92
 5281 03bd 2C000000 		.4byte	.LFE58
 5282 03c1 0400     		.2byte	0x4
 5283 03c3 F3       		.byte	0xf3
 5284 03c4 01       		.uleb128 0x1
 5285 03c5 50       		.byte	0x50
 5286 03c6 9F       		.byte	0x9f
 5287 03c7 00000000 		.4byte	0
 5288 03cb 00000000 		.4byte	0
 5289              	.LLST29:
 5290 03cf 06000000 		.4byte	.LVL91
 5291 03d3 1A000000 		.4byte	.LVL95
 5292 03d7 0100     		.2byte	0x1
 5293 03d9 54       		.byte	0x54
 5294 03da 1C000000 		.4byte	.LVL96
 5295 03de 20000000 		.4byte	.LVL97
 5296 03e2 0100     		.2byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 146


 5297 03e4 54       		.byte	0x54
 5298 03e5 00000000 		.4byte	0
 5299 03e9 00000000 		.4byte	0
 5300              	.LLST30:
 5301 03ed 0E000000 		.4byte	.LVL93
 5302 03f1 20000000 		.4byte	.LVL98
 5303 03f5 0100     		.2byte	0x1
 5304 03f7 55       		.byte	0x55
 5305 03f8 20000000 		.4byte	.LVL98
 5306 03fc 2C000000 		.4byte	.LFE58
 5307 0400 1E00     		.2byte	0x1e
 5308 0402 F3       		.byte	0xf3
 5309 0403 01       		.uleb128 0x1
 5310 0404 50       		.byte	0x50
 5311 0405 03       		.byte	0x3
 5312 0406 00000000 		.4byte	.LANCHOR2
 5313 040a 22       		.byte	0x22
 5314 040b 94       		.byte	0x94
 5315 040c 01       		.byte	0x1
 5316 040d 08       		.byte	0x8
 5317 040e FF       		.byte	0xff
 5318 040f 1A       		.byte	0x1a
 5319 0410 F3       		.byte	0xf3
 5320 0411 01       		.uleb128 0x1
 5321 0412 50       		.byte	0x50
 5322 0413 03       		.byte	0x3
 5323 0414 08000000 		.4byte	.LANCHOR2+8
 5324 0418 22       		.byte	0x22
 5325 0419 94       		.byte	0x94
 5326 041a 01       		.byte	0x1
 5327 041b 08       		.byte	0x8
 5328 041c FF       		.byte	0xff
 5329 041d 1A       		.byte	0x1a
 5330 041e 22       		.byte	0x22
 5331 041f 9F       		.byte	0x9f
 5332 0420 00000000 		.4byte	0
 5333 0424 00000000 		.4byte	0
 5334              	.LLST31:
 5335 0428 00000000 		.4byte	.LVL99
 5336 042c 08000000 		.4byte	.LVL101
 5337 0430 0100     		.2byte	0x1
 5338 0432 50       		.byte	0x50
 5339 0433 08000000 		.4byte	.LVL101
 5340 0437 2C000000 		.4byte	.LFE59
 5341 043b 0400     		.2byte	0x4
 5342 043d F3       		.byte	0xf3
 5343 043e 01       		.uleb128 0x1
 5344 043f 50       		.byte	0x50
 5345 0440 9F       		.byte	0x9f
 5346 0441 00000000 		.4byte	0
 5347 0445 00000000 		.4byte	0
 5348              	.LLST32:
 5349 0449 06000000 		.4byte	.LVL100
 5350 044d 1A000000 		.4byte	.LVL104
 5351 0451 0100     		.2byte	0x1
 5352 0453 54       		.byte	0x54
 5353 0454 1C000000 		.4byte	.LVL105
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 147


 5354 0458 20000000 		.4byte	.LVL106
 5355 045c 0100     		.2byte	0x1
 5356 045e 54       		.byte	0x54
 5357 045f 00000000 		.4byte	0
 5358 0463 00000000 		.4byte	0
 5359              	.LLST33:
 5360 0467 0E000000 		.4byte	.LVL102
 5361 046b 20000000 		.4byte	.LVL107
 5362 046f 0100     		.2byte	0x1
 5363 0471 55       		.byte	0x55
 5364 0472 20000000 		.4byte	.LVL107
 5365 0476 2C000000 		.4byte	.LFE59
 5366 047a 1E00     		.2byte	0x1e
 5367 047c F3       		.byte	0xf3
 5368 047d 01       		.uleb128 0x1
 5369 047e 50       		.byte	0x50
 5370 047f 03       		.byte	0x3
 5371 0480 00000000 		.4byte	.LANCHOR2
 5372 0484 22       		.byte	0x22
 5373 0485 94       		.byte	0x94
 5374 0486 01       		.byte	0x1
 5375 0487 08       		.byte	0x8
 5376 0488 FF       		.byte	0xff
 5377 0489 1A       		.byte	0x1a
 5378 048a F3       		.byte	0xf3
 5379 048b 01       		.uleb128 0x1
 5380 048c 50       		.byte	0x50
 5381 048d 03       		.byte	0x3
 5382 048e 08000000 		.4byte	.LANCHOR2+8
 5383 0492 22       		.byte	0x22
 5384 0493 94       		.byte	0x94
 5385 0494 01       		.byte	0x1
 5386 0495 08       		.byte	0x8
 5387 0496 FF       		.byte	0xff
 5388 0497 1A       		.byte	0x1a
 5389 0498 22       		.byte	0x22
 5390 0499 9F       		.byte	0x9f
 5391 049a 00000000 		.4byte	0
 5392 049e 00000000 		.4byte	0
 5393              	.LLST34:
 5394 04a2 00000000 		.4byte	.LVL108
 5395 04a6 0C000000 		.4byte	.LVL111
 5396 04aa 0100     		.2byte	0x1
 5397 04ac 50       		.byte	0x50
 5398 04ad 0C000000 		.4byte	.LVL111
 5399 04b1 2C000000 		.4byte	.LFE60
 5400 04b5 0400     		.2byte	0x4
 5401 04b7 F3       		.byte	0xf3
 5402 04b8 01       		.uleb128 0x1
 5403 04b9 50       		.byte	0x50
 5404 04ba 9F       		.byte	0x9f
 5405 04bb 00000000 		.4byte	0
 5406 04bf 00000000 		.4byte	0
 5407              	.LLST35:
 5408 04c3 08000000 		.4byte	.LVL110
 5409 04c7 10000000 		.4byte	.LVL112
 5410 04cb 0200     		.2byte	0x2
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 148


 5411 04cd 30       		.byte	0x30
 5412 04ce 9F       		.byte	0x9f
 5413 04cf 10000000 		.4byte	.LVL112
 5414 04d3 20000000 		.4byte	.LVL115
 5415 04d7 0100     		.2byte	0x1
 5416 04d9 53       		.byte	0x53
 5417 04da 22000000 		.4byte	.LVL116
 5418 04de 2C000000 		.4byte	.LFE60
 5419 04e2 0100     		.2byte	0x1
 5420 04e4 53       		.byte	0x53
 5421 04e5 00000000 		.4byte	0
 5422 04e9 00000000 		.4byte	0
 5423              	.LLST36:
 5424 04ed 02000000 		.4byte	.LVL109
 5425 04f1 10000000 		.4byte	.LVL112
 5426 04f5 0300     		.2byte	0x3
 5427 04f7 09       		.byte	0x9
 5428 04f8 FF       		.byte	0xff
 5429 04f9 9F       		.byte	0x9f
 5430 04fa 10000000 		.4byte	.LVL112
 5431 04fe 2C000000 		.4byte	.LFE60
 5432 0502 0100     		.2byte	0x1
 5433 0504 50       		.byte	0x50
 5434 0505 00000000 		.4byte	0
 5435 0509 00000000 		.4byte	0
 5436              	.LLST37:
 5437 050d 02000000 		.4byte	.LVL109
 5438 0511 10000000 		.4byte	.LVL112
 5439 0515 0200     		.2byte	0x2
 5440 0517 30       		.byte	0x30
 5441 0518 9F       		.byte	0x9f
 5442 0519 10000000 		.4byte	.LVL112
 5443 051d 1C000000 		.4byte	.LVL113
 5444 0521 0100     		.2byte	0x1
 5445 0523 56       		.byte	0x56
 5446 0524 1E000000 		.4byte	.LVL114
 5447 0528 26000000 		.4byte	.LVL118
 5448 052c 0100     		.2byte	0x1
 5449 052e 56       		.byte	0x56
 5450 052f 00000000 		.4byte	0
 5451 0533 00000000 		.4byte	0
 5452              	.LLST38:
 5453 0537 08000000 		.4byte	.LVL110
 5454 053b 26000000 		.4byte	.LVL117
 5455 053f 0100     		.2byte	0x1
 5456 0541 55       		.byte	0x55
 5457 0542 00000000 		.4byte	0
 5458 0546 00000000 		.4byte	0
 5459              	.LLST39:
 5460 054a 00000000 		.4byte	.LVL119
 5461 054e 0E000000 		.4byte	.LVL121
 5462 0552 0100     		.2byte	0x1
 5463 0554 50       		.byte	0x50
 5464 0555 0E000000 		.4byte	.LVL121
 5465 0559 E4000000 		.4byte	.LFE61
 5466 055d 0400     		.2byte	0x4
 5467 055f F3       		.byte	0xf3
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 149


 5468 0560 01       		.uleb128 0x1
 5469 0561 50       		.byte	0x50
 5470 0562 9F       		.byte	0x9f
 5471 0563 00000000 		.4byte	0
 5472 0567 00000000 		.4byte	0
 5473              	.LLST40:
 5474 056b 00000000 		.4byte	.LVL119
 5475 056f 2A000000 		.4byte	.LVL125
 5476 0573 0100     		.2byte	0x1
 5477 0575 51       		.byte	0x51
 5478 0576 2A000000 		.4byte	.LVL125
 5479 057a 34000000 		.4byte	.LVL127
 5480 057e 0400     		.2byte	0x4
 5481 0580 F3       		.byte	0xf3
 5482 0581 01       		.uleb128 0x1
 5483 0582 51       		.byte	0x51
 5484 0583 9F       		.byte	0x9f
 5485 0584 34000000 		.4byte	.LVL127
 5486 0588 48000000 		.4byte	.LVL130
 5487 058c 0100     		.2byte	0x1
 5488 058e 51       		.byte	0x51
 5489 058f 48000000 		.4byte	.LVL130
 5490 0593 52000000 		.4byte	.LVL131
 5491 0597 0400     		.2byte	0x4
 5492 0599 F3       		.byte	0xf3
 5493 059a 01       		.uleb128 0x1
 5494 059b 51       		.byte	0x51
 5495 059c 9F       		.byte	0x9f
 5496 059d 52000000 		.4byte	.LVL131
 5497 05a1 5C000000 		.4byte	.LVL134
 5498 05a5 0100     		.2byte	0x1
 5499 05a7 51       		.byte	0x51
 5500 05a8 5C000000 		.4byte	.LVL134
 5501 05ac E4000000 		.4byte	.LFE61
 5502 05b0 0400     		.2byte	0x4
 5503 05b2 F3       		.byte	0xf3
 5504 05b3 01       		.uleb128 0x1
 5505 05b4 51       		.byte	0x51
 5506 05b5 9F       		.byte	0x9f
 5507 05b6 00000000 		.4byte	0
 5508 05ba 00000000 		.4byte	0
 5509              	.LLST41:
 5510 05be 00000000 		.4byte	.LVL119
 5511 05c2 10000000 		.4byte	.LVL122
 5512 05c6 0100     		.2byte	0x1
 5513 05c8 52       		.byte	0x52
 5514 05c9 10000000 		.4byte	.LVL122
 5515 05cd E4000000 		.4byte	.LFE61
 5516 05d1 0400     		.2byte	0x4
 5517 05d3 F3       		.byte	0xf3
 5518 05d4 01       		.uleb128 0x1
 5519 05d5 52       		.byte	0x52
 5520 05d6 9F       		.byte	0x9f
 5521 05d7 00000000 		.4byte	0
 5522 05db 00000000 		.4byte	0
 5523              	.LLST42:
 5524 05df 00000000 		.4byte	.LVL119
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 150


 5525 05e3 0C000000 		.4byte	.LVL120
 5526 05e7 0100     		.2byte	0x1
 5527 05e9 53       		.byte	0x53
 5528 05ea 0C000000 		.4byte	.LVL120
 5529 05ee E4000000 		.4byte	.LFE61
 5530 05f2 0400     		.2byte	0x4
 5531 05f4 F3       		.byte	0xf3
 5532 05f5 01       		.uleb128 0x1
 5533 05f6 53       		.byte	0x53
 5534 05f7 9F       		.byte	0x9f
 5535 05f8 00000000 		.4byte	0
 5536 05fc 00000000 		.4byte	0
 5537              	.LLST43:
 5538 0600 00000000 		.4byte	.LVL119
 5539 0604 0C000000 		.4byte	.LVL120
 5540 0608 0200     		.2byte	0x2
 5541 060a 91       		.byte	0x91
 5542 060b 00       		.sleb128 0
 5543 060c 0C000000 		.4byte	.LVL120
 5544 0610 12000000 		.4byte	.LVL123
 5545 0614 0200     		.2byte	0x2
 5546 0616 73       		.byte	0x73
 5547 0617 00       		.sleb128 0
 5548 0618 12000000 		.4byte	.LVL123
 5549 061c E4000000 		.4byte	.LFE61
 5550 0620 0200     		.2byte	0x2
 5551 0622 91       		.byte	0x91
 5552 0623 00       		.sleb128 0
 5553 0624 00000000 		.4byte	0
 5554 0628 00000000 		.4byte	0
 5555              	.LLST44:
 5556 062c B2000000 		.4byte	.LVL135
 5557 0630 B8000000 		.4byte	.LVL137
 5558 0634 0100     		.2byte	0x1
 5559 0636 50       		.byte	0x50
 5560 0637 B8000000 		.4byte	.LVL137
 5561 063b BB000000 		.4byte	.LVL138-1
 5562 063f 0E00     		.2byte	0xe
 5563 0641 72       		.byte	0x72
 5564 0642 00       		.sleb128 0
 5565 0643 03       		.byte	0x3
 5566 0644 48000000 		.4byte	CapSense_centroid.5642
 5567 0648 94       		.byte	0x94
 5568 0649 01       		.byte	0x1
 5569 064a 08       		.byte	0x8
 5570 064b FF       		.byte	0xff
 5571 064c 1A       		.byte	0x1a
 5572 064d 1C       		.byte	0x1c
 5573 064e 9F       		.byte	0x9f
 5574 064f 00000000 		.4byte	0
 5575 0653 00000000 		.4byte	0
 5576              	.LLST45:
 5577 0657 B6000000 		.4byte	.LVL136
 5578 065b BB000000 		.4byte	.LVL138-1
 5579 065f 0100     		.2byte	0x1
 5580 0661 51       		.byte	0x51
 5581 0662 BE000000 		.4byte	.LVL139
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 151


 5582 0666 C2000000 		.4byte	.LVL140
 5583 066a 0600     		.2byte	0x6
 5584 066c 70       		.byte	0x70
 5585 066d 00       		.sleb128 0
 5586 066e 74       		.byte	0x74
 5587 066f 00       		.sleb128 0
 5588 0670 22       		.byte	0x22
 5589 0671 9F       		.byte	0x9f
 5590 0672 C2000000 		.4byte	.LVL140
 5591 0676 D6000000 		.4byte	.LVL143
 5592 067a 0100     		.2byte	0x1
 5593 067c 54       		.byte	0x54
 5594 067d D6000000 		.4byte	.LVL143
 5595 0681 D8000000 		.4byte	.LVL144
 5596 0685 0500     		.2byte	0x5
 5597 0687 74       		.byte	0x74
 5598 0688 80827E   		.sleb128 -32512
 5599 068b 9F       		.byte	0x9f
 5600 068c 00000000 		.4byte	0
 5601 0690 00000000 		.4byte	0
 5602              	.LLST46:
 5603 0694 16000000 		.4byte	.LVL124
 5604 0698 30000000 		.4byte	.LVL126
 5605 069c 0100     		.2byte	0x1
 5606 069e 53       		.byte	0x53
 5607 069f 34000000 		.4byte	.LVL127
 5608 06a3 3C000000 		.4byte	.LVL128
 5609 06a7 0100     		.2byte	0x1
 5610 06a9 53       		.byte	0x53
 5611 06aa 3C000000 		.4byte	.LVL128
 5612 06ae 42000000 		.4byte	.LVL129
 5613 06b2 0900     		.2byte	0x9
 5614 06b4 71       		.byte	0x71
 5615 06b5 00       		.sleb128 0
 5616 06b6 03       		.byte	0x3
 5617 06b7 2C000000 		.4byte	.LANCHOR0+44
 5618 06bb 22       		.byte	0x22
 5619 06bc 9F       		.byte	0x9f
 5620 06bd 42000000 		.4byte	.LVL129
 5621 06c1 48000000 		.4byte	.LVL130
 5622 06c5 0800     		.2byte	0x8
 5623 06c7 73       		.byte	0x73
 5624 06c8 00       		.sleb128 0
 5625 06c9 71       		.byte	0x71
 5626 06ca 00       		.sleb128 0
 5627 06cb 22       		.byte	0x22
 5628 06cc 23       		.byte	0x23
 5629 06cd 2C       		.uleb128 0x2c
 5630 06ce 9F       		.byte	0x9f
 5631 06cf 52000000 		.4byte	.LVL131
 5632 06d3 54000000 		.4byte	.LVL132
 5633 06d7 0100     		.2byte	0x1
 5634 06d9 53       		.byte	0x53
 5635 06da 54000000 		.4byte	.LVL132
 5636 06de 5A000000 		.4byte	.LVL133
 5637 06e2 0900     		.2byte	0x9
 5638 06e4 71       		.byte	0x71
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 152


 5639 06e5 00       		.sleb128 0
 5640 06e6 03       		.byte	0x3
 5641 06e7 2C000000 		.4byte	.LANCHOR0+44
 5642 06eb 22       		.byte	0x22
 5643 06ec 9F       		.byte	0x9f
 5644 06ed 5A000000 		.4byte	.LVL133
 5645 06f1 5C000000 		.4byte	.LVL134
 5646 06f5 0800     		.2byte	0x8
 5647 06f7 72       		.byte	0x72
 5648 06f8 00       		.sleb128 0
 5649 06f9 71       		.byte	0x71
 5650 06fa 00       		.sleb128 0
 5651 06fb 22       		.byte	0x22
 5652 06fc 23       		.byte	0x23
 5653 06fd 2C       		.uleb128 0x2c
 5654 06fe 9F       		.byte	0x9f
 5655 06ff 00000000 		.4byte	0
 5656 0703 00000000 		.4byte	0
 5657              	.LLST47:
 5658 0707 00000000 		.4byte	.LVL146
 5659 070b 18000000 		.4byte	.LVL149
 5660 070f 0100     		.2byte	0x1
 5661 0711 50       		.byte	0x50
 5662 0712 18000000 		.4byte	.LVL149
 5663 0716 3A000000 		.4byte	.LVL155
 5664 071a 0100     		.2byte	0x1
 5665 071c 54       		.byte	0x54
 5666 071d 3A000000 		.4byte	.LVL155
 5667 0721 4C000000 		.4byte	.LFE62
 5668 0725 0400     		.2byte	0x4
 5669 0727 F3       		.byte	0xf3
 5670 0728 01       		.uleb128 0x1
 5671 0729 50       		.byte	0x50
 5672 072a 9F       		.byte	0x9f
 5673 072b 00000000 		.4byte	0
 5674 072f 00000000 		.4byte	0
 5675              	.LLST48:
 5676 0733 1C000000 		.4byte	.LVL150
 5677 0737 31000000 		.4byte	.LVL151-1
 5678 073b 0100     		.2byte	0x1
 5679 073d 50       		.byte	0x50
 5680 073e 36000000 		.4byte	.LVL153
 5681 0742 38000000 		.4byte	.LVL154
 5682 0746 0100     		.2byte	0x1
 5683 0748 50       		.byte	0x50
 5684 0749 00000000 		.4byte	0
 5685 074d 00000000 		.4byte	0
 5686              	.LLST49:
 5687 0751 34000000 		.4byte	.LVL152
 5688 0755 36000000 		.4byte	.LVL153
 5689 0759 0100     		.2byte	0x1
 5690 075b 50       		.byte	0x50
 5691 075c 38000000 		.4byte	.LVL154
 5692 0760 4C000000 		.4byte	.LFE62
 5693 0764 0100     		.2byte	0x1
 5694 0766 50       		.byte	0x50
 5695 0767 00000000 		.4byte	0
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 153


 5696 076b 00000000 		.4byte	0
 5697              	.LLST50:
 5698 076f 0A000000 		.4byte	.LVL147
 5699 0773 3A000000 		.4byte	.LVL156
 5700 0777 0100     		.2byte	0x1
 5701 0779 55       		.byte	0x55
 5702 077a 3A000000 		.4byte	.LVL156
 5703 077e 4C000000 		.4byte	.LFE62
 5704 0782 0900     		.2byte	0x9
 5705 0784 F3       		.byte	0xf3
 5706 0785 01       		.uleb128 0x1
 5707 0786 50       		.byte	0x50
 5708 0787 03       		.byte	0x3
 5709 0788 00000000 		.4byte	.LANCHOR2
 5710 078c 22       		.byte	0x22
 5711 078d 00000000 		.4byte	0
 5712 0791 00000000 		.4byte	0
 5713              	.LLST51:
 5714 0795 0E000000 		.4byte	.LVL148
 5715 0799 3A000000 		.4byte	.LVL157
 5716 079d 0100     		.2byte	0x1
 5717 079f 56       		.byte	0x56
 5718 07a0 3A000000 		.4byte	.LVL157
 5719 07a4 4C000000 		.4byte	.LFE62
 5720 07a8 0900     		.2byte	0x9
 5721 07aa F3       		.byte	0xf3
 5722 07ab 01       		.uleb128 0x1
 5723 07ac 50       		.byte	0x50
 5724 07ad 03       		.byte	0x3
 5725 07ae 08000000 		.4byte	.LANCHOR2+8
 5726 07b2 22       		.byte	0x22
 5727 07b3 00000000 		.4byte	0
 5728 07b7 00000000 		.4byte	0
 5729              	.LLST52:
 5730 07bb 00000000 		.4byte	.LVL158
 5731 07bf 08000000 		.4byte	.LVL159
 5732 07c3 0100     		.2byte	0x1
 5733 07c5 50       		.byte	0x50
 5734 07c6 08000000 		.4byte	.LVL159
 5735 07ca 0A000000 		.4byte	.LVL160
 5736 07ce 0400     		.2byte	0x4
 5737 07d0 F3       		.byte	0xf3
 5738 07d1 01       		.uleb128 0x1
 5739 07d2 50       		.byte	0x50
 5740 07d3 9F       		.byte	0x9f
 5741 07d4 0A000000 		.4byte	.LVL160
 5742 07d8 1A000000 		.4byte	.LVL162
 5743 07dc 0100     		.2byte	0x1
 5744 07de 50       		.byte	0x50
 5745 07df 00000000 		.4byte	0
 5746 07e3 00000000 		.4byte	0
 5747              	.LLST53:
 5748 07e7 00000000 		.4byte	.LVL158
 5749 07eb 0A000000 		.4byte	.LVL160
 5750 07ef 0100     		.2byte	0x1
 5751 07f1 51       		.byte	0x51
 5752 07f2 0A000000 		.4byte	.LVL160
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 154


 5753 07f6 1C000000 		.4byte	.LFE64
 5754 07fa 0100     		.2byte	0x1
 5755 07fc 51       		.byte	0x51
 5756 07fd 00000000 		.4byte	0
 5757 0801 00000000 		.4byte	0
 5758              	.LLST54:
 5759 0805 00000000 		.4byte	.LVL163
 5760 0809 20000000 		.4byte	.LVL167
 5761 080d 0100     		.2byte	0x1
 5762 080f 50       		.byte	0x50
 5763 0810 20000000 		.4byte	.LVL167
 5764 0814 40000000 		.4byte	.LVL172
 5765 0818 0100     		.2byte	0x1
 5766 081a 55       		.byte	0x55
 5767 081b 40000000 		.4byte	.LVL172
 5768 081f 84000000 		.4byte	.LVL183
 5769 0823 0400     		.2byte	0x4
 5770 0825 F3       		.byte	0xf3
 5771 0826 01       		.uleb128 0x1
 5772 0827 50       		.byte	0x50
 5773 0828 9F       		.byte	0x9f
 5774 0829 84000000 		.4byte	.LVL183
 5775 082d 90000000 		.4byte	.LVL185
 5776 0831 0100     		.2byte	0x1
 5777 0833 55       		.byte	0x55
 5778 0834 90000000 		.4byte	.LVL185
 5779 0838 A8000000 		.4byte	.LFE63
 5780 083c 0400     		.2byte	0x4
 5781 083e F3       		.byte	0xf3
 5782 083f 01       		.uleb128 0x1
 5783 0840 50       		.byte	0x50
 5784 0841 9F       		.byte	0x9f
 5785 0842 00000000 		.4byte	0
 5786 0846 00000000 		.4byte	0
 5787              	.LLST55:
 5788 084a 42000000 		.4byte	.LVL173
 5789 084e 56000000 		.4byte	.LVL174
 5790 0852 0100     		.2byte	0x1
 5791 0854 55       		.byte	0x55
 5792 0855 56000000 		.4byte	.LVL174
 5793 0859 58000000 		.4byte	.LVL175
 5794 085d 0300     		.2byte	0x3
 5795 085f 75       		.byte	0x75
 5796 0860 7F       		.sleb128 -1
 5797 0861 9F       		.byte	0x9f
 5798 0862 58000000 		.4byte	.LVL175
 5799 0866 5C000000 		.4byte	.LVL176
 5800 086a 0300     		.2byte	0x3
 5801 086c 77       		.byte	0x77
 5802 086d 01       		.sleb128 1
 5803 086e 9F       		.byte	0x9f
 5804 086f 62000000 		.4byte	.LVL177
 5805 0873 74000000 		.4byte	.LVL180
 5806 0877 0100     		.2byte	0x1
 5807 0879 55       		.byte	0x55
 5808 087a 74000000 		.4byte	.LVL180
 5809 087e 76000000 		.4byte	.LVL181
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 155


 5810 0882 0300     		.2byte	0x3
 5811 0884 75       		.byte	0x75
 5812 0885 7F       		.sleb128 -1
 5813 0886 9F       		.byte	0x9f
 5814 0887 00000000 		.4byte	0
 5815 088b 00000000 		.4byte	0
 5816              	.LLST56:
 5817 088f 12000000 		.4byte	.LVL164
 5818 0893 5C000000 		.4byte	.LVL176
 5819 0897 0100     		.2byte	0x1
 5820 0899 57       		.byte	0x57
 5821 089a 62000000 		.4byte	.LVL177
 5822 089e 68000000 		.4byte	.LVL179
 5823 08a2 0100     		.2byte	0x1
 5824 08a4 57       		.byte	0x57
 5825 08a5 84000000 		.4byte	.LVL183
 5826 08a9 88000000 		.4byte	.LVL184
 5827 08ad 0100     		.2byte	0x1
 5828 08af 57       		.byte	0x57
 5829 08b0 00000000 		.4byte	0
 5830 08b4 00000000 		.4byte	0
 5831              	.LLST57:
 5832 08b8 62000000 		.4byte	.LVL177
 5833 08bc 84000000 		.4byte	.LVL183
 5834 08c0 0100     		.2byte	0x1
 5835 08c2 54       		.byte	0x54
 5836 08c3 00000000 		.4byte	0
 5837 08c7 00000000 		.4byte	0
 5838              	.LLST58:
 5839 08cb 24000000 		.4byte	.LVL168
 5840 08cf 39000000 		.4byte	.LVL169-1
 5841 08d3 0100     		.2byte	0x1
 5842 08d5 50       		.byte	0x50
 5843 08d6 84000000 		.4byte	.LVL183
 5844 08da 90000000 		.4byte	.LVL185
 5845 08de 0100     		.2byte	0x1
 5846 08e0 50       		.byte	0x50
 5847 08e1 00000000 		.4byte	0
 5848 08e5 00000000 		.4byte	0
 5849              	.LLST59:
 5850 08e9 3E000000 		.4byte	.LVL171
 5851 08ed 7B000000 		.4byte	.LVL182-1
 5852 08f1 0100     		.2byte	0x1
 5853 08f3 50       		.byte	0x50
 5854 08f4 7C000000 		.4byte	.LVL182
 5855 08f8 84000000 		.4byte	.LVL183
 5856 08fc 0100     		.2byte	0x1
 5857 08fe 50       		.byte	0x50
 5858 08ff 84000000 		.4byte	.LVL183
 5859 0903 90000000 		.4byte	.LVL185
 5860 0907 0300     		.2byte	0x3
 5861 0909 09       		.byte	0x9
 5862 090a FF       		.byte	0xff
 5863 090b 9F       		.byte	0x9f
 5864 090c 90000000 		.4byte	.LVL185
 5865 0910 A8000000 		.4byte	.LFE63
 5866 0914 0100     		.2byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 156


 5867 0916 50       		.byte	0x50
 5868 0917 00000000 		.4byte	0
 5869 091b 00000000 		.4byte	0
 5870              	.LLST60:
 5871 091f 16000000 		.4byte	.LVL165
 5872 0923 3C000000 		.4byte	.LVL170
 5873 0927 0100     		.2byte	0x1
 5874 0929 54       		.byte	0x54
 5875 092a 3C000000 		.4byte	.LVL170
 5876 092e 40000000 		.4byte	.LVL172
 5877 0932 0800     		.2byte	0x8
 5878 0934 75       		.byte	0x75
 5879 0935 00       		.sleb128 0
 5880 0936 03       		.byte	0x3
 5881 0937 00000000 		.4byte	.LANCHOR2
 5882 093b 22       		.byte	0x22
 5883 093c 40000000 		.4byte	.LVL172
 5884 0940 84000000 		.4byte	.LVL183
 5885 0944 0900     		.2byte	0x9
 5886 0946 F3       		.byte	0xf3
 5887 0947 01       		.uleb128 0x1
 5888 0948 50       		.byte	0x50
 5889 0949 03       		.byte	0x3
 5890 094a 00000000 		.4byte	.LANCHOR2
 5891 094e 22       		.byte	0x22
 5892 094f 84000000 		.4byte	.LVL183
 5893 0953 90000000 		.4byte	.LVL185
 5894 0957 0100     		.2byte	0x1
 5895 0959 54       		.byte	0x54
 5896 095a 90000000 		.4byte	.LVL185
 5897 095e A8000000 		.4byte	.LFE63
 5898 0962 0900     		.2byte	0x9
 5899 0964 F3       		.byte	0xf3
 5900 0965 01       		.uleb128 0x1
 5901 0966 50       		.byte	0x50
 5902 0967 03       		.byte	0x3
 5903 0968 00000000 		.4byte	.LANCHOR2
 5904 096c 22       		.byte	0x22
 5905 096d 00000000 		.4byte	0
 5906 0971 00000000 		.4byte	0
 5907              	.LLST61:
 5908 0975 1A000000 		.4byte	.LVL166
 5909 0979 66000000 		.4byte	.LVL178
 5910 097d 0100     		.2byte	0x1
 5911 097f 56       		.byte	0x56
 5912 0980 66000000 		.4byte	.LVL178
 5913 0984 84000000 		.4byte	.LVL183
 5914 0988 0900     		.2byte	0x9
 5915 098a F3       		.byte	0xf3
 5916 098b 01       		.uleb128 0x1
 5917 098c 50       		.byte	0x50
 5918 098d 03       		.byte	0x3
 5919 098e 08000000 		.4byte	.LANCHOR2+8
 5920 0992 22       		.byte	0x22
 5921 0993 84000000 		.4byte	.LVL183
 5922 0997 90000000 		.4byte	.LVL185
 5923 099b 0100     		.2byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 157


 5924 099d 56       		.byte	0x56
 5925 099e 90000000 		.4byte	.LVL185
 5926 09a2 A8000000 		.4byte	.LFE63
 5927 09a6 0900     		.2byte	0x9
 5928 09a8 F3       		.byte	0xf3
 5929 09a9 01       		.uleb128 0x1
 5930 09aa 50       		.byte	0x50
 5931 09ab 03       		.byte	0x3
 5932 09ac 08000000 		.4byte	.LANCHOR2+8
 5933 09b0 22       		.byte	0x22
 5934 09b1 00000000 		.4byte	0
 5935 09b5 00000000 		.4byte	0
 5936              	.LLST62:
 5937 09b9 00000000 		.4byte	.LVL186
 5938 09bd 02000000 		.4byte	.LVL187
 5939 09c1 0100     		.2byte	0x1
 5940 09c3 50       		.byte	0x50
 5941 09c4 02000000 		.4byte	.LVL187
 5942 09c8 0C000000 		.4byte	.LFE65
 5943 09cc 0400     		.2byte	0x4
 5944 09ce F3       		.byte	0xf3
 5945 09cf 01       		.uleb128 0x1
 5946 09d0 50       		.byte	0x50
 5947 09d1 9F       		.byte	0x9f
 5948 09d2 00000000 		.4byte	0
 5949 09d6 00000000 		.4byte	0
 5950              	.LLST63:
 5951 09da 00000000 		.4byte	.LVL186
 5952 09de 04000000 		.4byte	.LVL188
 5953 09e2 0100     		.2byte	0x1
 5954 09e4 51       		.byte	0x51
 5955 09e5 04000000 		.4byte	.LVL188
 5956 09e9 0C000000 		.4byte	.LFE65
 5957 09ed 0400     		.2byte	0x4
 5958 09ef F3       		.byte	0xf3
 5959 09f0 01       		.uleb128 0x1
 5960 09f1 51       		.byte	0x51
 5961 09f2 9F       		.byte	0x9f
 5962 09f3 00000000 		.4byte	0
 5963 09f7 00000000 		.4byte	0
 5964              	.LLST64:
 5965 09fb 02000000 		.4byte	.LVL187
 5966 09ff 0A000000 		.4byte	.LVL191
 5967 0a03 0100     		.2byte	0x1
 5968 0a05 50       		.byte	0x50
 5969 0a06 00000000 		.4byte	0
 5970 0a0a 00000000 		.4byte	0
 5971              	.LLST65:
 5972 0a0e 00000000 		.4byte	.LVL192
 5973 0a12 2E000000 		.4byte	.LVL195
 5974 0a16 0100     		.2byte	0x1
 5975 0a18 50       		.byte	0x50
 5976 0a19 2E000000 		.4byte	.LVL195
 5977 0a1d E2000000 		.4byte	.LVL213
 5978 0a21 0100     		.2byte	0x1
 5979 0a23 54       		.byte	0x54
 5980 0a24 E2000000 		.4byte	.LVL213
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 158


 5981 0a28 EA000000 		.4byte	.LVL214
 5982 0a2c 0400     		.2byte	0x4
 5983 0a2e F3       		.byte	0xf3
 5984 0a2f 01       		.uleb128 0x1
 5985 0a30 50       		.byte	0x50
 5986 0a31 9F       		.byte	0x9f
 5987 0a32 EA000000 		.4byte	.LVL214
 5988 0a36 EE000000 		.4byte	.LVL216
 5989 0a3a 0100     		.2byte	0x1
 5990 0a3c 54       		.byte	0x54
 5991 0a3d EE000000 		.4byte	.LVL216
 5992 0a41 F4000000 		.4byte	.LVL217
 5993 0a45 0400     		.2byte	0x4
 5994 0a47 F3       		.byte	0xf3
 5995 0a48 01       		.uleb128 0x1
 5996 0a49 50       		.byte	0x50
 5997 0a4a 9F       		.byte	0x9f
 5998 0a4b F4000000 		.4byte	.LVL217
 5999 0a4f F8000000 		.4byte	.LVL218
 6000 0a53 0100     		.2byte	0x1
 6001 0a55 54       		.byte	0x54
 6002 0a56 F8000000 		.4byte	.LVL218
 6003 0a5a 2C010000 		.4byte	.LFE37
 6004 0a5e 0400     		.2byte	0x4
 6005 0a60 F3       		.byte	0xf3
 6006 0a61 01       		.uleb128 0x1
 6007 0a62 50       		.byte	0x50
 6008 0a63 9F       		.byte	0x9f
 6009 0a64 00000000 		.4byte	0
 6010 0a68 00000000 		.4byte	0
 6011              	.LLST66:
 6012 0a6c B0000000 		.4byte	.LVL205
 6013 0a70 B6000000 		.4byte	.LVL206
 6014 0a74 0100     		.2byte	0x1
 6015 0a76 53       		.byte	0x53
 6016 0a77 B6000000 		.4byte	.LVL206
 6017 0a7b BA000000 		.4byte	.LVL207
 6018 0a7f 0100     		.2byte	0x1
 6019 0a81 5C       		.byte	0x5c
 6020 0a82 BA000000 		.4byte	.LVL207
 6021 0a86 BC000000 		.4byte	.LVL208
 6022 0a8a 0100     		.2byte	0x1
 6023 0a8c 53       		.byte	0x53
 6024 0a8d BC000000 		.4byte	.LVL208
 6025 0a91 CC000000 		.4byte	.LVL210
 6026 0a95 0100     		.2byte	0x1
 6027 0a97 57       		.byte	0x57
 6028 0a98 00000000 		.4byte	0
 6029 0a9c 00000000 		.4byte	0
 6030              	.LLST67:
 6031 0aa0 56000000 		.4byte	.LVL200
 6032 0aa4 5C000000 		.4byte	.LVL201
 6033 0aa8 0200     		.2byte	0x2
 6034 0aaa 31       		.byte	0x31
 6035 0aab 9F       		.byte	0x9f
 6036 0aac 60000000 		.4byte	.LVL202
 6037 0ab0 64000000 		.4byte	.LVL203
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 159


 6038 0ab4 0200     		.2byte	0x2
 6039 0ab6 30       		.byte	0x30
 6040 0ab7 9F       		.byte	0x9f
 6041 0ab8 64000000 		.4byte	.LVL203
 6042 0abc DA000000 		.4byte	.LVL211
 6043 0ac0 0100     		.2byte	0x1
 6044 0ac2 58       		.byte	0x58
 6045 0ac3 DA000000 		.4byte	.LVL211
 6046 0ac7 E0000000 		.4byte	.LVL212
 6047 0acb 0100     		.2byte	0x1
 6048 0acd 53       		.byte	0x53
 6049 0ace E0000000 		.4byte	.LVL212
 6050 0ad2 EA000000 		.4byte	.LVL214
 6051 0ad6 0100     		.2byte	0x1
 6052 0ad8 58       		.byte	0x58
 6053 0ad9 EA000000 		.4byte	.LVL214
 6054 0add EC000000 		.4byte	.LVL215
 6055 0ae1 0100     		.2byte	0x1
 6056 0ae3 53       		.byte	0x53
 6057 0ae4 EC000000 		.4byte	.LVL215
 6058 0ae8 00010000 		.4byte	.LVL220
 6059 0aec 0100     		.2byte	0x1
 6060 0aee 58       		.byte	0x58
 6061 0aef 00000000 		.4byte	0
 6062 0af3 00000000 		.4byte	0
 6063              	.LLST68:
 6064 0af7 56000000 		.4byte	.LVL200
 6065 0afb 5C000000 		.4byte	.LVL201
 6066 0aff 0100     		.2byte	0x1
 6067 0b01 55       		.byte	0x55
 6068 0b02 60000000 		.4byte	.LVL202
 6069 0b06 00010000 		.4byte	.LVL219
 6070 0b0a 0100     		.2byte	0x1
 6071 0b0c 55       		.byte	0x55
 6072 0b0d 00000000 		.4byte	0
 6073 0b11 00000000 		.4byte	0
 6074              	.LLST69:
 6075 0b15 1A000000 		.4byte	.LVL194
 6076 0b19 34000000 		.4byte	.LVL197
 6077 0b1d 0100     		.2byte	0x1
 6078 0b1f 57       		.byte	0x57
 6079 0b20 34000000 		.4byte	.LVL197
 6080 0b24 38000000 		.4byte	.LVL198
 6081 0b28 0100     		.2byte	0x1
 6082 0b2a 50       		.byte	0x50
 6083 0b2b 38000000 		.4byte	.LVL198
 6084 0b2f BC000000 		.4byte	.LVL208
 6085 0b33 0100     		.2byte	0x1
 6086 0b35 57       		.byte	0x57
 6087 0b36 00000000 		.4byte	0
 6088 0b3a 00000000 		.4byte	0
 6089              	.LLST70:
 6090 0b3e 00000000 		.4byte	.LVL221
 6091 0b42 07000000 		.4byte	.LVL222-1
 6092 0b46 0100     		.2byte	0x1
 6093 0b48 50       		.byte	0x50
 6094 0b49 07000000 		.4byte	.LVL222-1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 160


 6095 0b4d 0E000000 		.4byte	.LVL224
 6096 0b51 0100     		.2byte	0x1
 6097 0b53 54       		.byte	0x54
 6098 0b54 0E000000 		.4byte	.LVL224
 6099 0b58 10000000 		.4byte	.LFE38
 6100 0b5c 0400     		.2byte	0x4
 6101 0b5e F3       		.byte	0xf3
 6102 0b5f 01       		.uleb128 0x1
 6103 0b60 50       		.byte	0x50
 6104 0b61 9F       		.byte	0x9f
 6105 0b62 00000000 		.4byte	0
 6106 0b66 00000000 		.4byte	0
 6107              	.LLST71:
 6108 0b6a 02000000 		.4byte	.LVL225
 6109 0b6e 06000000 		.4byte	.LVL226
 6110 0b72 0200     		.2byte	0x2
 6111 0b74 30       		.byte	0x30
 6112 0b75 9F       		.byte	0x9f
 6113 0b76 06000000 		.4byte	.LVL226
 6114 0b7a 1E000000 		.4byte	.LVL231
 6115 0b7e 0100     		.2byte	0x1
 6116 0b80 54       		.byte	0x54
 6117 0b81 00000000 		.4byte	0
 6118 0b85 00000000 		.4byte	0
 6119              	.LLST72:
 6120 0b89 0E000000 		.4byte	.LVL227
 6121 0b8d 14000000 		.4byte	.LVL228
 6122 0b91 0100     		.2byte	0x1
 6123 0b93 50       		.byte	0x50
 6124 0b94 00000000 		.4byte	0
 6125 0b98 00000000 		.4byte	0
 6126              	.LLST73:
 6127 0b9c 00000000 		.4byte	.LVL232
 6128 0ba0 0E000000 		.4byte	.LVL236
 6129 0ba4 0100     		.2byte	0x1
 6130 0ba6 50       		.byte	0x50
 6131 0ba7 0E000000 		.4byte	.LVL236
 6132 0bab 30000000 		.4byte	.LFE40
 6133 0baf 0400     		.2byte	0x4
 6134 0bb1 F3       		.byte	0xf3
 6135 0bb2 01       		.uleb128 0x1
 6136 0bb3 50       		.byte	0x50
 6137 0bb4 9F       		.byte	0x9f
 6138 0bb5 00000000 		.4byte	0
 6139 0bb9 00000000 		.4byte	0
 6140              	.LLST74:
 6141 0bbd 08000000 		.4byte	.LVL233
 6142 0bc1 0C000000 		.4byte	.LVL235
 6143 0bc5 0100     		.2byte	0x1
 6144 0bc7 55       		.byte	0x55
 6145 0bc8 0C000000 		.4byte	.LVL235
 6146 0bcc 0E000000 		.4byte	.LVL236
 6147 0bd0 0800     		.2byte	0x8
 6148 0bd2 72       		.byte	0x72
 6149 0bd3 08       		.sleb128 8
 6150 0bd4 94       		.byte	0x94
 6151 0bd5 01       		.byte	0x1
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 161


 6152 0bd6 08       		.byte	0x8
 6153 0bd7 FF       		.byte	0xff
 6154 0bd8 1A       		.byte	0x1a
 6155 0bd9 9F       		.byte	0x9f
 6156 0bda 0E000000 		.4byte	.LVL236
 6157 0bde 30000000 		.4byte	.LFE40
 6158 0be2 0F00     		.2byte	0xf
 6159 0be4 F3       		.byte	0xf3
 6160 0be5 01       		.uleb128 0x1
 6161 0be6 50       		.byte	0x50
 6162 0be7 03       		.byte	0x3
 6163 0be8 08000000 		.4byte	.LANCHOR2+8
 6164 0bec 22       		.byte	0x22
 6165 0bed 94       		.byte	0x94
 6166 0bee 01       		.byte	0x1
 6167 0bef 08       		.byte	0x8
 6168 0bf0 FF       		.byte	0xff
 6169 0bf1 1A       		.byte	0x1a
 6170 0bf2 9F       		.byte	0x9f
 6171 0bf3 00000000 		.4byte	0
 6172 0bf7 00000000 		.4byte	0
 6173              	.LLST75:
 6174 0bfb 0A000000 		.4byte	.LVL234
 6175 0bff 0E000000 		.4byte	.LVL236
 6176 0c03 0100     		.2byte	0x1
 6177 0c05 54       		.byte	0x54
 6178 0c06 0E000000 		.4byte	.LVL236
 6179 0c0a 30000000 		.4byte	.LFE40
 6180 0c0e 0F00     		.2byte	0xf
 6181 0c10 F3       		.byte	0xf3
 6182 0c11 01       		.uleb128 0x1
 6183 0c12 50       		.byte	0x50
 6184 0c13 03       		.byte	0x3
 6185 0c14 00000000 		.4byte	.LANCHOR2
 6186 0c18 22       		.byte	0x22
 6187 0c19 94       		.byte	0x94
 6188 0c1a 01       		.byte	0x1
 6189 0c1b 08       		.byte	0x8
 6190 0c1c FF       		.byte	0xff
 6191 0c1d 1A       		.byte	0x1a
 6192 0c1e 9F       		.byte	0x9f
 6193 0c1f 00000000 		.4byte	0
 6194 0c23 00000000 		.4byte	0
 6195              	.LLST76:
 6196 0c27 0C000000 		.4byte	.LVL235
 6197 0c2b 26000000 		.4byte	.LVL242
 6198 0c2f 0100     		.2byte	0x1
 6199 0c31 55       		.byte	0x55
 6200 0c32 26000000 		.4byte	.LVL242
 6201 0c36 30000000 		.4byte	.LFE40
 6202 0c3a 1E00     		.2byte	0x1e
 6203 0c3c F3       		.byte	0xf3
 6204 0c3d 01       		.uleb128 0x1
 6205 0c3e 50       		.byte	0x50
 6206 0c3f 03       		.byte	0x3
 6207 0c40 08000000 		.4byte	.LANCHOR2+8
 6208 0c44 22       		.byte	0x22
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 162


 6209 0c45 94       		.byte	0x94
 6210 0c46 01       		.byte	0x1
 6211 0c47 08       		.byte	0x8
 6212 0c48 FF       		.byte	0xff
 6213 0c49 1A       		.byte	0x1a
 6214 0c4a F3       		.byte	0xf3
 6215 0c4b 01       		.uleb128 0x1
 6216 0c4c 50       		.byte	0x50
 6217 0c4d 03       		.byte	0x3
 6218 0c4e 00000000 		.4byte	.LANCHOR2
 6219 0c52 22       		.byte	0x22
 6220 0c53 94       		.byte	0x94
 6221 0c54 01       		.byte	0x1
 6222 0c55 08       		.byte	0x8
 6223 0c56 FF       		.byte	0xff
 6224 0c57 1A       		.byte	0x1a
 6225 0c58 22       		.byte	0x22
 6226 0c59 9F       		.byte	0x9f
 6227 0c5a 00000000 		.4byte	0
 6228 0c5e 00000000 		.4byte	0
 6229              	.LLST77:
 6230 0c62 0C000000 		.4byte	.LVL235
 6231 0c66 26000000 		.4byte	.LVL241
 6232 0c6a 0100     		.2byte	0x1
 6233 0c6c 54       		.byte	0x54
 6234 0c6d 00000000 		.4byte	0
 6235 0c71 00000000 		.4byte	0
 6236              	.LLST78:
 6237 0c75 16000000 		.4byte	.LVL237
 6238 0c79 1C000000 		.4byte	.LVL238
 6239 0c7d 0100     		.2byte	0x1
 6240 0c7f 50       		.byte	0x50
 6241 0c80 00000000 		.4byte	0
 6242 0c84 00000000 		.4byte	0
 6243              	.LLST79:
 6244 0c88 00000000 		.4byte	.LVL243
 6245 0c8c 04000000 		.4byte	.LVL244
 6246 0c90 0100     		.2byte	0x1
 6247 0c92 50       		.byte	0x50
 6248 0c93 04000000 		.4byte	.LVL244
 6249 0c97 0C000000 		.4byte	.LFE66
 6250 0c9b 0400     		.2byte	0x4
 6251 0c9d F3       		.byte	0xf3
 6252 0c9e 01       		.uleb128 0x1
 6253 0c9f 50       		.byte	0x50
 6254 0ca0 9F       		.byte	0x9f
 6255 0ca1 00000000 		.4byte	0
 6256 0ca5 00000000 		.4byte	0
 6257              	.LLST80:
 6258 0ca9 00000000 		.4byte	.LVL245
 6259 0cad 04000000 		.4byte	.LVL246
 6260 0cb1 0100     		.2byte	0x1
 6261 0cb3 50       		.byte	0x50
 6262 0cb4 04000000 		.4byte	.LVL246
 6263 0cb8 0C000000 		.4byte	.LFE67
 6264 0cbc 0400     		.2byte	0x4
 6265 0cbe F3       		.byte	0xf3
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 163


 6266 0cbf 01       		.uleb128 0x1
 6267 0cc0 50       		.byte	0x50
 6268 0cc1 9F       		.byte	0x9f
 6269 0cc2 00000000 		.4byte	0
 6270 0cc6 00000000 		.4byte	0
 6271              	.LLST81:
 6272 0cca 00000000 		.4byte	.LVL247
 6273 0cce 04000000 		.4byte	.LVL248
 6274 0cd2 0100     		.2byte	0x1
 6275 0cd4 50       		.byte	0x50
 6276 0cd5 04000000 		.4byte	.LVL248
 6277 0cd9 0C000000 		.4byte	.LFE68
 6278 0cdd 0400     		.2byte	0x4
 6279 0cdf F3       		.byte	0xf3
 6280 0ce0 01       		.uleb128 0x1
 6281 0ce1 50       		.byte	0x50
 6282 0ce2 9F       		.byte	0x9f
 6283 0ce3 00000000 		.4byte	0
 6284 0ce7 00000000 		.4byte	0
 6285              		.section	.debug_aranges,"",%progbits
 6286 0000 44010000 		.4byte	0x144
 6287 0004 0200     		.2byte	0x2
 6288 0006 00000000 		.4byte	.Ldebug_info0
 6289 000a 04       		.byte	0x4
 6290 000b 00       		.byte	0
 6291 000c 0000     		.2byte	0
 6292 000e 0000     		.2byte	0
 6293 0010 00000000 		.4byte	.LFB33
 6294 0014 48000000 		.4byte	.LFE33-.LFB33
 6295 0018 00000000 		.4byte	.LFB34
 6296 001c 18000000 		.4byte	.LFE34-.LFB34
 6297 0020 00000000 		.4byte	.LFB35
 6298 0024 14000000 		.4byte	.LFE35-.LFB35
 6299 0028 00000000 		.4byte	.LFB36
 6300 002c 30000000 		.4byte	.LFE36-.LFB36
 6301 0030 00000000 		.4byte	.LFB41
 6302 0034 0C000000 		.4byte	.LFE41-.LFB41
 6303 0038 00000000 		.4byte	.LFB42
 6304 003c 0C000000 		.4byte	.LFE42-.LFB42
 6305 0040 00000000 		.4byte	.LFB43
 6306 0044 10000000 		.4byte	.LFE43-.LFB43
 6307 0048 00000000 		.4byte	.LFB44
 6308 004c 10000000 		.4byte	.LFE44-.LFB44
 6309 0050 00000000 		.4byte	.LFB45
 6310 0054 0C000000 		.4byte	.LFE45-.LFB45
 6311 0058 00000000 		.4byte	.LFB46
 6312 005c 0C000000 		.4byte	.LFE46-.LFB46
 6313 0060 00000000 		.4byte	.LFB47
 6314 0064 0C000000 		.4byte	.LFE47-.LFB47
 6315 0068 00000000 		.4byte	.LFB48
 6316 006c 0C000000 		.4byte	.LFE48-.LFB48
 6317 0070 00000000 		.4byte	.LFB49
 6318 0074 0C000000 		.4byte	.LFE49-.LFB49
 6319 0078 00000000 		.4byte	.LFB50
 6320 007c 0C000000 		.4byte	.LFE50-.LFB50
 6321 0080 00000000 		.4byte	.LFB51
 6322 0084 0C000000 		.4byte	.LFE51-.LFB51
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 164


 6323 0088 00000000 		.4byte	.LFB52
 6324 008c 0C000000 		.4byte	.LFE52-.LFB52
 6325 0090 00000000 		.4byte	.LFB53
 6326 0094 0C000000 		.4byte	.LFE53-.LFB53
 6327 0098 00000000 		.4byte	.LFB54
 6328 009c 0C000000 		.4byte	.LFE54-.LFB54
 6329 00a0 00000000 		.4byte	.LFB55
 6330 00a4 C0000000 		.4byte	.LFE55-.LFB55
 6331 00a8 00000000 		.4byte	.LFB56
 6332 00ac 28000000 		.4byte	.LFE56-.LFB56
 6333 00b0 00000000 		.4byte	.LFB57
 6334 00b4 1E000000 		.4byte	.LFE57-.LFB57
 6335 00b8 00000000 		.4byte	.LFB58
 6336 00bc 2C000000 		.4byte	.LFE58-.LFB58
 6337 00c0 00000000 		.4byte	.LFB59
 6338 00c4 2C000000 		.4byte	.LFE59-.LFB59
 6339 00c8 00000000 		.4byte	.LFB60
 6340 00cc 2C000000 		.4byte	.LFE60-.LFB60
 6341 00d0 00000000 		.4byte	.LFB61
 6342 00d4 E4000000 		.4byte	.LFE61-.LFB61
 6343 00d8 00000000 		.4byte	.LFB62
 6344 00dc 4C000000 		.4byte	.LFE62-.LFB62
 6345 00e0 00000000 		.4byte	.LFB64
 6346 00e4 1C000000 		.4byte	.LFE64-.LFB64
 6347 00e8 00000000 		.4byte	.LFB63
 6348 00ec A8000000 		.4byte	.LFE63-.LFB63
 6349 00f0 00000000 		.4byte	.LFB65
 6350 00f4 0C000000 		.4byte	.LFE65-.LFB65
 6351 00f8 00000000 		.4byte	.LFB37
 6352 00fc 2C010000 		.4byte	.LFE37-.LFB37
 6353 0100 00000000 		.4byte	.LFB38
 6354 0104 10000000 		.4byte	.LFE38-.LFB38
 6355 0108 00000000 		.4byte	.LFB39
 6356 010c 24000000 		.4byte	.LFE39-.LFB39
 6357 0110 00000000 		.4byte	.LFB40
 6358 0114 30000000 		.4byte	.LFE40-.LFB40
 6359 0118 00000000 		.4byte	.LFB66
 6360 011c 0C000000 		.4byte	.LFE66-.LFB66
 6361 0120 00000000 		.4byte	.LFB67
 6362 0124 0C000000 		.4byte	.LFE67-.LFB67
 6363 0128 00000000 		.4byte	.LFB68
 6364 012c 0C000000 		.4byte	.LFE68-.LFB68
 6365 0130 00000000 		.4byte	.LFB69
 6366 0134 10000000 		.4byte	.LFE69-.LFB69
 6367 0138 00000000 		.4byte	.LFB70
 6368 013c 10000000 		.4byte	.LFE70-.LFB70
 6369 0140 00000000 		.4byte	0
 6370 0144 00000000 		.4byte	0
 6371              		.section	.debug_ranges,"",%progbits
 6372              	.Ldebug_ranges0:
 6373 0000 00000000 		.4byte	.LFB33
 6374 0004 48000000 		.4byte	.LFE33
 6375 0008 00000000 		.4byte	.LFB34
 6376 000c 18000000 		.4byte	.LFE34
 6377 0010 00000000 		.4byte	.LFB35
 6378 0014 14000000 		.4byte	.LFE35
 6379 0018 00000000 		.4byte	.LFB36
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 165


 6380 001c 30000000 		.4byte	.LFE36
 6381 0020 00000000 		.4byte	.LFB41
 6382 0024 0C000000 		.4byte	.LFE41
 6383 0028 00000000 		.4byte	.LFB42
 6384 002c 0C000000 		.4byte	.LFE42
 6385 0030 00000000 		.4byte	.LFB43
 6386 0034 10000000 		.4byte	.LFE43
 6387 0038 00000000 		.4byte	.LFB44
 6388 003c 10000000 		.4byte	.LFE44
 6389 0040 00000000 		.4byte	.LFB45
 6390 0044 0C000000 		.4byte	.LFE45
 6391 0048 00000000 		.4byte	.LFB46
 6392 004c 0C000000 		.4byte	.LFE46
 6393 0050 00000000 		.4byte	.LFB47
 6394 0054 0C000000 		.4byte	.LFE47
 6395 0058 00000000 		.4byte	.LFB48
 6396 005c 0C000000 		.4byte	.LFE48
 6397 0060 00000000 		.4byte	.LFB49
 6398 0064 0C000000 		.4byte	.LFE49
 6399 0068 00000000 		.4byte	.LFB50
 6400 006c 0C000000 		.4byte	.LFE50
 6401 0070 00000000 		.4byte	.LFB51
 6402 0074 0C000000 		.4byte	.LFE51
 6403 0078 00000000 		.4byte	.LFB52
 6404 007c 0C000000 		.4byte	.LFE52
 6405 0080 00000000 		.4byte	.LFB53
 6406 0084 0C000000 		.4byte	.LFE53
 6407 0088 00000000 		.4byte	.LFB54
 6408 008c 0C000000 		.4byte	.LFE54
 6409 0090 00000000 		.4byte	.LFB55
 6410 0094 C0000000 		.4byte	.LFE55
 6411 0098 00000000 		.4byte	.LFB56
 6412 009c 28000000 		.4byte	.LFE56
 6413 00a0 00000000 		.4byte	.LFB57
 6414 00a4 1E000000 		.4byte	.LFE57
 6415 00a8 00000000 		.4byte	.LFB58
 6416 00ac 2C000000 		.4byte	.LFE58
 6417 00b0 00000000 		.4byte	.LFB59
 6418 00b4 2C000000 		.4byte	.LFE59
 6419 00b8 00000000 		.4byte	.LFB60
 6420 00bc 2C000000 		.4byte	.LFE60
 6421 00c0 00000000 		.4byte	.LFB61
 6422 00c4 E4000000 		.4byte	.LFE61
 6423 00c8 00000000 		.4byte	.LFB62
 6424 00cc 4C000000 		.4byte	.LFE62
 6425 00d0 00000000 		.4byte	.LFB64
 6426 00d4 1C000000 		.4byte	.LFE64
 6427 00d8 00000000 		.4byte	.LFB63
 6428 00dc A8000000 		.4byte	.LFE63
 6429 00e0 00000000 		.4byte	.LFB65
 6430 00e4 0C000000 		.4byte	.LFE65
 6431 00e8 00000000 		.4byte	.LFB37
 6432 00ec 2C010000 		.4byte	.LFE37
 6433 00f0 00000000 		.4byte	.LFB38
 6434 00f4 10000000 		.4byte	.LFE38
 6435 00f8 00000000 		.4byte	.LFB39
 6436 00fc 24000000 		.4byte	.LFE39
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 166


 6437 0100 00000000 		.4byte	.LFB40
 6438 0104 30000000 		.4byte	.LFE40
 6439 0108 00000000 		.4byte	.LFB66
 6440 010c 0C000000 		.4byte	.LFE66
 6441 0110 00000000 		.4byte	.LFB67
 6442 0114 0C000000 		.4byte	.LFE67
 6443 0118 00000000 		.4byte	.LFB68
 6444 011c 0C000000 		.4byte	.LFE68
 6445 0120 00000000 		.4byte	.LFB69
 6446 0124 10000000 		.4byte	.LFE69
 6447 0128 00000000 		.4byte	.LFB70
 6448 012c 10000000 		.4byte	.LFE70
 6449 0130 00000000 		.4byte	0
 6450 0134 00000000 		.4byte	0
 6451              		.section	.debug_line,"",%progbits
 6452              	.Ldebug_line0:
 6453 0000 83040000 		.section	.debug_str,"MS",%progbits,1
 6453      02006A00 
 6453      00000201 
 6453      FB0E0D00 
 6453      01010101 
 6454              	.LASF130:
 6455 0000 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 6455      656E7365 
 6455      5F73656E 
 6455      736F7242 
 6455      6173656C 
 6456              	.LASF105:
 6457 001b 43617053 		.ascii	"CapSense_IIR4Filter\000"
 6457      656E7365 
 6457      5F494952 
 6457      3446696C 
 6457      74657200 
 6458              	.LASF122:
 6459 002f 43617053 		.ascii	"CapSense_debounceCounter\000"
 6459      656E7365 
 6459      5F646562 
 6459      6F756E63 
 6459      65436F75 
 6460              	.LASF33:
 6461 0048 7363616E 		.ascii	"scanSpeedTbl\000"
 6461      53706565 
 6461      6454626C 
 6461      00
 6462              	.LASF133:
 6463 0055 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 6463      656E7365 
 6463      5F6C6F77 
 6463      42617365 
 6463      6C696E65 
 6464              	.LASF106:
 6465 0072 43617053 		.ascii	"CapSense_UpdateBaselineNoThreshold\000"
 6465      656E7365 
 6465      5F557064 
 6465      61746542 
 6465      6173656C 
 6466              	.LASF36:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 167


 6467 0095 6E756D62 		.ascii	"numberOfSensors\000"
 6467      65724F66 
 6467      53656E73 
 6467      6F727300 
 6468              	.LASF40:
 6469 00a5 70747247 		.ascii	"ptrGetBitValue\000"
 6469      65744269 
 6469      7456616C 
 6469      756500
 6470              	.LASF84:
 6471 00b4 43617053 		.ascii	"CapSense_DisableWidget\000"
 6471      656E7365 
 6471      5F446973 
 6471      61626C65 
 6471      57696467 
 6472              	.LASF104:
 6473 00cb 74656D70 		.ascii	"tempPos\000"
 6473      506F7300 
 6474              	.LASF112:
 6475 00d3 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 6475      656E7365 
 6475      5F557064 
 6475      61746545 
 6475      6E61626C 
 6476              	.LASF101:
 6477 00f3 706F7349 		.ascii	"posIndex\000"
 6477      6E646578 
 6477      00
 6478              	.LASF143:
 6479 00fc 43617053 		.ascii	"CapSense_config\000"
 6479      656E7365 
 6479      5F636F6E 
 6479      66696700 
 6480              	.LASF56:
 6481 010c 69735365 		.ascii	"isSensorEnabled\000"
 6481      6E736F72 
 6481      456E6162 
 6481      6C656400 
 6482              	.LASF80:
 6483 011c 6E756D4F 		.ascii	"numOfSensors\000"
 6483      6653656E 
 6483      736F7273 
 6483      00
 6484              	.LASF42:
 6485 0129 43617053 		.ascii	"CapSense_CONFIG_TYPE_POINTERS_P4_v2_60\000"
 6485      656E7365 
 6485      5F434F4E 
 6485      4649475F 
 6485      54595045 
 6486              	.LASF8:
 6487 0150 756E7369 		.ascii	"unsigned int\000"
 6487      676E6564 
 6487      20696E74 
 6487      00
 6488              	.LASF45:
 6489 015d 746F7461 		.ascii	"totalSensorsNum\000"
 6489      6C53656E 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 168


 6489      736F7273 
 6489      4E756D00 
 6490              	.LASF12:
 6491 016d 696E7431 		.ascii	"int16\000"
 6491      3600
 6492              	.LASF30:
 6493 0173 73616D70 		.ascii	"sampleMaxTbl\000"
 6493      6C654D61 
 6493      7854626C 
 6493      00
 6494              	.LASF55:
 6495 0180 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 6495      656E7365 
 6495      5F496E69 
 6495      7469616C 
 6495      697A6545 
 6496              	.LASF125:
 6497 01a4 43617053 		.ascii	"CapSense_posFiltersData\000"
 6497      656E7365 
 6497      5F706F73 
 6497      46696C74 
 6497      65727344 
 6498              	.LASF28:
 6499 01bc 7369676E 		.ascii	"signRegisterTbl\000"
 6499      52656769 
 6499      73746572 
 6499      54626C00 
 6500              	.LASF139:
 6501 01cc 43617053 		.ascii	"CapSense_debounce\000"
 6501      656E7365 
 6501      5F646562 
 6501      6F756E63 
 6501      6500
 6502              	.LASF51:
 6503 01de 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 6503      656E7365 
 6503      5F496E69 
 6503      7469616C 
 6503      697A6553 
 6504              	.LASF146:
 6505 0200 43617053 		.ascii	"CapSense_IsBusy\000"
 6505      656E7365 
 6505      5F497342 
 6505      75737900 
 6506              	.LASF57:
 6507 0210 43617053 		.ascii	"CapSense_SetBaselineData\000"
 6507      656E7365 
 6507      5F536574 
 6507      42617365 
 6507      6C696E65 
 6508              	.LASF35:
 6509 0229 72617744 		.ascii	"rawDataIndex\000"
 6509      61746149 
 6509      6E646578 
 6509      00
 6510              	.LASF44:
 6511 0236 746F7461 		.ascii	"totalWidgetsNum\000"
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 169


 6511      6C576964 
 6511      67657473 
 6511      4E756D00 
 6512              	.LASF61:
 6513 0246 43617053 		.ascii	"CapSense_SetDiffCountData\000"
 6513      656E7365 
 6513      5F536574 
 6513      44696666 
 6513      436F756E 
 6514              	.LASF131:
 6515 0260 43617053 		.ascii	"CapSense_sensorSignal\000"
 6515      656E7365 
 6515      5F73656E 
 6515      736F7253 
 6515      69676E61 
 6516              	.LASF140:
 6517 0276 43617053 		.ascii	"CapSense_rawDataIndex\000"
 6517      656E7365 
 6517      5F726177 
 6517      44617461 
 6517      496E6465 
 6518              	.LASF68:
 6519 028c 43617053 		.ascii	"CapSense_SetNoiseThreshold\000"
 6519      656E7365 
 6519      5F536574 
 6519      4E6F6973 
 6519      65546872 
 6520              	.LASF113:
 6521 02a7 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 6521      656E7365 
 6521      5F557064 
 6521      61746557 
 6521      69646765 
 6522              	.LASF138:
 6523 02c5 43617053 		.ascii	"CapSense_hysteresis\000"
 6523      656E7365 
 6523      5F687973 
 6523      74657265 
 6523      73697300 
 6524              	.LASF14:
 6525 02d9 666C6F61 		.ascii	"float\000"
 6525      7400
 6526              	.LASF13:
 6527 02df 696E7433 		.ascii	"int32\000"
 6527      3200
 6528              	.LASF87:
 6529 02e5 636F756E 		.ascii	"count\000"
 6529      7400
 6530              	.LASF25:
 6531 02eb 7265736F 		.ascii	"resolutionsTbl\000"
 6531      6C757469 
 6531      6F6E7354 
 6531      626C00
 6532              	.LASF103:
 6533 02fa 706F7346 		.ascii	"posFiltersMask\000"
 6533      696C7465 
 6533      72734D61 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 170


 6533      736B00
 6534              	.LASF64:
 6535 0309 43617053 		.ascii	"CapSense_GetNoiseThreshold\000"
 6535      656E7365 
 6535      5F476574 
 6535      4E6F6973 
 6535      65546872 
 6536              	.LASF27:
 6537 0324 72756E6E 		.ascii	"runningDifferenceTbl\000"
 6537      696E6744 
 6537      69666665 
 6537      72656E63 
 6537      6554626C 
 6538              	.LASF7:
 6539 0339 6C6F6E67 		.ascii	"long long unsigned int\000"
 6539      206C6F6E 
 6539      6720756E 
 6539      7369676E 
 6539      65642069 
 6540              	.LASF127:
 6541 0350 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 6541      656E7365 
 6541      5F73656E 
 6541      736F7245 
 6541      6E61626C 
 6542              	.LASF54:
 6543 036a 77696467 		.ascii	"widget\000"
 6543      657400
 6544              	.LASF124:
 6545 0371 43617053 		.ascii	"CapSense_posFiltersMask\000"
 6545      656E7365 
 6545      5F706F73 
 6545      46696C74 
 6545      6572734D 
 6546              	.LASF135:
 6547 0389 43617053 		.ascii	"CapSense_fingerThreshold\000"
 6547      656E7365 
 6547      5F66696E 
 6547      67657254 
 6547      68726573 
 6548              	.LASF49:
 6549 03a2 43617053 		.ascii	"CapSense_CONFIG_TYPE_P4_v2_60\000"
 6549      656E7365 
 6549      5F434F4E 
 6549      4649475F 
 6549      54595045 
 6550              	.LASF128:
 6551 03c0 43617053 		.ascii	"CapSense_widgetNumber\000"
 6551      656E7365 
 6551      5F776964 
 6551      6765744E 
 6551      756D6265 
 6552              	.LASF67:
 6553 03d6 43617053 		.ascii	"CapSense_SetFingerThreshold\000"
 6553      656E7365 
 6553      5F536574 
 6553      46696E67 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 171


 6553      65725468 
 6554              	.LASF121:
 6555 03f2 43617053 		.ascii	"CapSense_DisableRawDataFilters\000"
 6555      656E7365 
 6555      5F446973 
 6555      61626C65 
 6555      52617744 
 6556              	.LASF62:
 6557 0411 76616C75 		.ascii	"value\000"
 6557      6500
 6558              	.LASF65:
 6559 0417 43617053 		.ascii	"CapSense_GetFingerHysteresis\000"
 6559      656E7365 
 6559      5F476574 
 6559      46696E67 
 6559      65724879 
 6560              	.LASF152:
 6561 0434 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6561      43313120 
 6561      352E342E 
 6561      31203230 
 6561      31363036 
 6562 0467 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 6562      20726576 
 6562      6973696F 
 6562      6E203233 
 6562      37373135 
 6563 049a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6563      66756E63 
 6563      74696F6E 
 6563      2D736563 
 6563      74696F6E 
 6564              	.LASF60:
 6565 04c2 43617053 		.ascii	"CapSense_GetDiffCountData\000"
 6565      656E7365 
 6565      5F476574 
 6565      44696666 
 6565      436F756E 
 6566              	.LASF108:
 6567 04dc 7369676E 		.ascii	"sign\000"
 6567      00
 6568              	.LASF86:
 6569 04e1 6F666673 		.ascii	"offset\000"
 6569      657400
 6570              	.LASF26:
 6571 04e8 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 6571      65456E76 
 6571      656C6F70 
 6571      6554626C 
 6571      00
 6572              	.LASF107:
 6573 04f9 63616C63 		.ascii	"calc\000"
 6573      00
 6574              	.LASF39:
 6575 04fe 70747252 		.ascii	"ptrReadSensorRaw\000"
 6575      65616453 
 6575      656E736F 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 172


 6575      72526177 
 6575      00
 6576              	.LASF77:
 6577 050f 68797374 		.ascii	"hysteresis\000"
 6577      65726573 
 6577      697300
 6578              	.LASF145:
 6579 051a 43617053 		.ascii	"CapSense_ScanSensor\000"
 6579      656E7365 
 6579      5F536361 
 6579      6E53656E 
 6579      736F7200 
 6580              	.LASF110:
 6581 052e 66696C74 		.ascii	"filteredRawData\000"
 6581      65726564 
 6581      52617744 
 6581      61746100 
 6582              	.LASF114:
 6583 053e 73656E73 		.ascii	"sensorsPerWidget\000"
 6583      6F727350 
 6583      65725769 
 6583      64676574 
 6583      00
 6584              	.LASF154:
 6585 054f 433A5C55 		.ascii	"C:\\Users\\Terence Kim\\Documents\\PSoC Creator\\CY"
 6585      73657273 
 6585      5C546572 
 6585      656E6365 
 6585      204B696D 
 6586 057d 38434B49 		.ascii	"8CKIT_046_USB_Audio01\\Icebreaker.cydsn\000"
 6586      545F3034 
 6586      365F5553 
 6586      425F4175 
 6586      64696F30 
 6587              	.LASF82:
 6588 05a4 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 6588      656E7365 
 6588      5F436865 
 6588      636B4973 
 6588      416E7957 
 6589              	.LASF141:
 6590 05c4 43617053 		.ascii	"CapSense_numberOfSensors\000"
 6590      656E7365 
 6590      5F6E756D 
 6590      6265724F 
 6590      6653656E 
 6591              	.LASF137:
 6592 05dd 43617053 		.ascii	"CapSense_negativeNoiseThreshold\000"
 6592      656E7365 
 6592      5F6E6567 
 6592      61746976 
 6592      654E6F69 
 6593              	.LASF43:
 6594 05fd 746F7461 		.ascii	"totalScanslotsNum\000"
 6594      6C536361 
 6594      6E736C6F 
 6594      74734E75 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 173


 6594      6D00
 6595              	.LASF150:
 6596 060f 4D656173 		.ascii	"MeasureNoiseEnvelope_P4_v2_60\000"
 6596      7572654E 
 6596      6F697365 
 6596      456E7665 
 6596      6C6F7065 
 6597              	.LASF52:
 6598 062d 73656E73 		.ascii	"sensor\000"
 6598      6F7200
 6599              	.LASF46:
 6600 0634 73656E73 		.ascii	"sensetivitySeed\000"
 6600      65746976 
 6600      69747953 
 6600      65656400 
 6601              	.LASF83:
 6602 0644 43617053 		.ascii	"CapSense_EnableWidget\000"
 6602      656E7365 
 6602      5F456E61 
 6602      626C6557 
 6602      69646765 
 6603              	.LASF16:
 6604 065a 63686172 		.ascii	"char\000"
 6604      00
 6605              	.LASF66:
 6606 065f 43617053 		.ascii	"CapSense_GetNegativeNoiseThreshold\000"
 6606      656E7365 
 6606      5F476574 
 6606      4E656761 
 6606      74697665 
 6607              	.LASF34:
 6608 0682 70726573 		.ascii	"prescalerTable\000"
 6608      63616C65 
 6608      72546162 
 6608      6C6500
 6609              	.LASF10:
 6610 0691 75696E74 		.ascii	"uint16\000"
 6610      313600
 6611              	.LASF58:
 6612 0698 64617461 		.ascii	"data\000"
 6612      00
 6613              	.LASF19:
 6614 069d 69646163 		.ascii	"idac1LevelsTbl\000"
 6614      314C6576 
 6614      656C7354 
 6614      626C00
 6615              	.LASF92:
 6616 06ac 7265736F 		.ascii	"resolution\000"
 6616      6C757469 
 6616      6F6E00
 6617              	.LASF79:
 6618 06b7 72617749 		.ascii	"rawIndex\000"
 6618      6E646578 
 6618      00
 6619              	.LASF151:
 6620 06c0 43617053 		.ascii	"CapSense_UpdateThresholds\000"
 6620      656E7365 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 174


 6620      5F557064 
 6620      61746554 
 6620      68726573 
 6621              	.LASF94:
 6622 06da 43617053 		.ascii	"CapSense_centroid\000"
 6622      656E7365 
 6622      5F63656E 
 6622      74726F69 
 6622      6400
 6623              	.LASF147:
 6624 06ec 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 6624      656E7365 
 6624      5F536361 
 6624      6E456E61 
 6624      626C6564 
 6625              	.LASF6:
 6626 0708 6C6F6E67 		.ascii	"long long int\000"
 6626      206C6F6E 
 6626      6720696E 
 6626      7400
 6627              	.LASF117:
 6628 0716 43617053 		.ascii	"CapSense_GetWidgetNumber\000"
 6628      656E7365 
 6628      5F476574 
 6628      57696467 
 6628      65744E75 
 6629              	.LASF74:
 6630 072f 6465626F 		.ascii	"debounce\000"
 6630      756E6365 
 6630      00
 6631              	.LASF38:
 6632 0738 70747250 		.ascii	"ptrPreScan\000"
 6632      72655363 
 6632      616E00
 6633              	.LASF73:
 6634 0743 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 6634      656E7365 
 6634      5F436865 
 6634      636B4973 
 6634      53656E73 
 6635              	.LASF37:
 6636 0760 70747247 		.ascii	"ptrGetRaw\000"
 6636      65745261 
 6636      7700
 6637              	.LASF111:
 6638 076a 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 6638      656E7365 
 6638      5F557064 
 6638      61746553 
 6638      656E736F 
 6639              	.LASF50:
 6640 0788 43617053 		.ascii	"CapSense_BaseInit\000"
 6640      656E7365 
 6640      5F426173 
 6640      65496E69 
 6640      7400
 6641              	.LASF91:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 175


 6642 079a 43617053 		.ascii	"CapSense_CalcCentroid\000"
 6642      656E7365 
 6642      5F43616C 
 6642      6343656E 
 6642      74726F69 
 6643              	.LASF29:
 6644 07b0 73616D70 		.ascii	"sampleMinTbl\000"
 6644      6C654D69 
 6644      6E54626C 
 6644      00
 6645              	.LASF126:
 6646 07bd 43617053 		.ascii	"CapSense_sensorRaw\000"
 6646      656E7365 
 6646      5F73656E 
 6646      736F7252 
 6646      617700
 6647              	.LASF118:
 6648 07d0 43617053 		.ascii	"CapSense_GetLowBaselineReset\000"
 6648      656E7365 
 6648      5F476574 
 6648      4C6F7742 
 6648      6173656C 
 6649              	.LASF70:
 6650 07ed 43617053 		.ascii	"CapSense_SetNegativeNoiseThreshold\000"
 6650      656E7365 
 6650      5F536574 
 6650      4E656761 
 6650      74697665 
 6651              	.LASF11:
 6652 0810 75696E74 		.ascii	"uint32\000"
 6652      333200
 6653              	.LASF102:
 6654 0817 66697273 		.ascii	"firstTimeIndex\000"
 6654      7454696D 
 6654      65496E64 
 6654      657800
 6655              	.LASF90:
 6656 0826 73746172 		.ascii	"startOfSlider\000"
 6656      744F6653 
 6656      6C696465 
 6656      7200
 6657              	.LASF69:
 6658 0834 43617053 		.ascii	"CapSense_SetFingerHysteresis\000"
 6658      656E7365 
 6658      5F536574 
 6658      46696E67 
 6658      65724879 
 6659              	.LASF63:
 6660 0851 43617053 		.ascii	"CapSense_GetFingerThreshold\000"
 6660      656E7365 
 6660      5F476574 
 6660      46696E67 
 6660      65725468 
 6661              	.LASF96:
 6662 086d 6E756D65 		.ascii	"numerator\000"
 6662      7261746F 
 6662      7200
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 176


 6663              	.LASF18:
 6664 0877 6C6F6E67 		.ascii	"long double\000"
 6664      20646F75 
 6664      626C6500 
 6665              	.LASF116:
 6666 0883 6C617374 		.ascii	"lastSensor\000"
 6666      53656E73 
 6666      6F7200
 6667              	.LASF47:
 6668 088e 6866636C 		.ascii	"hfclkFreq_MHz\000"
 6668      6B467265 
 6668      715F4D48 
 6668      7A00
 6669              	.LASF98:
 6670 089c 43617053 		.ascii	"CapSense_GetCentroidPos\000"
 6670      656E7365 
 6670      5F476574 
 6670      43656E74 
 6670      726F6964 
 6671              	.LASF20:
 6672 08b4 69646163 		.ascii	"idac2LevelsTbl\000"
 6672      324C6576 
 6672      656C7354 
 6672      626C00
 6673              	.LASF2:
 6674 08c3 73686F72 		.ascii	"short int\000"
 6674      7420696E 
 6674      7400
 6675              	.LASF4:
 6676 08cd 6C6F6E67 		.ascii	"long int\000"
 6676      20696E74 
 6676      00
 6677              	.LASF115:
 6678 08d6 66697273 		.ascii	"firstSensor\000"
 6678      7453656E 
 6678      736F7200 
 6679              	.LASF89:
 6680 08e2 74656D70 		.ascii	"temp\000"
 6680      00
 6681              	.LASF85:
 6682 08e7 43617053 		.ascii	"CapSense_FindMaximum\000"
 6682      656E7365 
 6682      5F46696E 
 6682      644D6178 
 6682      696D756D 
 6683              	.LASF24:
 6684 08fc 77696467 		.ascii	"widgetNubmersTbl\000"
 6684      65744E75 
 6684      626D6572 
 6684      7354626C 
 6684      00
 6685              	.LASF120:
 6686 090d 43617053 		.ascii	"CapSense_EnableRawDataFilters\000"
 6686      656E7365 
 6686      5F456E61 
 6686      626C6552 
 6686      61774461 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 177


 6687              	.LASF134:
 6688 092b 43617053 		.ascii	"CapSense_lowBaselineReset\000"
 6688      656E7365 
 6688      5F6C6F77 
 6688      42617365 
 6688      6C696E65 
 6689              	.LASF97:
 6690 0945 64656E6F 		.ascii	"denominator\000"
 6690      6D696E61 
 6690      746F7200 
 6691              	.LASF32:
 6692 0951 6B56616C 		.ascii	"kValueTbl\000"
 6692      75655462 
 6692      6C00
 6693              	.LASF129:
 6694 095b 43617053 		.ascii	"CapSense_sensorBaseline\000"
 6694      656E7365 
 6694      5F73656E 
 6694      736F7242 
 6694      6173656C 
 6695              	.LASF88:
 6696 0973 6D617869 		.ascii	"maximum\000"
 6696      6D756D00 
 6697              	.LASF17:
 6698 097b 73697A65 		.ascii	"sizetype\000"
 6698      74797065 
 6698      00
 6699              	.LASF5:
 6700 0984 6C6F6E67 		.ascii	"long unsigned int\000"
 6700      20756E73 
 6700      69676E65 
 6700      6420696E 
 6700      7400
 6701              	.LASF48:
 6702 0996 706F696E 		.ascii	"pointers\000"
 6702      74657273 
 6702      00
 6703              	.LASF93:
 6704 099f 6E6F6973 		.ascii	"noiseThreshold\000"
 6704      65546872 
 6704      6573686F 
 6704      6C6400
 6705              	.LASF31:
 6706 09ae 70726576 		.ascii	"previousSampleTbl\000"
 6706      696F7573 
 6706      53616D70 
 6706      6C655462 
 6706      6C00
 6707              	.LASF71:
 6708 09c0 43617053 		.ascii	"CapSense_SetDebounce\000"
 6708      656E7365 
 6708      5F536574 
 6708      4465626F 
 6708      756E6365 
 6709              	.LASF76:
 6710 09d5 66696E67 		.ascii	"fingerThreshold\000"
 6710      65725468 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 178


 6710      72657368 
 6710      6F6C6400 
 6711              	.LASF22:
 6712 09e5 63686172 		.ascii	"chargeDivTbl\000"
 6712      67654469 
 6712      7654626C 
 6712      00
 6713              	.LASF1:
 6714 09f2 756E7369 		.ascii	"unsigned char\000"
 6714      676E6564 
 6714      20636861 
 6714      7200
 6715              	.LASF136:
 6716 0a00 43617053 		.ascii	"CapSense_noiseThreshold\000"
 6716      656E7365 
 6716      5F6E6F69 
 6716      73655468 
 6716      72657368 
 6717              	.LASF75:
 6718 0a18 6465626F 		.ascii	"debounceIndex\000"
 6718      756E6365 
 6718      496E6465 
 6718      7800
 6719              	.LASF53:
 6720 0a26 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 6720      656E7365 
 6720      5F496E69 
 6720      7469616C 
 6720      697A6541 
 6721              	.LASF59:
 6722 0a46 43617053 		.ascii	"CapSense_GetBaselineData\000"
 6722      656E7365 
 6722      5F476574 
 6722      42617365 
 6722      6C696E65 
 6723              	.LASF72:
 6724 0a5f 43617053 		.ascii	"CapSense_SetLowBaselineReset\000"
 6724      656E7365 
 6724      5F536574 
 6724      4C6F7742 
 6724      6173656C 
 6725              	.LASF21:
 6726 0a7c 73656E73 		.ascii	"sensetivityTbl\000"
 6726      65746976 
 6726      69747954 
 6726      626C00
 6727              	.LASF149:
 6728 0a8b 43617053 		.ascii	"CapSense_SetBitValue\000"
 6728      656E7365 
 6728      5F536574 
 6728      42697456 
 6728      616C7565 
 6729              	.LASF123:
 6730 0aa0 43617053 		.ascii	"CapSense_centroidMult\000"
 6730      656E7365 
 6730      5F63656E 
 6730      74726F69 
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 179


 6730      644D756C 
 6731              	.LASF153:
 6732 0ab6 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_CSHL.c\000"
 6732      72617465 
 6732      645F536F 
 6732      75726365 
 6732      5C50536F 
 6733              	.LASF148:
 6734 0add 43617053 		.ascii	"CapSense_GetBitValue\000"
 6734      656E7365 
 6734      5F476574 
 6734      42697456 
 6734      616C7565 
 6735              	.LASF81:
 6736 0af2 73746174 		.ascii	"state\000"
 6736      6500
 6737              	.LASF144:
 6738 0af8 43617053 		.ascii	"CapSense_enableRawFilters\000"
 6738      656E7365 
 6738      5F656E61 
 6738      626C6552 
 6738      61774669 
 6739              	.LASF23:
 6740 0b12 6D6F6444 		.ascii	"modDivTbl\000"
 6740      69765462 
 6740      6C00
 6741              	.LASF0:
 6742 0b1c 7369676E 		.ascii	"signed char\000"
 6742      65642063 
 6742      68617200 
 6743              	.LASF3:
 6744 0b28 73686F72 		.ascii	"short unsigned int\000"
 6744      7420756E 
 6744      7369676E 
 6744      65642069 
 6744      6E7400
 6745              	.LASF100:
 6746 0b3b 43617053 		.ascii	"CapSense_GetRadialCentroidPos\000"
 6746      656E7365 
 6746      5F476574 
 6746      52616469 
 6746      616C4365 
 6747              	.LASF41:
 6748 0b59 70747253 		.ascii	"ptrSetBitValue\000"
 6748      65744269 
 6748      7456616C 
 6748      756500
 6749              	.LASF99:
 6750 0b68 43617053 		.ascii	"CapSense_MedianFilter\000"
 6750      656E7365 
 6750      5F4D6564 
 6750      69616E46 
 6750      696C7465 
 6751              	.LASF109:
 6752 0b7e 74656D70 		.ascii	"tempRaw\000"
 6752      52617700 
 6753              	.LASF119:
ARM GAS  C:\Users\TERENC~1\AppData\Local\Temp\ccjR28lu.s 			page 180


 6754 0b86 43617053 		.ascii	"CapSense_GetDebounce\000"
 6754      656E7365 
 6754      5F476574 
 6754      4465626F 
 6754      756E6365 
 6755              	.LASF78:
 6756 0b9b 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 6756      656E7365 
 6756      5F436865 
 6756      636B4973 
 6756      57696467 
 6757              	.LASF9:
 6758 0bb8 75696E74 		.ascii	"uint8\000"
 6758      3800
 6759              	.LASF15:
 6760 0bbe 646F7562 		.ascii	"double\000"
 6760      6C6500
 6761              	.LASF142:
 6762 0bc5 43617053 		.ascii	"CapSense_rawFilterData1\000"
 6762      656E7365 
 6762      5F726177 
 6762      46696C74 
 6762      65724461 
 6763              	.LASF95:
 6764 0bdd 706F7369 		.ascii	"position\000"
 6764      74696F6E 
 6764      00
 6765              	.LASF132:
 6766 0be6 43617053 		.ascii	"CapSense_sensorOnMask\000"
 6766      656E7365 
 6766      5F73656E 
 6766      736F724F 
 6766      6E4D6173 
 6767              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
